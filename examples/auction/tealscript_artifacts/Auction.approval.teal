#pragma version 8
	b main

bare_route_create:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	==
	&&
	assert
	byte 0x
	dupn 0
	callsub create
	int 1
	return

create:
	proto 1 0

	// examples/auction/auction.algo.ts:17
	// this.auctionEnd.put(0)
	byte "auctionEnd"
	int 0
	app_global_put

	// examples/auction/auction.algo.ts:18
	// this.highestBid.put(0)
	byte "highestBid"
	int 0
	app_global_put

	// examples/auction/auction.algo.ts:19
	// this.asaAmt.put(0)
	byte "asaAmt"
	int 0
	app_global_put

	// examples/auction/auction.algo.ts:20
	// this.asa.put(Asset.zeroIndex)
	byte "asa"
	int 0
	app_global_put

	// examples/auction/auction.algo.ts:23
	// this.highestBidder.put(globals.zeroAddress)
	byte "highestBidder"
	global ZeroAddress
	app_global_put
	retsub

abi_route_optIntoAsset:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	!=
	&&
	assert
	byte 0x
	dupn 0
	txna ApplicationArgs 1
	btoi
	txnas Assets
	callsub optIntoAsset
	int 1
	return

optIntoAsset:
	proto 2 0

	// Only allow app creator to opt the app account into a ASA
	// examples/auction/auction.algo.ts:28
	// assert(this.txn.sender === globals.creatorAddress)
	txn Sender
	global CreatorAddress
	==
	assert

	// Verify a ASA hasn't already been opted into
	// examples/auction/auction.algo.ts:31
	// assert(this.asa.get() === Asset.zeroIndex)
	byte "asa"
	app_global_get
	int 0
	==
	assert

	// Save ASA ID in global state
	// examples/auction/auction.algo.ts:34
	// this.asa.put(asset)
	byte "asa"
	frame_dig -1 // asset: asset
	app_global_put

	// Submit opt-in transaction: 0 asset transfer to self
	// examples/auction/auction.algo.ts:37
	// sendAssetTransfer({
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// examples/auction/auction.algo.ts:38
	// assetReceiver: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field AssetReceiver

	// examples/auction/auction.algo.ts:39
	// xferAsset: asset
	frame_dig -1 // asset: asset
	itxn_field XferAsset

	// examples/auction/auction.algo.ts:40
	// assetAmount: 0
	int 0
	itxn_field AssetAmount

	// examples/auction/auction.algo.ts:41
	// fee: 0
	int 0
	itxn_field Fee
	itxn_submit
	retsub

abi_route_startAuction:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	!=
	&&
	assert
	byte 0x
	dupn 0
	txn GroupIndex
	int 1
	-
	txna ApplicationArgs 2
	btoi
	txna ApplicationArgs 1
	btoi
	callsub startAuction
	int 1
	return

startAuction:
	proto 4 0

	// examples/auction/auction.algo.ts:46
	// assert(this.txn.sender === globals.creatorAddress)
	txn Sender
	global CreatorAddress
	==
	assert

	// Ensure the auction hasn't already been started
	// examples/auction/auction.algo.ts:49
	// assert(this.auctionEnd.get() === 0)
	byte "auctionEnd"
	app_global_get
	int 0
	==
	assert

	// Verify axfer
	// examples/auction/auction.algo.ts:52
	// assert(axfer.assetReceiver === this.app.address)
	frame_dig -3 // axfer: assettransfertxn
	gtxns AssetReceiver
	txna Applications 0
	app_params_get AppAddress
	assert
	==
	assert

	// Set global state
	// examples/auction/auction.algo.ts:55
	// this.asaAmt.put(axfer.assetAmount)
	byte "asaAmt"
	frame_dig -3 // axfer: assettransfertxn
	gtxns AssetAmount
	app_global_put

	// examples/auction/auction.algo.ts:56
	// this.auctionEnd.put(globals.latestTimestamp + length)
	byte "auctionEnd"
	global LatestTimestamp
	frame_dig -2 // length: uint64
	+
	app_global_put

	// examples/auction/auction.algo.ts:57
	// this.highestBid.put(startingPrice)
	byte "highestBid"
	frame_dig -1 // startingPrice: uint64
	app_global_put
	retsub

pay:
	proto 3 0

	// examples/auction/auction.algo.ts:61
	// sendPayment({
	itxn_begin
	int pay
	itxn_field TypeEnum

	// examples/auction/auction.algo.ts:64
	// receiver: receiver
	frame_dig -1 // receiver: account
	itxn_field Receiver

	// examples/auction/auction.algo.ts:66
	// amount: amount
	frame_dig -2 // amount: uint64
	itxn_field Amount

	// examples/auction/auction.algo.ts:67
	// fee: 0
	int 0
	itxn_field Fee
	itxn_submit
	retsub

abi_route_bid:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	!=
	&&
	assert
	byte 0x
	dupn 0
	txna ApplicationArgs 1
	btoi
	txnas Accounts
	txn GroupIndex
	int 1
	-
	callsub bid
	int 1
	return

bid:
	proto 3 0

	// Ensure auction hasn't ended
	// examples/auction/auction.algo.ts:74
	// assert(globals.latestTimestamp < this.auctionEnd.get())
	global LatestTimestamp
	byte "auctionEnd"
	app_global_get
	<
	assert

	// Verify payment transaction
	// examples/auction/auction.algo.ts:77
	// assert(payment.amount > this.highestBid.get())
	frame_dig -1 // payment: paytxn
	gtxns Amount
	byte "highestBid"
	app_global_get
	>
	assert

	// examples/auction/auction.algo.ts:78
	// assert(this.txn.sender === payment.sender)
	txn Sender
	frame_dig -1 // payment: paytxn
	gtxns Sender
	==
	assert

	// Return previous bid if there was one
	// if0_condition
	// examples/auction/auction.algo.ts:81
	// this.highestBidder.get() !== globals.zeroAddress
	byte "highestBidder"
	app_global_get
	global ZeroAddress
	!=
	bz if0_end

	// if0_consequent
	// examples/auction/auction.algo.ts:82
	// this.pay(this.highestBidder.get(), this.highestBid.get())
	byte 0x
	dupn 0
	byte "highestBid"
	app_global_get
	byte "highestBidder"
	app_global_get
	callsub pay

if0_end:
	// Set global state
	// examples/auction/auction.algo.ts:86
	// this.highestBid.put(payment.amount)
	byte "highestBid"
	frame_dig -1 // payment: paytxn
	gtxns Amount
	app_global_put

	// examples/auction/auction.algo.ts:87
	// this.highestBidder.put(payment.sender)
	byte "highestBidder"
	frame_dig -1 // payment: paytxn
	gtxns Sender
	app_global_put
	retsub

abi_route_claimBid:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	!=
	&&
	assert
	byte 0x
	dupn 0
	callsub claimBid
	int 1
	return

claimBid:
	proto 1 0

	// examples/auction/auction.algo.ts:93
	// this.pay(globals.creatorAddress, this.highestBid.get())
	byte 0x
	dupn 0
	byte "highestBid"
	app_global_get
	global CreatorAddress
	callsub pay
	retsub

abi_route_claim_asset:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	!=
	&&
	assert
	byte 0x
	dupn 0
	txna ApplicationArgs 2
	btoi
	txnas Accounts
	txna ApplicationArgs 1
	btoi
	txnas Assets
	callsub claim_asset
	int 1
	return

claim_asset:
	proto 3 0

	// Send ASA to highest bidder
	// examples/auction/auction.algo.ts:100
	// sendAssetTransfer({
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// examples/auction/auction.algo.ts:101
	// assetReceiver: this.highestBidder.get()
	byte "highestBidder"
	app_global_get
	itxn_field AssetReceiver

	// examples/auction/auction.algo.ts:102
	// xferAsset: this.asa.get()
	byte "asa"
	app_global_get
	itxn_field XferAsset

	// examples/auction/auction.algo.ts:103
	// assetAmount: this.asaAmt.get()
	byte "asaAmt"
	app_global_get
	itxn_field AssetAmount

	// examples/auction/auction.algo.ts:104
	// fee: 0
	int 0
	itxn_field Fee

	// examples/auction/auction.algo.ts:105
	// assetCloseTo: assetCreator
	frame_dig -2 // assetCreator: account
	itxn_field AssetCloseTo
	itxn_submit
	retsub

bare_route_DeleteApplication:
	txn OnCompletion
	int DeleteApplication
	==
	txn ApplicationID
	int 0
	!=
	&&
	assert
	byte 0x
	dupn 0
	callsub delete
	int 1
	return

delete:
	proto 1 0

	// examples/auction/auction.algo.ts:111
	// sendPayment({
	itxn_begin
	int pay
	itxn_field TypeEnum

	// examples/auction/auction.algo.ts:112
	// fee: 0
	int 0
	itxn_field Fee

	// examples/auction/auction.algo.ts:113
	// receiver: globals.creatorAddress
	global CreatorAddress
	itxn_field Receiver

	// examples/auction/auction.algo.ts:114
	// closeRemainderTo: globals.creatorAddress
	global CreatorAddress
	itxn_field CloseRemainderTo

	// examples/auction/auction.algo.ts:115
	// amount: 0
	int 0
	itxn_field Amount
	itxn_submit
	retsub

main:
	txn NumAppArgs
	bnz route_abi
	txn ApplicationID
	int 0
	==
	bnz bare_route_create
	txn OnCompletion
	int DeleteApplication
	==
	int 1
	match bare_route_DeleteApplication

route_abi:
	method "optIntoAsset(asset)void"
	method "startAuction(uint64,uint64,axfer)void"
	method "bid(pay,account)void"
	method "claimBid()void"
	method "claim_asset(asset,account)void"
	txna ApplicationArgs 0
	match abi_route_optIntoAsset abi_route_startAuction abi_route_bid abi_route_claimBid abi_route_claim_asset