#pragma version 10
intcblock 0 1 6 200_000 4
bytecblock 0x0a2006010003040620260404151f7c7504b8447b3604d2024c7304c7e260af31181481060b3119088d0c007600000000000000000000006800000000000000000000008004151f7c75361a02570200361a015702008800061650b08101438a0201b18103b2108bffb2268bfeb2258101b2228100b201b3b43c89361a02491581201244361a01178800038101438a0200b18104b2108bfeb2148101b2128bffb2118100b201b3898101438004b8447b36361a008e01fff0008004d2024c738004c7e260af361a008e02ff76ffad00 0xb8447b36 0x00064d79204e4654 0x00044d4e4654 0x151f7c75 0xd2024c73 0xc7e260af 0x45ded8e0 0x 0x0a

// This TEAL was generated by TEALScript v0.102.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// mintAndGetAsset()uint64
*abi_route_mintAndGetAsset:
	// The ABI return prefix
	byte 0x151f7c75

	// execute mintAndGetAsset()uint64
	callsub mintAndGetAsset
	itob
	concat
	log
	int 1
	return

// mintAndGetAsset(): AssetID
mintAndGetAsset:
	proto 0 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x
	dup

	// examples/itxns/itxns.algo.ts:25
	// sendMethodCall<typeof NFTFactory.prototype.createApplication>({
	//       clearStateProgram: NFTFactory.clearProgram(),
	//       approvalProgram: NFTFactory.approvalProgram(),
	//     })
	itxn_begin
	int 6 // appl
	itxn_field TypeEnum
	byte 0xb8447b36 // method "createApplication()void"
	itxn_field ApplicationArgs

	// examples/itxns/itxns.algo.ts:26
	// clearStateProgram: NFTFactory.clearProgram()
	byte 0x0a
	itxn_field ClearStateProgram

	// examples/itxns/itxns.algo.ts:27
	// approvalProgram: NFTFactory.approvalProgram()
	byte 0x0a2006010003040620260404151f7c7504b8447b3604d2024c7304c7e260af31181481060b3119088d0c007600000000000000000000006800000000000000000000008004151f7c75361a02570200361a015702008800061650b08101438a0201b18103b2108bffb2268bfeb2258101b2228100b201b3b43c89361a02491581201244361a01178800038101438a0200b18104b2108bfeb2148101b2128bffb2118100b201b3898101438004b8447b36361a008e01fff0008004d2024c738004c7e260af361a008e02ff76ffad00
	itxn_field ApprovalProgram

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// examples/itxns/itxns.algo.ts:30
	// factoryApp = this.itxn.createdApplicationID
	itxn CreatedApplicationID
	frame_bury 0 // factoryApp: uint64

	// examples/itxns/itxns.algo.ts:32
	// sendPayment({
	//       amount: 200_000,
	//       receiver: factoryApp.address,
	//     })
	itxn_begin
	int 1 // pay
	itxn_field TypeEnum

	// examples/itxns/itxns.algo.ts:33
	// amount: 200_000
	int 200_000
	itxn_field Amount

	// examples/itxns/itxns.algo.ts:34
	// receiver: factoryApp.address
	frame_dig 0 // factoryApp: uint64
	app_params_get AppAddress
	pop
	itxn_field Receiver

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// examples/itxns/itxns.algo.ts:37
	// createdAsset = sendMethodCall<typeof NFTFactory.prototype.createNFT>({
	//       applicationID: factoryApp,
	//       methodArgs: ['My NFT', 'MNFT'],
	//     })
	itxn_begin
	int 6 // appl
	itxn_field TypeEnum
	byte 0xd2024c73 // method "createNFT(string,string)uint64"
	itxn_field ApplicationArgs

	// examples/itxns/itxns.algo.ts:38
	// applicationID: factoryApp
	frame_dig 0 // factoryApp: uint64
	itxn_field ApplicationID

	// examples/itxns/itxns.algo.ts:39
	// methodArgs: ['My NFT', 'MNFT']
	byte 0x00064d79204e4654
	itxn_field ApplicationArgs
	byte 0x00044d4e4654
	itxn_field ApplicationArgs

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn NumLogs
	int 1
	-
	itxnas Logs
	extract 4 0
	btoi
	frame_bury 1 // createdAsset: uint64

	// examples/itxns/itxns.algo.ts:42
	// sendAssetTransfer({
	//       assetReceiver: this.app.address,
	//       assetAmount: 0,
	//       xferAsset: createdAsset,
	//     })
	itxn_begin
	int 4 // axfer
	itxn_field TypeEnum

	// examples/itxns/itxns.algo.ts:43
	// assetReceiver: this.app.address
	global CurrentApplicationAddress
	itxn_field AssetReceiver

	// examples/itxns/itxns.algo.ts:44
	// assetAmount: 0
	int 0
	itxn_field AssetAmount

	// examples/itxns/itxns.algo.ts:45
	// xferAsset: createdAsset
	frame_dig 1 // createdAsset: uint64
	itxn_field XferAsset

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// examples/itxns/itxns.algo.ts:48
	// sendMethodCall<typeof NFTFactory.prototype.transferNFT>({
	//       applicationID: factoryApp,
	//       methodArgs: [createdAsset, this.app.address],
	//     })
	itxn_begin
	int 6 // appl
	itxn_field TypeEnum
	byte 0xc7e260af // method "transferNFT(uint64,address)void"
	itxn_field ApplicationArgs

	// examples/itxns/itxns.algo.ts:49
	// applicationID: factoryApp
	frame_dig 0 // factoryApp: uint64
	itxn_field ApplicationID

	// examples/itxns/itxns.algo.ts:50
	// methodArgs: [createdAsset, this.app.address]
	frame_dig 1 // createdAsset: uint64
	itob
	itxn_field ApplicationArgs
	global CurrentApplicationAddress
	itxn_field ApplicationArgs

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// examples/itxns/itxns.algo.ts:53
	// return createdAsset;
	frame_dig 1 // createdAsset: uint64

	// set the subroutine return value
	frame_bury 0

	// pop all local variables from the stack
	popn 1
	retsub

*abi_route_createApplication:
	int 1
	return

*create_NoOp:
	byte 0xb8447b36 // method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	byte 0x45ded8e0 // method "mintAndGetAsset()uint64"
	txna ApplicationArgs 0
	match *abi_route_mintAndGetAsset

	// this contract does not implement the given ABI method for call NoOp
	err