{
  "name": "ARC72",
  "desc": "",
  "methods": [
    {
      "name": "arc72_ownerOf",
      "desc": "Returns the address of the current owner of the NFT with the given tokenId",
      "readonly": true,
      "args": [
        {
          "name": "tokenId",
          "type": "uint256",
          "desc": "The ID of the NFT"
        }
      ],
      "returns": {
        "type": "address",
        "desc": "The current owner of the NFT"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_tokenURI",
      "desc": "Returns a URI pointing to the NFT metadata",
      "readonly": true,
      "args": [
        {
          "name": "tokenId",
          "type": "uint256",
          "desc": "The ID of the NFT"
        }
      ],
      "returns": {
        "type": "byte[256]",
        "desc": "URI to token metadata"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_transferFrom",
      "desc": "Transfers ownership of an NFT",
      "args": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_approve",
      "desc": "Approve a controller for a single NFT",
      "args": [
        {
          "name": "approved",
          "type": "address",
          "desc": "Approved controller address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "desc": "The ID of the NFT"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_setApprovalForAll",
      "desc": "Approve an operator for all NFTs for a user",
      "args": [
        {
          "name": "operator",
          "type": "address",
          "desc": "Approved operator address"
        },
        {
          "name": "approved",
          "type": "bool",
          "desc": "true to give approval, false to revoke"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "mint",
      "args": [
        {
          "name": "to",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_totalSupply",
      "desc": "Returns the number of NFTs currently defined by this contract",
      "readonly": true,
      "args": [],
      "returns": {
        "type": "uint256"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_tokenByIndex",
      "desc": "Returns the token ID of the token with the given index among all NFTs defined by the contract",
      "readonly": true,
      "args": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "returns": {
        "type": "uint256"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "Token": [
      {
        "name": "owner",
        "type": "address"
      },
      {
        "name": "uri",
        "type": "byte[256]"
      },
      {
        "name": "controller",
        "type": "address"
      }
    ],
    "Control": [
      {
        "name": "owner",
        "type": "address"
      },
      {
        "name": "controller",
        "type": "address"
      }
    ]
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 1,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {
        "index": {
          "key": "aW5kZXg=",
          "keyType": "AVMBytes",
          "valueType": "uint256"
        }
      },
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {
        "tokenBox": {
          "keyType": "uint256",
          "valueType": "Token"
        },
        "controlBox": {
          "keyType": "Control",
          "valueType": "AVMBytes"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            1,
            2,
            3,
            4,
            5,
            6
          ]
        },
        {
          "teal": 3,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53
          ]
        },
        {
          "teal": 15,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            54,
            55
          ]
        },
        {
          "teal": 16,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            56
          ]
        },
        {
          "teal": 17,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            57,
            58
          ]
        },
        {
          "teal": 18,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            59
          ]
        },
        {
          "teal": 19,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            60,
            61
          ]
        },
        {
          "teal": 20,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            62
          ]
        },
        {
          "teal": 21,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88
          ]
        },
        {
          "teal": 25,
          "source": "examples/arc72/arc72.algo.ts:9",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            89
          ]
        },
        {
          "teal": 30,
          "source": "examples/arc72/arc72.algo.ts:23",
          "pc": [
            90,
            91,
            92,
            93,
            94,
            95
          ]
        },
        {
          "teal": 33,
          "source": "examples/arc72/arc72.algo.ts:24",
          "pc": [
            96,
            97,
            98
          ]
        },
        {
          "teal": 34,
          "source": "examples/arc72/arc72.algo.ts:24",
          "pc": [
            99
          ]
        },
        {
          "teal": 35,
          "source": "examples/arc72/arc72.algo.ts:24",
          "pc": [
            100
          ]
        },
        {
          "teal": 36,
          "source": "examples/arc72/arc72.algo.ts:24",
          "pc": [
            101,
            102
          ]
        },
        {
          "teal": 37,
          "source": "examples/arc72/arc72.algo.ts:24",
          "pc": [
            103
          ]
        },
        {
          "teal": 40,
          "source": "examples/arc72/arc72.algo.ts:24",
          "errorMessage": "argument 0 (tokenId) for arc72_ownerOf must be a uint256",
          "pc": [
            104
          ]
        },
        {
          "teal": 43,
          "source": "examples/arc72/arc72.algo.ts:23",
          "pc": [
            105,
            106,
            107
          ]
        },
        {
          "teal": 44,
          "source": "examples/arc72/arc72.algo.ts:23",
          "pc": [
            108
          ]
        },
        {
          "teal": 45,
          "source": "examples/arc72/arc72.algo.ts:23",
          "pc": [
            109
          ]
        },
        {
          "teal": 46,
          "source": "examples/arc72/arc72.algo.ts:23",
          "pc": [
            110,
            111
          ]
        },
        {
          "teal": 47,
          "source": "examples/arc72/arc72.algo.ts:23",
          "pc": [
            112
          ]
        },
        {
          "teal": 57,
          "source": "examples/arc72/arc72.algo.ts:23",
          "pc": [
            113,
            114,
            115
          ]
        },
        {
          "teal": 61,
          "source": "examples/arc72/arc72.algo.ts:25",
          "pc": [
            116,
            117
          ]
        },
        {
          "teal": 62,
          "source": "examples/arc72/arc72.algo.ts:25",
          "pc": [
            118,
            119
          ]
        },
        {
          "teal": 63,
          "source": "examples/arc72/arc72.algo.ts:25",
          "pc": [
            120,
            121
          ]
        },
        {
          "teal": 64,
          "source": "examples/arc72/arc72.algo.ts:25",
          "pc": [
            122
          ]
        },
        {
          "teal": 65,
          "source": "examples/arc72/arc72.algo.ts:23",
          "pc": [
            123
          ]
        },
        {
          "teal": 70,
          "source": "examples/arc72/arc72.algo.ts:35",
          "pc": [
            124,
            125,
            126,
            127,
            128,
            129
          ]
        },
        {
          "teal": 73,
          "source": "examples/arc72/arc72.algo.ts:36",
          "pc": [
            130,
            131,
            132
          ]
        },
        {
          "teal": 74,
          "source": "examples/arc72/arc72.algo.ts:36",
          "pc": [
            133
          ]
        },
        {
          "teal": 75,
          "source": "examples/arc72/arc72.algo.ts:36",
          "pc": [
            134
          ]
        },
        {
          "teal": 76,
          "source": "examples/arc72/arc72.algo.ts:36",
          "pc": [
            135,
            136
          ]
        },
        {
          "teal": 77,
          "source": "examples/arc72/arc72.algo.ts:36",
          "pc": [
            137
          ]
        },
        {
          "teal": 80,
          "source": "examples/arc72/arc72.algo.ts:36",
          "errorMessage": "argument 0 (tokenId) for arc72_tokenURI must be a uint256",
          "pc": [
            138
          ]
        },
        {
          "teal": 83,
          "source": "examples/arc72/arc72.algo.ts:35",
          "pc": [
            139,
            140,
            141
          ]
        },
        {
          "teal": 84,
          "source": "examples/arc72/arc72.algo.ts:35",
          "pc": [
            142
          ]
        },
        {
          "teal": 85,
          "source": "examples/arc72/arc72.algo.ts:35",
          "pc": [
            143
          ]
        },
        {
          "teal": 86,
          "source": "examples/arc72/arc72.algo.ts:35",
          "pc": [
            144,
            145
          ]
        },
        {
          "teal": 87,
          "source": "examples/arc72/arc72.algo.ts:35",
          "pc": [
            146
          ]
        },
        {
          "teal": 97,
          "source": "examples/arc72/arc72.algo.ts:35",
          "pc": [
            147,
            148,
            149
          ]
        },
        {
          "teal": 101,
          "source": "examples/arc72/arc72.algo.ts:37",
          "pc": [
            150,
            151
          ]
        },
        {
          "teal": 102,
          "source": "examples/arc72/arc72.algo.ts:37",
          "pc": [
            152,
            153
          ]
        },
        {
          "teal": 103,
          "source": "examples/arc72/arc72.algo.ts:37",
          "pc": [
            154,
            155,
            156
          ]
        },
        {
          "teal": 104,
          "source": "examples/arc72/arc72.algo.ts:37",
          "pc": [
            157
          ]
        },
        {
          "teal": 105,
          "source": "examples/arc72/arc72.algo.ts:35",
          "pc": [
            158
          ]
        },
        {
          "teal": 109,
          "source": "examples/arc72/arc72.algo.ts:40",
          "pc": [
            159,
            160,
            161
          ]
        },
        {
          "teal": 113,
          "source": "examples/arc72/arc72.algo.ts:41",
          "pc": [
            162,
            163
          ]
        },
        {
          "teal": 114,
          "source": "examples/arc72/arc72.algo.ts:41",
          "pc": [
            164,
            165
          ]
        },
        {
          "teal": 115,
          "source": "examples/arc72/arc72.algo.ts:41",
          "pc": [
            166,
            167
          ]
        },
        {
          "teal": 116,
          "source": "examples/arc72/arc72.algo.ts:41",
          "pc": [
            168
          ]
        },
        {
          "teal": 117,
          "source": "examples/arc72/arc72.algo.ts:40",
          "pc": [
            169
          ]
        },
        {
          "teal": 122,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            170,
            171,
            172
          ]
        },
        {
          "teal": 123,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            173
          ]
        },
        {
          "teal": 124,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            174
          ]
        },
        {
          "teal": 125,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            175,
            176
          ]
        },
        {
          "teal": 126,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            177
          ]
        },
        {
          "teal": 129,
          "source": "examples/arc72/arc72.algo.ts:47",
          "errorMessage": "argument 0 (tokenId) for arc72_transferFrom must be a uint256",
          "pc": [
            178
          ]
        },
        {
          "teal": 132,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            179,
            180,
            181
          ]
        },
        {
          "teal": 133,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            182
          ]
        },
        {
          "teal": 134,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            183
          ]
        },
        {
          "teal": 135,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            184,
            185
          ]
        },
        {
          "teal": 136,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            186
          ]
        },
        {
          "teal": 139,
          "source": "examples/arc72/arc72.algo.ts:47",
          "errorMessage": "argument 1 (to) for arc72_transferFrom must be a address",
          "pc": [
            187
          ]
        },
        {
          "teal": 142,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            188,
            189,
            190
          ]
        },
        {
          "teal": 143,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            191
          ]
        },
        {
          "teal": 144,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            192
          ]
        },
        {
          "teal": 145,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            193,
            194
          ]
        },
        {
          "teal": 146,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            195
          ]
        },
        {
          "teal": 149,
          "source": "examples/arc72/arc72.algo.ts:47",
          "errorMessage": "argument 2 (_from) for arc72_transferFrom must be a address",
          "pc": [
            196
          ]
        },
        {
          "teal": 152,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            197,
            198,
            199
          ]
        },
        {
          "teal": 153,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            200,
            201
          ]
        },
        {
          "teal": 154,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            202
          ]
        },
        {
          "teal": 160,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            203,
            204,
            205
          ]
        },
        {
          "teal": 163,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            206,
            207
          ]
        },
        {
          "teal": 164,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            208
          ]
        },
        {
          "teal": 168,
          "source": "examples/arc72/arc72.algo.ts:48",
          "pc": [
            209,
            210
          ]
        },
        {
          "teal": 169,
          "source": "examples/arc72/arc72.algo.ts:48",
          "pc": [
            211,
            212
          ]
        },
        {
          "teal": 173,
          "source": "examples/arc72/arc72.algo.ts:50",
          "pc": [
            213,
            214
          ]
        },
        {
          "teal": 174,
          "source": "examples/arc72/arc72.algo.ts:50",
          "pc": [
            215,
            216
          ]
        },
        {
          "teal": 175,
          "source": "examples/arc72/arc72.algo.ts:50",
          "pc": [
            217
          ]
        },
        {
          "teal": 176,
          "source": "examples/arc72/arc72.algo.ts:50",
          "pc": [
            218,
            219
          ]
        },
        {
          "teal": 181,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            220,
            221
          ]
        },
        {
          "teal": 182,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            222,
            223
          ]
        },
        {
          "teal": 183,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            224
          ]
        },
        {
          "teal": 184,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            225
          ]
        },
        {
          "teal": 185,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            226,
            227,
            228
          ]
        },
        {
          "teal": 186,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            229,
            230
          ]
        },
        {
          "teal": 187,
          "source": "examples/arc72/arc72.algo.ts:48",
          "pc": [
            231,
            232
          ]
        },
        {
          "teal": 188,
          "source": "examples/arc72/arc72.algo.ts:48",
          "pc": [
            233,
            234,
            235
          ]
        },
        {
          "teal": 189,
          "source": "examples/arc72/arc72.algo.ts:48",
          "pc": [
            236,
            237
          ]
        },
        {
          "teal": 190,
          "source": "examples/arc72/arc72.algo.ts:48",
          "pc": [
            238
          ]
        },
        {
          "teal": 191,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            239
          ]
        },
        {
          "teal": 192,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            240
          ]
        },
        {
          "teal": 195,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            241
          ]
        },
        {
          "teal": 196,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            242,
            243,
            244
          ]
        },
        {
          "teal": 197,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            245,
            246
          ]
        },
        {
          "teal": 198,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            247
          ]
        },
        {
          "teal": 199,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            248
          ]
        },
        {
          "teal": 200,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            249
          ]
        },
        {
          "teal": 201,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            250
          ]
        },
        {
          "teal": 204,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            251,
            252,
            253
          ]
        },
        {
          "teal": 209,
          "source": "examples/arc72/arc72.algo.ts:53",
          "pc": [
            254,
            255
          ]
        },
        {
          "teal": 210,
          "source": "examples/arc72/arc72.algo.ts:53",
          "pc": [
            256,
            257
          ]
        },
        {
          "teal": 211,
          "source": "examples/arc72/arc72.algo.ts:53",
          "pc": [
            258,
            259,
            260
          ]
        },
        {
          "teal": 212,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            261,
            262,
            263
          ]
        },
        {
          "teal": 216,
          "source": "examples/arc72/arc72.algo.ts:54",
          "errorMessage": "Transfer not authorized",
          "pc": [
            264
          ]
        },
        {
          "teal": 219,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            265
          ]
        },
        {
          "teal": 224,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            266,
            267,
            268
          ]
        },
        {
          "teal": 225,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            269
          ]
        },
        {
          "teal": 226,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            270
          ]
        },
        {
          "teal": 227,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            271,
            272
          ]
        },
        {
          "teal": 228,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            273
          ]
        },
        {
          "teal": 231,
          "source": "examples/arc72/arc72.algo.ts:64",
          "errorMessage": "argument 0 (tokenId) for arc72_approve must be a uint256",
          "pc": [
            274
          ]
        },
        {
          "teal": 234,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            275,
            276,
            277
          ]
        },
        {
          "teal": 235,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            278
          ]
        },
        {
          "teal": 236,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            279
          ]
        },
        {
          "teal": 237,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            280,
            281
          ]
        },
        {
          "teal": 238,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            282
          ]
        },
        {
          "teal": 241,
          "source": "examples/arc72/arc72.algo.ts:64",
          "errorMessage": "argument 1 (approved) for arc72_approve must be a address",
          "pc": [
            283
          ]
        },
        {
          "teal": 244,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            284,
            285,
            286
          ]
        },
        {
          "teal": 245,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            287,
            288
          ]
        },
        {
          "teal": 246,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            289
          ]
        },
        {
          "teal": 256,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            290,
            291,
            292
          ]
        },
        {
          "teal": 260,
          "source": "examples/arc72/arc72.algo.ts:65",
          "pc": [
            293,
            294
          ]
        },
        {
          "teal": 261,
          "source": "examples/arc72/arc72.algo.ts:65",
          "pc": [
            295,
            296,
            297
          ]
        },
        {
          "teal": 262,
          "source": "examples/arc72/arc72.algo.ts:65",
          "pc": [
            298,
            299
          ]
        },
        {
          "teal": 263,
          "source": "examples/arc72/arc72.algo.ts:65",
          "pc": [
            300
          ]
        },
        {
          "teal": 264,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            301
          ]
        },
        {
          "teal": 269,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            302,
            303,
            304
          ]
        },
        {
          "teal": 270,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            305
          ]
        },
        {
          "teal": 271,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            306
          ]
        },
        {
          "teal": 272,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            307,
            308
          ]
        },
        {
          "teal": 273,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            309
          ]
        },
        {
          "teal": 276,
          "source": "examples/arc72/arc72.algo.ts:76",
          "errorMessage": "argument 0 (approved) for arc72_setApprovalForAll must be a bool",
          "pc": [
            310
          ]
        },
        {
          "teal": 277,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            311,
            312
          ]
        },
        {
          "teal": 278,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            313
          ]
        },
        {
          "teal": 281,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            314,
            315,
            316
          ]
        },
        {
          "teal": 282,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            317
          ]
        },
        {
          "teal": 283,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            318
          ]
        },
        {
          "teal": 284,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            319,
            320
          ]
        },
        {
          "teal": 285,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            321
          ]
        },
        {
          "teal": 288,
          "source": "examples/arc72/arc72.algo.ts:76",
          "errorMessage": "argument 1 (operator) for arc72_setApprovalForAll must be a address",
          "pc": [
            322
          ]
        },
        {
          "teal": 291,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            323,
            324,
            325
          ]
        },
        {
          "teal": 292,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            326,
            327
          ]
        },
        {
          "teal": 293,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            328
          ]
        },
        {
          "teal": 304,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            329,
            330,
            331
          ]
        },
        {
          "teal": 307,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            332,
            333
          ]
        },
        {
          "teal": 311,
          "source": "examples/arc72/arc72.algo.ts:77",
          "pc": [
            334,
            335
          ]
        },
        {
          "teal": 312,
          "source": "examples/arc72/arc72.algo.ts:77",
          "pc": [
            336,
            337
          ]
        },
        {
          "teal": 313,
          "source": "examples/arc72/arc72.algo.ts:77",
          "pc": [
            338
          ]
        },
        {
          "teal": 314,
          "source": "examples/arc72/arc72.algo.ts:77",
          "pc": [
            339,
            340
          ]
        },
        {
          "teal": 319,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            341,
            342
          ]
        },
        {
          "teal": 320,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            343,
            344,
            345
          ]
        },
        {
          "teal": 325,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            346,
            347
          ]
        },
        {
          "teal": 326,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            348
          ]
        },
        {
          "teal": 327,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            349
          ]
        },
        {
          "teal": 328,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            350
          ]
        },
        {
          "teal": 329,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            351,
            352
          ]
        },
        {
          "teal": 330,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            353
          ]
        },
        {
          "teal": 331,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            354,
            355,
            356
          ]
        },
        {
          "teal": 336,
          "source": "examples/arc72/arc72.algo.ts:80",
          "pc": [
            357,
            358
          ]
        },
        {
          "teal": 337,
          "source": "examples/arc72/arc72.algo.ts:80",
          "pc": [
            359
          ]
        },
        {
          "teal": 338,
          "source": "examples/arc72/arc72.algo.ts:80",
          "pc": [
            360
          ]
        },
        {
          "teal": 339,
          "source": "examples/arc72/arc72.algo.ts:80",
          "pc": [
            361
          ]
        },
        {
          "teal": 340,
          "source": "examples/arc72/arc72.algo.ts:80",
          "pc": [
            362,
            363,
            364
          ]
        },
        {
          "teal": 345,
          "source": "examples/arc72/arc72.algo.ts:80",
          "pc": [
            365,
            366
          ]
        },
        {
          "teal": 346,
          "source": "examples/arc72/arc72.algo.ts:80",
          "pc": [
            367
          ]
        },
        {
          "teal": 349,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            368
          ]
        },
        {
          "teal": 354,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            369,
            370,
            371
          ]
        },
        {
          "teal": 355,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            372
          ]
        },
        {
          "teal": 356,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            373
          ]
        },
        {
          "teal": 357,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            374,
            375
          ]
        },
        {
          "teal": 358,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            376
          ]
        },
        {
          "teal": 361,
          "source": "examples/arc72/arc72.algo.ts:83",
          "errorMessage": "argument 0 (to) for mint must be a address",
          "pc": [
            377
          ]
        },
        {
          "teal": 364,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            378,
            379,
            380
          ]
        },
        {
          "teal": 365,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            381,
            382
          ]
        },
        {
          "teal": 366,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            383
          ]
        },
        {
          "teal": 370,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            384,
            385,
            386
          ]
        },
        {
          "teal": 373,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            387,
            388
          ]
        },
        {
          "teal": 374,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            389
          ]
        },
        {
          "teal": 378,
          "source": "examples/arc72/arc72.algo.ts:84",
          "pc": [
            390,
            391,
            392,
            393,
            394,
            395,
            396
          ]
        },
        {
          "teal": 379,
          "source": "examples/arc72/arc72.algo.ts:84",
          "pc": [
            397
          ]
        },
        {
          "teal": 380,
          "source": "examples/arc72/arc72.algo.ts:84",
          "pc": [
            398,
            399
          ]
        },
        {
          "teal": 388,
          "source": "examples/arc72/arc72.algo.ts:87",
          "pc": [
            400,
            401
          ]
        },
        {
          "teal": 389,
          "source": "examples/arc72/arc72.algo.ts:88",
          "pc": [
            402,
            403,
            404,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            412,
            413,
            414,
            415,
            416,
            417,
            418,
            419,
            420,
            421,
            422,
            423,
            424,
            425,
            426,
            427,
            428,
            429,
            430,
            431,
            432,
            433,
            434,
            435,
            436,
            437,
            438,
            439,
            440,
            441,
            442,
            443,
            444,
            445,
            446,
            447,
            448,
            449,
            450,
            451,
            452,
            453,
            454,
            455,
            456,
            457,
            458,
            459,
            460,
            461,
            462,
            463,
            464,
            465,
            466,
            467,
            468,
            469,
            470,
            471,
            472,
            473,
            474,
            475,
            476,
            477,
            478,
            479,
            480,
            481,
            482,
            483,
            484,
            485,
            486,
            487,
            488,
            489,
            490,
            491,
            492,
            493,
            494,
            495,
            496,
            497,
            498,
            499,
            500,
            501,
            502,
            503,
            504,
            505,
            506,
            507,
            508,
            509,
            510,
            511,
            512,
            513,
            514,
            515,
            516,
            517,
            518,
            519,
            520,
            521,
            522,
            523,
            524,
            525,
            526,
            527,
            528,
            529,
            530,
            531,
            532,
            533,
            534,
            535,
            536,
            537,
            538,
            539,
            540,
            541,
            542,
            543,
            544,
            545,
            546,
            547,
            548,
            549,
            550,
            551,
            552,
            553,
            554,
            555,
            556,
            557,
            558,
            559,
            560,
            561,
            562,
            563,
            564,
            565,
            566,
            567,
            568,
            569,
            570,
            571,
            572,
            573,
            574,
            575,
            576,
            577,
            578,
            579,
            580,
            581,
            582,
            583,
            584,
            585,
            586,
            587,
            588,
            589,
            590,
            591,
            592,
            593,
            594,
            595,
            596,
            597,
            598,
            599,
            600,
            601,
            602,
            603,
            604,
            605,
            606,
            607,
            608,
            609,
            610,
            611,
            612,
            613,
            614,
            615,
            616,
            617,
            618,
            619,
            620,
            621,
            622,
            623,
            624,
            625,
            626,
            627,
            628,
            629,
            630,
            631,
            632,
            633,
            634,
            635,
            636,
            637,
            638,
            639,
            640,
            641,
            642,
            643,
            644,
            645,
            646,
            647,
            648,
            649,
            650,
            651,
            652,
            653,
            654,
            655,
            656,
            657,
            658,
            659,
            660
          ]
        },
        {
          "teal": 390,
          "source": "examples/arc72/arc72.algo.ts:88",
          "pc": [
            661
          ]
        },
        {
          "teal": 391,
          "source": "examples/arc72/arc72.algo.ts:89",
          "pc": [
            662,
            663
          ]
        },
        {
          "teal": 392,
          "source": "examples/arc72/arc72.algo.ts:89",
          "pc": [
            664
          ]
        },
        {
          "teal": 393,
          "source": "examples/arc72/arc72.algo.ts:86",
          "pc": [
            665,
            666
          ]
        },
        {
          "teal": 397,
          "source": "examples/arc72/arc72.algo.ts:92",
          "pc": [
            667,
            668
          ]
        },
        {
          "teal": 398,
          "source": "examples/arc72/arc72.algo.ts:92",
          "pc": [
            669,
            670
          ]
        },
        {
          "teal": 399,
          "source": "examples/arc72/arc72.algo.ts:92",
          "pc": [
            671
          ]
        },
        {
          "teal": 403,
          "source": "examples/arc72/arc72.algo.ts:93",
          "pc": [
            672,
            673
          ]
        },
        {
          "teal": 404,
          "source": "examples/arc72/arc72.algo.ts:93",
          "pc": [
            674,
            675
          ]
        },
        {
          "teal": 405,
          "source": "examples/arc72/arc72.algo.ts:93",
          "pc": [
            676,
            677,
            678
          ]
        },
        {
          "teal": 409,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            679,
            680,
            681,
            682,
            683,
            684,
            685
          ]
        },
        {
          "teal": 410,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            686,
            687
          ]
        },
        {
          "teal": 411,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            688,
            689,
            690,
            691,
            692,
            693,
            694,
            695,
            696,
            697,
            698,
            699,
            700,
            701,
            702,
            703,
            704,
            705,
            706,
            707,
            708,
            709,
            710,
            711,
            712,
            713,
            714,
            715,
            716,
            717,
            718,
            719,
            720,
            721
          ]
        },
        {
          "teal": 412,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            722
          ]
        },
        {
          "teal": 413,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            723
          ]
        },
        {
          "teal": 414,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            724
          ]
        },
        {
          "teal": 415,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            725,
            726,
            727
          ]
        },
        {
          "teal": 416,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            728
          ]
        },
        {
          "teal": 419,
          "source": "examples/arc72/arc72.algo.ts:94",
          "errorMessage": "index + 1 overflowed 256 bits",
          "pc": [
            729
          ]
        },
        {
          "teal": 420,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            730,
            731,
            732,
            733,
            734,
            735,
            736,
            737,
            738,
            739,
            740,
            741,
            742,
            743,
            744,
            745,
            746,
            747,
            748,
            749,
            750,
            751,
            752,
            753,
            754,
            755,
            756,
            757,
            758,
            759,
            760,
            761,
            762,
            763
          ]
        },
        {
          "teal": 421,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            764
          ]
        },
        {
          "teal": 422,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            765
          ]
        },
        {
          "teal": 423,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            766
          ]
        },
        {
          "teal": 424,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            767
          ]
        },
        {
          "teal": 425,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            768,
            769
          ]
        },
        {
          "teal": 426,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            770
          ]
        },
        {
          "teal": 427,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            771
          ]
        },
        {
          "teal": 428,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            772
          ]
        },
        {
          "teal": 429,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            773
          ]
        },
        {
          "teal": 430,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            774
          ]
        },
        {
          "teal": 435,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            775,
            776,
            777,
            778,
            779,
            780
          ]
        },
        {
          "teal": 438,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            781,
            782,
            783
          ]
        },
        {
          "teal": 439,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            784
          ]
        },
        {
          "teal": 440,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            785
          ]
        },
        {
          "teal": 441,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            786,
            787,
            788
          ]
        },
        {
          "teal": 442,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            789
          ]
        },
        {
          "teal": 445,
          "source": "examples/arc72/arc72.algo.ts:100",
          "errorMessage": "arc72_totalSupply return value overflowed 256 bits",
          "pc": [
            790
          ]
        },
        {
          "teal": 446,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            791,
            792,
            793,
            794,
            795,
            796,
            797,
            798,
            799,
            800,
            801,
            802,
            803,
            804,
            805,
            806,
            807,
            808,
            809,
            810,
            811,
            812,
            813,
            814,
            815,
            816,
            817,
            818,
            819,
            820,
            821,
            822,
            823,
            824
          ]
        },
        {
          "teal": 447,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            825
          ]
        },
        {
          "teal": 448,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            826
          ]
        },
        {
          "teal": 449,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            827
          ]
        },
        {
          "teal": 450,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            828
          ]
        },
        {
          "teal": 451,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            829,
            830
          ]
        },
        {
          "teal": 452,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            831
          ]
        },
        {
          "teal": 453,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            832
          ]
        },
        {
          "teal": 454,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            833
          ]
        },
        {
          "teal": 455,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            834
          ]
        },
        {
          "teal": 456,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            835
          ]
        },
        {
          "teal": 457,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            836,
            837
          ]
        },
        {
          "teal": 458,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            838
          ]
        },
        {
          "teal": 464,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            839,
            840,
            841
          ]
        },
        {
          "teal": 468,
          "source": "examples/arc72/arc72.algo.ts:102",
          "pc": [
            842,
            843,
            844,
            845,
            846,
            847,
            848
          ]
        },
        {
          "teal": 469,
          "source": "examples/arc72/arc72.algo.ts:102",
          "pc": [
            849
          ]
        },
        {
          "teal": 470,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            850
          ]
        },
        {
          "teal": 475,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            851,
            852,
            853,
            854,
            855,
            856
          ]
        },
        {
          "teal": 478,
          "source": "examples/arc72/arc72.algo.ts:109",
          "pc": [
            857,
            858,
            859
          ]
        },
        {
          "teal": 479,
          "source": "examples/arc72/arc72.algo.ts:109",
          "pc": [
            860
          ]
        },
        {
          "teal": 480,
          "source": "examples/arc72/arc72.algo.ts:109",
          "pc": [
            861
          ]
        },
        {
          "teal": 481,
          "source": "examples/arc72/arc72.algo.ts:109",
          "pc": [
            862,
            863
          ]
        },
        {
          "teal": 482,
          "source": "examples/arc72/arc72.algo.ts:109",
          "pc": [
            864
          ]
        },
        {
          "teal": 485,
          "source": "examples/arc72/arc72.algo.ts:109",
          "errorMessage": "argument 0 (index) for arc72_tokenByIndex must be a uint256",
          "pc": [
            865
          ]
        },
        {
          "teal": 488,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            866,
            867,
            868
          ]
        },
        {
          "teal": 489,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            869
          ]
        },
        {
          "teal": 490,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            870
          ]
        },
        {
          "teal": 491,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            871,
            872,
            873
          ]
        },
        {
          "teal": 492,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            874
          ]
        },
        {
          "teal": 495,
          "source": "examples/arc72/arc72.algo.ts:108",
          "errorMessage": "arc72_tokenByIndex return value overflowed 256 bits",
          "pc": [
            875
          ]
        },
        {
          "teal": 496,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            876,
            877,
            878,
            879,
            880,
            881,
            882,
            883,
            884,
            885,
            886,
            887,
            888,
            889,
            890,
            891,
            892,
            893,
            894,
            895,
            896,
            897,
            898,
            899,
            900,
            901,
            902,
            903,
            904,
            905,
            906,
            907,
            908,
            909
          ]
        },
        {
          "teal": 497,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            910
          ]
        },
        {
          "teal": 498,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            911
          ]
        },
        {
          "teal": 499,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            912
          ]
        },
        {
          "teal": 500,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            913
          ]
        },
        {
          "teal": 501,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            914,
            915
          ]
        },
        {
          "teal": 502,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            916
          ]
        },
        {
          "teal": 503,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            917
          ]
        },
        {
          "teal": 504,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            918
          ]
        },
        {
          "teal": 505,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            919
          ]
        },
        {
          "teal": 506,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            920
          ]
        },
        {
          "teal": 507,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            921,
            922
          ]
        },
        {
          "teal": 508,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            923
          ]
        },
        {
          "teal": 514,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            924,
            925,
            926
          ]
        },
        {
          "teal": 518,
          "source": "examples/arc72/arc72.algo.ts:110",
          "pc": [
            927,
            928
          ]
        },
        {
          "teal": 519,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            929
          ]
        },
        {
          "teal": 522,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            930,
            931
          ]
        },
        {
          "teal": 523,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            932
          ]
        },
        {
          "teal": 526,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            933,
            934,
            935,
            936,
            937,
            938
          ]
        },
        {
          "teal": 527,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            939,
            940,
            941
          ]
        },
        {
          "teal": 528,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            942,
            943,
            944,
            945
          ]
        },
        {
          "teal": 531,
          "source": "examples/arc72/arc72.algo.ts:9",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            946
          ]
        },
        {
          "teal": 534,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            947,
            948,
            949,
            950,
            951,
            952
          ]
        },
        {
          "teal": 535,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            953,
            954,
            955,
            956,
            957,
            958
          ]
        },
        {
          "teal": 536,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            959,
            960,
            961,
            962,
            963,
            964
          ]
        },
        {
          "teal": 537,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            965,
            966,
            967,
            968,
            969,
            970
          ]
        },
        {
          "teal": 538,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            971,
            972,
            973,
            974,
            975,
            976
          ]
        },
        {
          "teal": 539,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            977,
            978,
            979,
            980,
            981,
            982
          ]
        },
        {
          "teal": 540,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            983,
            984,
            985,
            986,
            987,
            988
          ]
        },
        {
          "teal": 541,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            989,
            990,
            991,
            992,
            993,
            994
          ]
        },
        {
          "teal": 542,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            995,
            996,
            997
          ]
        },
        {
          "teal": 543,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            998,
            999,
            1000,
            1001,
            1002,
            1003,
            1004,
            1005,
            1006,
            1007,
            1008,
            1009,
            1010,
            1011,
            1012,
            1013,
            1014,
            1015
          ]
        },
        {
          "teal": 546,
          "source": "examples/arc72/arc72.algo.ts:9",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            1016
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiADIAGAAiYEIP//////////////////////////////////////////BBUffHUFaW5kZXgAMRgUgQYLMRkIjQwDWgAAAAAAAAAAAAADTAAAAAAAAAAAAAAAgAQVH3x1NhoBSRWBIBJEiAAFULCBAUOKAQGL/4EAgSC6iYAEFR98dTYaAUkVgSASRIgABVCwgQFDigEBi/+BIIGAArqJigIAi/6BAIv/u4k2GgNJFYEgEkQ2GgJJFYEgEkQ2GgFJFYEgEkSIAAOBAUOKAwCAAEmL/YwAMQCL/1CMATEAi/8SSUAADDEAi/2BoAKBILoSEUlAAAaLAb1MSBFBAAqL/Yv+iP+aQgABAIk2GgJJFYEgEkQ2GgFJFYEgEkSIAAOBAUOKAgCL/oGgAov/u4k2GgJJFYEBEkSBAFM2GgFJFYEgEkSIAAOBAUOKAgCAADEAi/9QjACL/kEAC4sASbxIgAC/QgALiwC9TEhBAAOLALyJNhoBSRWBIBJEiAADgQFDigEAgABJgAVpbmRleGSMAIv/gIACaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9BUkNzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAyA1CMAYsAiwG/iwCL/4j9+IAFaW5kZXiLAIAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgSZOBgAIORIAg//////////////////////////////////////////+sSRVJgSAJTFJniYAEFR98dYgAN0mTgYACDkSAIP//////////////////////////////////////////rEkVSYEgCUxSULCBAUOKAAGABWluZGV4ZImABBUffHU2GgFJFYEgEkSIADdJk4GAAg5EgCD//////////////////////////////////////////6xJFUmBIAlMUlCwgQFDigEBi/+JgQFDgAS4RHs2NhoAjgH/8ACABHkJahSABMPB/ACABPLxlKCABLTtuk6ABHE0OV+ABKxM+t+ABGTXKnqABG2b/Sc2GgCOCPxi/IT8sv0S/Tb9ef8P/1sA",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}