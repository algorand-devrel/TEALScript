{
  "name": "ARC72",
  "desc": "",
  "methods": [
    {
      "name": "arc72_ownerOf",
      "desc": "Returns the address of the current owner of the NFT with the given tokenId",
      "readonly": true,
      "args": [
        {
          "name": "tokenId",
          "type": "uint256",
          "desc": "The ID of the NFT"
        }
      ],
      "returns": {
        "type": "address",
        "desc": "The current owner of the NFT"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_tokenURI",
      "desc": "Returns a URI pointing to the NFT metadata",
      "readonly": true,
      "args": [
        {
          "name": "tokenId",
          "type": "uint256",
          "desc": "The ID of the NFT"
        }
      ],
      "returns": {
        "type": "byte[256]",
        "desc": "URI to token metadata"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_transferFrom",
      "desc": "Transfers ownership of an NFT",
      "args": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_approve",
      "desc": "Approve a controller for a single NFT",
      "args": [
        {
          "name": "approved",
          "type": "address",
          "desc": "Approved controller address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "desc": "The ID of the NFT"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_setApprovalForAll",
      "desc": "Approve an operator for all NFTs for a user",
      "args": [
        {
          "name": "operator",
          "type": "address",
          "desc": "Approved operator address"
        },
        {
          "name": "approved",
          "type": "bool",
          "desc": "true to give approval, false to revoke"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "mint",
      "args": [
        {
          "name": "to",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_totalSupply",
      "desc": "Returns the number of NFTs currently defined by this contract",
      "readonly": true,
      "args": [],
      "returns": {
        "type": "uint256"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_tokenByIndex",
      "desc": "Returns the token ID of the token with the given index among all NFTs defined by the contract",
      "readonly": true,
      "args": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "returns": {
        "type": "uint256"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "Token": {
      "owner": "address",
      "uri": "byte[256]",
      "controller": "address"
    },
    "Control": {
      "owner": "address",
      "controller": "address"
    }
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 1,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {
        "index": {
          "key": "aW5kZXg=",
          "keyType": "bytes",
          "valueType": "uint256"
        }
      },
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {
        "tokenBox": {
          "keyType": "uint256",
          "valueType": "Token"
        },
        "controlBox": {
          "keyType": "Control",
          "valueType": "bytes"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": [
    {
      "teal": 1,
      "source": 9,
      "pc": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56
      ]
    },
    {
      "teal": 13,
      "source": 9,
      "pc": [
        57,
        58
      ]
    },
    {
      "teal": 14,
      "source": 9,
      "pc": [
        59
      ]
    },
    {
      "teal": 15,
      "source": 9,
      "pc": [
        60,
        61
      ]
    },
    {
      "teal": 16,
      "source": 9,
      "pc": [
        62
      ]
    },
    {
      "teal": 17,
      "source": 9,
      "pc": [
        63,
        64
      ]
    },
    {
      "teal": 18,
      "source": 9,
      "pc": [
        65
      ]
    },
    {
      "teal": 19,
      "source": 9,
      "pc": [
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91
      ]
    },
    {
      "teal": 23,
      "source": 9,
      "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "pc": [
        92
      ]
    },
    {
      "teal": 28,
      "source": 23,
      "pc": [
        93
      ]
    },
    {
      "teal": 31,
      "source": 24,
      "pc": [
        94,
        95,
        96
      ]
    },
    {
      "teal": 32,
      "source": 24,
      "pc": [
        97
      ]
    },
    {
      "teal": 33,
      "source": 24,
      "pc": [
        98
      ]
    },
    {
      "teal": 34,
      "source": 24,
      "pc": [
        99
      ]
    },
    {
      "teal": 35,
      "source": 24,
      "pc": [
        100
      ]
    },
    {
      "teal": 38,
      "source": 24,
      "errorMessage": "argument 0 (tokenId) for arc72_ownerOf must be a uint256",
      "pc": [
        101
      ]
    },
    {
      "teal": 41,
      "source": 23,
      "pc": [
        102,
        103,
        104
      ]
    },
    {
      "teal": 42,
      "source": 23,
      "pc": [
        105
      ]
    },
    {
      "teal": 43,
      "source": 23,
      "pc": [
        106
      ]
    },
    {
      "teal": 44,
      "source": 23,
      "pc": [
        107
      ]
    },
    {
      "teal": 45,
      "source": 23,
      "pc": [
        108
      ]
    },
    {
      "teal": 55,
      "source": 23,
      "pc": [
        109,
        110,
        111
      ]
    },
    {
      "teal": 59,
      "source": 25,
      "pc": [
        112,
        113
      ]
    },
    {
      "teal": 60,
      "source": 25,
      "pc": [
        114
      ]
    },
    {
      "teal": 61,
      "source": 25,
      "pc": [
        115
      ]
    },
    {
      "teal": 62,
      "source": 25,
      "pc": [
        116
      ]
    },
    {
      "teal": 63,
      "source": 23,
      "pc": [
        117
      ]
    },
    {
      "teal": 68,
      "source": 35,
      "pc": [
        118
      ]
    },
    {
      "teal": 71,
      "source": 36,
      "pc": [
        119,
        120,
        121
      ]
    },
    {
      "teal": 72,
      "source": 36,
      "pc": [
        122
      ]
    },
    {
      "teal": 73,
      "source": 36,
      "pc": [
        123
      ]
    },
    {
      "teal": 74,
      "source": 36,
      "pc": [
        124
      ]
    },
    {
      "teal": 75,
      "source": 36,
      "pc": [
        125
      ]
    },
    {
      "teal": 78,
      "source": 36,
      "errorMessage": "argument 0 (tokenId) for arc72_tokenURI must be a uint256",
      "pc": [
        126
      ]
    },
    {
      "teal": 81,
      "source": 35,
      "pc": [
        127,
        128,
        129
      ]
    },
    {
      "teal": 82,
      "source": 35,
      "pc": [
        130
      ]
    },
    {
      "teal": 83,
      "source": 35,
      "pc": [
        131
      ]
    },
    {
      "teal": 84,
      "source": 35,
      "pc": [
        132
      ]
    },
    {
      "teal": 85,
      "source": 35,
      "pc": [
        133
      ]
    },
    {
      "teal": 95,
      "source": 35,
      "pc": [
        134,
        135,
        136
      ]
    },
    {
      "teal": 99,
      "source": 37,
      "pc": [
        137,
        138
      ]
    },
    {
      "teal": 100,
      "source": 37,
      "pc": [
        139
      ]
    },
    {
      "teal": 101,
      "source": 37,
      "pc": [
        140
      ]
    },
    {
      "teal": 102,
      "source": 37,
      "pc": [
        141
      ]
    },
    {
      "teal": 103,
      "source": 35,
      "pc": [
        142
      ]
    },
    {
      "teal": 107,
      "source": 40,
      "pc": [
        143,
        144,
        145
      ]
    },
    {
      "teal": 111,
      "source": 41,
      "pc": [
        146,
        147
      ]
    },
    {
      "teal": 112,
      "source": 41,
      "pc": [
        148
      ]
    },
    {
      "teal": 113,
      "source": 41,
      "pc": [
        149,
        150
      ]
    },
    {
      "teal": 114,
      "source": 41,
      "pc": [
        151
      ]
    },
    {
      "teal": 115,
      "source": 40,
      "pc": [
        152
      ]
    },
    {
      "teal": 120,
      "source": 47,
      "pc": [
        153,
        154,
        155
      ]
    },
    {
      "teal": 121,
      "source": 47,
      "pc": [
        156
      ]
    },
    {
      "teal": 122,
      "source": 47,
      "pc": [
        157
      ]
    },
    {
      "teal": 123,
      "source": 47,
      "pc": [
        158
      ]
    },
    {
      "teal": 124,
      "source": 47,
      "pc": [
        159
      ]
    },
    {
      "teal": 127,
      "source": 47,
      "errorMessage": "argument 0 (tokenId) for arc72_transferFrom must be a uint256",
      "pc": [
        160
      ]
    },
    {
      "teal": 130,
      "source": 47,
      "pc": [
        161,
        162,
        163
      ]
    },
    {
      "teal": 131,
      "source": 47,
      "pc": [
        164
      ]
    },
    {
      "teal": 132,
      "source": 47,
      "pc": [
        165
      ]
    },
    {
      "teal": 133,
      "source": 47,
      "pc": [
        166
      ]
    },
    {
      "teal": 134,
      "source": 47,
      "pc": [
        167
      ]
    },
    {
      "teal": 137,
      "source": 47,
      "errorMessage": "argument 1 (to) for arc72_transferFrom must be a address",
      "pc": [
        168
      ]
    },
    {
      "teal": 140,
      "source": 47,
      "pc": [
        169,
        170,
        171
      ]
    },
    {
      "teal": 141,
      "source": 47,
      "pc": [
        172
      ]
    },
    {
      "teal": 142,
      "source": 47,
      "pc": [
        173
      ]
    },
    {
      "teal": 143,
      "source": 47,
      "pc": [
        174
      ]
    },
    {
      "teal": 144,
      "source": 47,
      "pc": [
        175
      ]
    },
    {
      "teal": 147,
      "source": 47,
      "errorMessage": "argument 2 (_from) for arc72_transferFrom must be a address",
      "pc": [
        176
      ]
    },
    {
      "teal": 150,
      "source": 47,
      "pc": [
        177,
        178,
        179
      ]
    },
    {
      "teal": 151,
      "source": 47,
      "pc": [
        180
      ]
    },
    {
      "teal": 152,
      "source": 47,
      "pc": [
        181
      ]
    },
    {
      "teal": 158,
      "source": 47,
      "pc": [
        182,
        183,
        184
      ]
    },
    {
      "teal": 161,
      "source": 47,
      "pc": [
        185
      ]
    },
    {
      "teal": 162,
      "source": 47,
      "pc": [
        186
      ]
    },
    {
      "teal": 166,
      "source": 48,
      "pc": [
        187,
        188
      ]
    },
    {
      "teal": 167,
      "source": 48,
      "pc": [
        189,
        190
      ]
    },
    {
      "teal": 171,
      "source": 50,
      "pc": [
        191,
        192
      ]
    },
    {
      "teal": 172,
      "source": 50,
      "pc": [
        193,
        194
      ]
    },
    {
      "teal": 173,
      "source": 50,
      "pc": [
        195
      ]
    },
    {
      "teal": 174,
      "source": 50,
      "pc": [
        196,
        197
      ]
    },
    {
      "teal": 179,
      "source": 52,
      "pc": [
        198,
        199
      ]
    },
    {
      "teal": 180,
      "source": 52,
      "pc": [
        200,
        201
      ]
    },
    {
      "teal": 181,
      "source": 52,
      "pc": [
        202
      ]
    },
    {
      "teal": 182,
      "source": 52,
      "pc": [
        203
      ]
    },
    {
      "teal": 183,
      "source": 52,
      "pc": [
        204,
        205,
        206
      ]
    },
    {
      "teal": 184,
      "source": 52,
      "pc": [
        207,
        208
      ]
    },
    {
      "teal": 185,
      "source": 48,
      "pc": [
        209,
        210
      ]
    },
    {
      "teal": 186,
      "source": 48,
      "pc": [
        211,
        212
      ]
    },
    {
      "teal": 187,
      "source": 48,
      "pc": [
        213
      ]
    },
    {
      "teal": 188,
      "source": 48,
      "pc": [
        214
      ]
    },
    {
      "teal": 189,
      "source": 52,
      "pc": [
        215
      ]
    },
    {
      "teal": 190,
      "source": 52,
      "pc": [
        216
      ]
    },
    {
      "teal": 193,
      "source": 52,
      "pc": [
        217
      ]
    },
    {
      "teal": 194,
      "source": 52,
      "pc": [
        218,
        219,
        220
      ]
    },
    {
      "teal": 195,
      "source": 52,
      "pc": [
        221,
        222
      ]
    },
    {
      "teal": 196,
      "source": 52,
      "pc": [
        223
      ]
    },
    {
      "teal": 197,
      "source": 52,
      "pc": [
        224
      ]
    },
    {
      "teal": 198,
      "source": 52,
      "pc": [
        225
      ]
    },
    {
      "teal": 199,
      "source": 52,
      "pc": [
        226
      ]
    },
    {
      "teal": 202,
      "source": 52,
      "pc": [
        227,
        228,
        229
      ]
    },
    {
      "teal": 207,
      "source": 53,
      "pc": [
        230,
        231
      ]
    },
    {
      "teal": 208,
      "source": 53,
      "pc": [
        232,
        233
      ]
    },
    {
      "teal": 209,
      "source": 53,
      "pc": [
        234,
        235,
        236
      ]
    },
    {
      "teal": 210,
      "source": 52,
      "pc": [
        237,
        238,
        239
      ]
    },
    {
      "teal": 214,
      "source": 54,
      "errorMessage": "Transfer not authorized",
      "pc": [
        240
      ]
    },
    {
      "teal": 217,
      "source": 47,
      "pc": [
        241
      ]
    },
    {
      "teal": 222,
      "source": 64,
      "pc": [
        242,
        243,
        244
      ]
    },
    {
      "teal": 223,
      "source": 64,
      "pc": [
        245
      ]
    },
    {
      "teal": 224,
      "source": 64,
      "pc": [
        246
      ]
    },
    {
      "teal": 225,
      "source": 64,
      "pc": [
        247
      ]
    },
    {
      "teal": 226,
      "source": 64,
      "pc": [
        248
      ]
    },
    {
      "teal": 229,
      "source": 64,
      "errorMessage": "argument 0 (tokenId) for arc72_approve must be a uint256",
      "pc": [
        249
      ]
    },
    {
      "teal": 232,
      "source": 64,
      "pc": [
        250,
        251,
        252
      ]
    },
    {
      "teal": 233,
      "source": 64,
      "pc": [
        253
      ]
    },
    {
      "teal": 234,
      "source": 64,
      "pc": [
        254
      ]
    },
    {
      "teal": 235,
      "source": 64,
      "pc": [
        255
      ]
    },
    {
      "teal": 236,
      "source": 64,
      "pc": [
        256
      ]
    },
    {
      "teal": 239,
      "source": 64,
      "errorMessage": "argument 1 (approved) for arc72_approve must be a address",
      "pc": [
        257
      ]
    },
    {
      "teal": 242,
      "source": 64,
      "pc": [
        258,
        259,
        260
      ]
    },
    {
      "teal": 243,
      "source": 64,
      "pc": [
        261
      ]
    },
    {
      "teal": 244,
      "source": 64,
      "pc": [
        262
      ]
    },
    {
      "teal": 254,
      "source": 64,
      "pc": [
        263,
        264,
        265
      ]
    },
    {
      "teal": 258,
      "source": 65,
      "pc": [
        266,
        267
      ]
    },
    {
      "teal": 259,
      "source": 65,
      "pc": [
        268,
        269
      ]
    },
    {
      "teal": 260,
      "source": 65,
      "pc": [
        270,
        271
      ]
    },
    {
      "teal": 261,
      "source": 65,
      "pc": [
        272
      ]
    },
    {
      "teal": 262,
      "source": 64,
      "pc": [
        273
      ]
    },
    {
      "teal": 267,
      "source": 76,
      "pc": [
        274,
        275,
        276
      ]
    },
    {
      "teal": 268,
      "source": 76,
      "pc": [
        277
      ]
    },
    {
      "teal": 269,
      "source": 76,
      "pc": [
        278
      ]
    },
    {
      "teal": 270,
      "source": 76,
      "pc": [
        279
      ]
    },
    {
      "teal": 271,
      "source": 76,
      "pc": [
        280
      ]
    },
    {
      "teal": 274,
      "source": 76,
      "errorMessage": "argument 0 (approved) for arc72_setApprovalForAll must be a bool",
      "pc": [
        281
      ]
    },
    {
      "teal": 275,
      "source": 76,
      "pc": [
        282
      ]
    },
    {
      "teal": 276,
      "source": 76,
      "pc": [
        283
      ]
    },
    {
      "teal": 279,
      "source": 76,
      "pc": [
        284,
        285,
        286
      ]
    },
    {
      "teal": 280,
      "source": 76,
      "pc": [
        287
      ]
    },
    {
      "teal": 281,
      "source": 76,
      "pc": [
        288
      ]
    },
    {
      "teal": 282,
      "source": 76,
      "pc": [
        289
      ]
    },
    {
      "teal": 283,
      "source": 76,
      "pc": [
        290
      ]
    },
    {
      "teal": 286,
      "source": 76,
      "errorMessage": "argument 1 (operator) for arc72_setApprovalForAll must be a address",
      "pc": [
        291
      ]
    },
    {
      "teal": 289,
      "source": 76,
      "pc": [
        292,
        293,
        294
      ]
    },
    {
      "teal": 290,
      "source": 76,
      "pc": [
        295
      ]
    },
    {
      "teal": 291,
      "source": 76,
      "pc": [
        296
      ]
    },
    {
      "teal": 302,
      "source": 76,
      "pc": [
        297,
        298,
        299
      ]
    },
    {
      "teal": 305,
      "source": 76,
      "pc": [
        300
      ]
    },
    {
      "teal": 309,
      "source": 77,
      "pc": [
        301,
        302
      ]
    },
    {
      "teal": 310,
      "source": 77,
      "pc": [
        303,
        304
      ]
    },
    {
      "teal": 311,
      "source": 77,
      "pc": [
        305
      ]
    },
    {
      "teal": 312,
      "source": 77,
      "pc": [
        306,
        307
      ]
    },
    {
      "teal": 317,
      "source": 79,
      "pc": [
        308,
        309
      ]
    },
    {
      "teal": 318,
      "source": 79,
      "pc": [
        310,
        311,
        312
      ]
    },
    {
      "teal": 323,
      "source": 79,
      "pc": [
        313,
        314
      ]
    },
    {
      "teal": 324,
      "source": 79,
      "pc": [
        315
      ]
    },
    {
      "teal": 325,
      "source": 79,
      "pc": [
        316
      ]
    },
    {
      "teal": 326,
      "source": 79,
      "pc": [
        317
      ]
    },
    {
      "teal": 327,
      "source": 79,
      "pc": [
        318
      ]
    },
    {
      "teal": 328,
      "source": 79,
      "pc": [
        319
      ]
    },
    {
      "teal": 329,
      "source": 79,
      "pc": [
        320,
        321,
        322
      ]
    },
    {
      "teal": 334,
      "source": 80,
      "pc": [
        323,
        324
      ]
    },
    {
      "teal": 335,
      "source": 80,
      "pc": [
        325
      ]
    },
    {
      "teal": 336,
      "source": 80,
      "pc": [
        326
      ]
    },
    {
      "teal": 337,
      "source": 80,
      "pc": [
        327
      ]
    },
    {
      "teal": 338,
      "source": 80,
      "pc": [
        328,
        329,
        330
      ]
    },
    {
      "teal": 343,
      "source": 80,
      "pc": [
        331,
        332
      ]
    },
    {
      "teal": 344,
      "source": 80,
      "pc": [
        333
      ]
    },
    {
      "teal": 347,
      "source": 76,
      "pc": [
        334
      ]
    },
    {
      "teal": 352,
      "source": 83,
      "pc": [
        335,
        336,
        337
      ]
    },
    {
      "teal": 353,
      "source": 83,
      "pc": [
        338
      ]
    },
    {
      "teal": 354,
      "source": 83,
      "pc": [
        339
      ]
    },
    {
      "teal": 355,
      "source": 83,
      "pc": [
        340
      ]
    },
    {
      "teal": 356,
      "source": 83,
      "pc": [
        341
      ]
    },
    {
      "teal": 359,
      "source": 83,
      "errorMessage": "argument 0 (to) for mint must be a address",
      "pc": [
        342
      ]
    },
    {
      "teal": 362,
      "source": 83,
      "pc": [
        343,
        344,
        345
      ]
    },
    {
      "teal": 363,
      "source": 83,
      "pc": [
        346
      ]
    },
    {
      "teal": 364,
      "source": 83,
      "pc": [
        347
      ]
    },
    {
      "teal": 368,
      "source": 83,
      "pc": [
        348,
        349,
        350
      ]
    },
    {
      "teal": 371,
      "source": 83,
      "pc": [
        351
      ]
    },
    {
      "teal": 372,
      "source": 83,
      "pc": [
        352
      ]
    },
    {
      "teal": 376,
      "source": 84,
      "pc": [
        353
      ]
    },
    {
      "teal": 377,
      "source": 84,
      "pc": [
        354
      ]
    },
    {
      "teal": 378,
      "source": 84,
      "pc": [
        355,
        356
      ]
    },
    {
      "teal": 386,
      "source": 87,
      "pc": [
        357,
        358
      ]
    },
    {
      "teal": 387,
      "source": 88,
      "pc": [
        359,
        360,
        361,
        362,
        363,
        364,
        365,
        366,
        367,
        368,
        369,
        370,
        371,
        372,
        373,
        374,
        375,
        376,
        377,
        378,
        379,
        380,
        381,
        382,
        383,
        384,
        385,
        386,
        387,
        388,
        389,
        390,
        391,
        392,
        393,
        394,
        395,
        396,
        397,
        398,
        399,
        400,
        401,
        402,
        403,
        404,
        405,
        406,
        407,
        408,
        409,
        410,
        411,
        412,
        413,
        414,
        415,
        416,
        417,
        418,
        419,
        420,
        421,
        422,
        423,
        424,
        425,
        426,
        427,
        428,
        429,
        430,
        431,
        432,
        433,
        434,
        435,
        436,
        437,
        438,
        439,
        440,
        441,
        442,
        443,
        444,
        445,
        446,
        447,
        448,
        449,
        450,
        451,
        452,
        453,
        454,
        455,
        456,
        457,
        458,
        459,
        460,
        461,
        462,
        463,
        464,
        465,
        466,
        467,
        468,
        469,
        470,
        471,
        472,
        473,
        474,
        475,
        476,
        477,
        478,
        479,
        480,
        481,
        482,
        483,
        484,
        485,
        486,
        487,
        488,
        489,
        490,
        491,
        492,
        493,
        494,
        495,
        496,
        497,
        498,
        499,
        500,
        501,
        502,
        503,
        504,
        505,
        506,
        507,
        508,
        509,
        510,
        511,
        512,
        513,
        514,
        515,
        516,
        517,
        518,
        519,
        520,
        521,
        522,
        523,
        524,
        525,
        526,
        527,
        528,
        529,
        530,
        531,
        532,
        533,
        534,
        535,
        536,
        537,
        538,
        539,
        540,
        541,
        542,
        543,
        544,
        545,
        546,
        547,
        548,
        549,
        550,
        551,
        552,
        553,
        554,
        555,
        556,
        557,
        558,
        559,
        560,
        561,
        562,
        563,
        564,
        565,
        566,
        567,
        568,
        569,
        570,
        571,
        572,
        573,
        574,
        575,
        576,
        577,
        578,
        579,
        580,
        581,
        582,
        583,
        584,
        585,
        586,
        587,
        588,
        589,
        590,
        591,
        592,
        593,
        594,
        595,
        596,
        597,
        598,
        599,
        600,
        601,
        602,
        603,
        604,
        605,
        606,
        607,
        608,
        609,
        610,
        611,
        612,
        613,
        614,
        615,
        616,
        617
      ]
    },
    {
      "teal": 388,
      "source": 88,
      "pc": [
        618
      ]
    },
    {
      "teal": 389,
      "source": 89,
      "pc": [
        619,
        620
      ]
    },
    {
      "teal": 390,
      "source": 89,
      "pc": [
        621
      ]
    },
    {
      "teal": 391,
      "source": 86,
      "pc": [
        622,
        623
      ]
    },
    {
      "teal": 395,
      "source": 92,
      "pc": [
        624,
        625
      ]
    },
    {
      "teal": 396,
      "source": 92,
      "pc": [
        626,
        627
      ]
    },
    {
      "teal": 397,
      "source": 92,
      "pc": [
        628
      ]
    },
    {
      "teal": 401,
      "source": 93,
      "pc": [
        629,
        630
      ]
    },
    {
      "teal": 402,
      "source": 93,
      "pc": [
        631,
        632
      ]
    },
    {
      "teal": 403,
      "source": 93,
      "pc": [
        633,
        634,
        635
      ]
    },
    {
      "teal": 407,
      "source": 94,
      "pc": [
        636
      ]
    },
    {
      "teal": 408,
      "source": 94,
      "pc": [
        637,
        638
      ]
    },
    {
      "teal": 409,
      "source": 94,
      "pc": [
        639,
        640,
        641,
        642,
        643,
        644,
        645,
        646,
        647,
        648,
        649,
        650,
        651,
        652,
        653,
        654,
        655,
        656,
        657,
        658,
        659,
        660,
        661,
        662,
        663,
        664,
        665,
        666,
        667,
        668,
        669,
        670,
        671,
        672
      ]
    },
    {
      "teal": 410,
      "source": 94,
      "pc": [
        673
      ]
    },
    {
      "teal": 411,
      "source": 94,
      "pc": [
        674
      ]
    },
    {
      "teal": 412,
      "source": 94,
      "pc": [
        675
      ]
    },
    {
      "teal": 413,
      "source": 94,
      "pc": [
        676
      ]
    },
    {
      "teal": 414,
      "source": 94,
      "pc": [
        677
      ]
    },
    {
      "teal": 417,
      "source": 94,
      "errorMessage": "index + 1 overflowed 256 bits",
      "pc": [
        678
      ]
    },
    {
      "teal": 418,
      "source": 94,
      "pc": [
        679
      ]
    },
    {
      "teal": 419,
      "source": 94,
      "pc": [
        680
      ]
    },
    {
      "teal": 420,
      "source": 94,
      "pc": [
        681
      ]
    },
    {
      "teal": 421,
      "source": 94,
      "pc": [
        682
      ]
    },
    {
      "teal": 422,
      "source": 94,
      "pc": [
        683
      ]
    },
    {
      "teal": 423,
      "source": 94,
      "pc": [
        684
      ]
    },
    {
      "teal": 424,
      "source": 94,
      "pc": [
        685
      ]
    },
    {
      "teal": 425,
      "source": 94,
      "pc": [
        686
      ]
    },
    {
      "teal": 426,
      "source": 94,
      "pc": [
        687
      ]
    },
    {
      "teal": 427,
      "source": 94,
      "pc": [
        688
      ]
    },
    {
      "teal": 428,
      "source": 83,
      "pc": [
        689
      ]
    },
    {
      "teal": 433,
      "source": 100,
      "pc": [
        690
      ]
    },
    {
      "teal": 436,
      "source": 100,
      "pc": [
        691,
        692,
        693
      ]
    },
    {
      "teal": 437,
      "source": 100,
      "pc": [
        694
      ]
    },
    {
      "teal": 438,
      "source": 100,
      "pc": [
        695
      ]
    },
    {
      "teal": 439,
      "source": 100,
      "pc": [
        696
      ]
    },
    {
      "teal": 440,
      "source": 100,
      "pc": [
        697
      ]
    },
    {
      "teal": 443,
      "source": 100,
      "errorMessage": "arc72_totalSupply return value overflowed 256 bits",
      "pc": [
        698
      ]
    },
    {
      "teal": 444,
      "source": 100,
      "pc": [
        699
      ]
    },
    {
      "teal": 445,
      "source": 100,
      "pc": [
        700
      ]
    },
    {
      "teal": 446,
      "source": 100,
      "pc": [
        701
      ]
    },
    {
      "teal": 447,
      "source": 100,
      "pc": [
        702
      ]
    },
    {
      "teal": 448,
      "source": 100,
      "pc": [
        703
      ]
    },
    {
      "teal": 449,
      "source": 100,
      "pc": [
        704
      ]
    },
    {
      "teal": 450,
      "source": 100,
      "pc": [
        705
      ]
    },
    {
      "teal": 451,
      "source": 100,
      "pc": [
        706
      ]
    },
    {
      "teal": 452,
      "source": 100,
      "pc": [
        707
      ]
    },
    {
      "teal": 453,
      "source": 100,
      "pc": [
        708
      ]
    },
    {
      "teal": 454,
      "source": 100,
      "pc": [
        709
      ]
    },
    {
      "teal": 455,
      "source": 100,
      "pc": [
        710
      ]
    },
    {
      "teal": 456,
      "source": 100,
      "pc": [
        711
      ]
    },
    {
      "teal": 462,
      "source": 100,
      "pc": [
        712,
        713,
        714
      ]
    },
    {
      "teal": 466,
      "source": 102,
      "pc": [
        715
      ]
    },
    {
      "teal": 467,
      "source": 102,
      "pc": [
        716
      ]
    },
    {
      "teal": 468,
      "source": 100,
      "pc": [
        717
      ]
    },
    {
      "teal": 473,
      "source": 108,
      "pc": [
        718
      ]
    },
    {
      "teal": 476,
      "source": 109,
      "pc": [
        719,
        720,
        721
      ]
    },
    {
      "teal": 477,
      "source": 109,
      "pc": [
        722
      ]
    },
    {
      "teal": 478,
      "source": 109,
      "pc": [
        723
      ]
    },
    {
      "teal": 479,
      "source": 109,
      "pc": [
        724
      ]
    },
    {
      "teal": 480,
      "source": 109,
      "pc": [
        725
      ]
    },
    {
      "teal": 483,
      "source": 109,
      "errorMessage": "argument 0 (index) for arc72_tokenByIndex must be a uint256",
      "pc": [
        726
      ]
    },
    {
      "teal": 486,
      "source": 108,
      "pc": [
        727,
        728,
        729
      ]
    },
    {
      "teal": 487,
      "source": 108,
      "pc": [
        730
      ]
    },
    {
      "teal": 488,
      "source": 108,
      "pc": [
        731
      ]
    },
    {
      "teal": 489,
      "source": 108,
      "pc": [
        732
      ]
    },
    {
      "teal": 490,
      "source": 108,
      "pc": [
        733
      ]
    },
    {
      "teal": 493,
      "source": 108,
      "errorMessage": "arc72_tokenByIndex return value overflowed 256 bits",
      "pc": [
        734
      ]
    },
    {
      "teal": 494,
      "source": 108,
      "pc": [
        735
      ]
    },
    {
      "teal": 495,
      "source": 108,
      "pc": [
        736
      ]
    },
    {
      "teal": 496,
      "source": 108,
      "pc": [
        737
      ]
    },
    {
      "teal": 497,
      "source": 108,
      "pc": [
        738
      ]
    },
    {
      "teal": 498,
      "source": 108,
      "pc": [
        739
      ]
    },
    {
      "teal": 499,
      "source": 108,
      "pc": [
        740
      ]
    },
    {
      "teal": 500,
      "source": 108,
      "pc": [
        741
      ]
    },
    {
      "teal": 501,
      "source": 108,
      "pc": [
        742
      ]
    },
    {
      "teal": 502,
      "source": 108,
      "pc": [
        743
      ]
    },
    {
      "teal": 503,
      "source": 108,
      "pc": [
        744
      ]
    },
    {
      "teal": 504,
      "source": 108,
      "pc": [
        745
      ]
    },
    {
      "teal": 505,
      "source": 108,
      "pc": [
        746
      ]
    },
    {
      "teal": 506,
      "source": 108,
      "pc": [
        747
      ]
    },
    {
      "teal": 512,
      "source": 108,
      "pc": [
        748,
        749,
        750
      ]
    },
    {
      "teal": 516,
      "source": 110,
      "pc": [
        751,
        752
      ]
    },
    {
      "teal": 517,
      "source": 108,
      "pc": [
        753
      ]
    },
    {
      "teal": 520,
      "source": 9,
      "pc": [
        754
      ]
    },
    {
      "teal": 521,
      "source": 9,
      "pc": [
        755
      ]
    },
    {
      "teal": 524,
      "source": 9,
      "pc": [
        756,
        757,
        758,
        759,
        760,
        761
      ]
    },
    {
      "teal": 525,
      "source": 9,
      "pc": [
        762,
        763,
        764
      ]
    },
    {
      "teal": 526,
      "source": 9,
      "pc": [
        765,
        766,
        767,
        768
      ]
    },
    {
      "teal": 529,
      "source": 9,
      "errorMessage": "this contract does not implement the given ABI method for create NoOp",
      "pc": [
        769
      ]
    },
    {
      "teal": 532,
      "source": 9,
      "pc": [
        770,
        771,
        772,
        773,
        774,
        775
      ]
    },
    {
      "teal": 533,
      "source": 9,
      "pc": [
        776,
        777,
        778,
        779,
        780,
        781
      ]
    },
    {
      "teal": 534,
      "source": 9,
      "pc": [
        782,
        783,
        784,
        785,
        786,
        787
      ]
    },
    {
      "teal": 535,
      "source": 9,
      "pc": [
        788,
        789,
        790,
        791,
        792,
        793
      ]
    },
    {
      "teal": 536,
      "source": 9,
      "pc": [
        794,
        795,
        796,
        797,
        798,
        799
      ]
    },
    {
      "teal": 537,
      "source": 9,
      "pc": [
        800,
        801,
        802,
        803,
        804,
        805
      ]
    },
    {
      "teal": 538,
      "source": 9,
      "pc": [
        806,
        807,
        808,
        809,
        810,
        811
      ]
    },
    {
      "teal": 539,
      "source": 9,
      "pc": [
        812,
        813,
        814,
        815,
        816,
        817
      ]
    },
    {
      "teal": 540,
      "source": 9,
      "pc": [
        818,
        819,
        820
      ]
    },
    {
      "teal": 541,
      "source": 9,
      "pc": [
        821,
        822,
        823,
        824,
        825,
        826,
        827,
        828,
        829,
        830,
        831,
        832,
        833,
        834,
        835,
        836,
        837,
        838
      ]
    },
    {
      "teal": 544,
      "source": 9,
      "errorMessage": "this contract does not implement the given ABI method for call NoOp",
      "pc": [
        839
      ]
    }
  ],
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiAFIAGAAgCgAiYEBBUffHUABWluZGV4IP//////////////////////////////////////////MRgUgQYLMRkIjQwCpgAAAAAAAAAAAAACmAAAAAAAAAAAAAAAKDYaAUkVIhJEiAAEULAjQ4oBAYv/JSK6iSg2GgFJFSISRIgABFCwI0OKAQGL/yIkuomKAgCL/iWL/7uJNhoDSRUiEkQ2GgJJFSISRDYaAUkVIhJEiAACI0OKAwApSYv9jAAxAIv/UIwBMQCL/xJJQAAKMQCL/SEEIroSEUlAAAaLAb1MSBFBAAqL/Yv+iP+iQgABAIk2GgJJFSISRDYaAUkVIhJEiAACI0OKAgCL/iEEi/+7iTYaAkkVIxJEJVM2GgFJFSISRIgAAiNDigIAKTEAi/9QjACL/kEACosASbxIKb9CAAuLAL1MSEEAA4sAvIk2GgFJFSISRIgAAiNDigEAKUkqZIwAi/+AgAJodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL0FSQ3MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUDIDUIwBiwCLAb+LAIv/iP4TKosAgCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaBJkyQORCusSRVJIglMUmeJKIgAEkmTJA5EK6xJFUkiCUxSULAjQ4oAASpkiSg2GgFJFSISRIgAEkmTJA5EK6xJFUkiCUxSULAjQ4oBAYv/iSNDgAS4RHs2NhoAjgH/8QCABHkJahSABMPB/ACABPLxlKCABLTtuk6ABHE0OV+ABKxM+t+ABGTXKnqABG2b/Sc2GgCOCP0W/S/9Uv2r/cv+CP9r/4cA",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 24,
      "patch": 0,
      "commitHash": "5c2cf06d"
    }
  }
}