{
  "hints": {
    "arc72_ownerOf(uint256)address": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc72_tokenURI(uint256)byte[256]": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc72_transferFrom(address,address,uint256)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc72_approve(address,uint256)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc72_setApprovalForAll(address,bool)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "mint(address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc72_totalSupply()uint256": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc72_tokenByIndex(uint256)uint256": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "index": {
          "type": "bytes",
          "key": "index"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 0
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDkKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuNjUuMAovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlcHNlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIk5PVF9JTVBMTUVOVEVEIiB3aGljaCBqdXN0IGNvbnRhaW5zICJlcnIiCnR4biBBcHBsaWNhdGlvbklECmludCAwCj4KaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoIGNyZWF0ZV9Ob09wIE5PVF9JTVBMRU1FTlRFRCBOT1RfSU1QTEVNRU5URUQgTk9UX0lNUExFTUVOVEVEIE5PVF9JTVBMRU1FTlRFRCBOT1RfSU1QTEVNRU5URUQgY2FsbF9Ob09wCgpOT1RfSU1QTEVNRU5URUQ6CgllcnIKCi8vIGFyYzcyX293bmVyT2YodWludDI1NilhZGRyZXNzCi8vCi8vCi8vIFJldHVybnMgdGhlIGFkZHJlc3Mgb2YgdGhlIGN1cnJlbnQgb3duZXIgb2YgdGhlIE5GVCB3aXRoIHRoZSBnaXZlbiB0b2tlbklkCi8vCi8vIEBwYXJhbSB0b2tlbklkIFRoZSBJRCBvZiB0aGUgTkZUCi8vIEByZXR1cm5zIFRoZSBjdXJyZW50IG93bmVyIG9mIHRoZSBORlQKYWJpX3JvdXRlX2FyYzcyX293bmVyT2Y6CgkvLyB0b2tlbklkOiB1aW50MjU2Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBhcmM3Ml9vd25lck9mKHVpbnQyNTYpYWRkcmVzcwoJY2FsbHN1YiBhcmM3Ml9vd25lck9mCglpbnQgMQoJcmV0dXJuCgphcmM3Ml9vd25lck9mOgoJcHJvdG8gMSAwCgoJLy8gZXhhbXBsZXMvYXJjNzIvYXJjNzIuYWxnby50czoyNQoJLy8gcmV0dXJuIHRoaXMudG9rZW5Cb3godG9rZW5JZCkudmFsdWUub3duZXI7CglmcmFtZV9kaWcgLTEgLy8gdG9rZW5JZDogdWludDI1NgoJYm94X2dldAoJYXNzZXJ0CglleHRyYWN0IDAgMzIKCWJ5dGUgMHgxNTFmN2M3NQoJc3dhcAoJY29uY2F0Cglsb2cKCXJldHN1YgoKLy8gYXJjNzJfdG9rZW5VUkkodWludDI1NilieXRlWzI1Nl0KLy8KLy8KLy8gUmV0dXJucyBhIFVSSSBwb2ludGluZyB0byB0aGUgTkZUIG1ldGFkYXRhCi8vCi8vIEBwYXJhbSB0b2tlbklkIFRoZSBJRCBvZiB0aGUgTkZUCi8vIEByZXR1cm5zIFVSSSB0byB0b2tlbiBtZXRhZGF0YQphYmlfcm91dGVfYXJjNzJfdG9rZW5VUkk6CgkvLyB0b2tlbklkOiB1aW50MjU2Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBhcmM3Ml90b2tlblVSSSh1aW50MjU2KWJ5dGVbMjU2XQoJY2FsbHN1YiBhcmM3Ml90b2tlblVSSQoJaW50IDEKCXJldHVybgoKYXJjNzJfdG9rZW5VUkk6Cglwcm90byAxIDAKCgkvLyBleGFtcGxlcy9hcmM3Mi9hcmM3Mi5hbGdvLnRzOjM3CgkvLyByZXR1cm4gdGhpcy50b2tlbkJveCh0b2tlbklkKS52YWx1ZS51cmk7CglmcmFtZV9kaWcgLTEgLy8gdG9rZW5JZDogdWludDI1NgoJYm94X2dldAoJYXNzZXJ0CglpbnQgMzIKCWludCAyNTYKCWV4dHJhY3QzCglieXRlIDB4MTUxZjdjNzUKCXN3YXAKCWNvbmNhdAoJbG9nCglyZXRzdWIKCnRyYW5zZmVyVG86Cglwcm90byAyIDAKCgkvLyBleGFtcGxlcy9hcmM3Mi9hcmM3Mi5hbGdvLnRzOjQxCgkvLyB0aGlzLnRva2VuQm94KHRva2VuSWQpLnZhbHVlLm93bmVyID0gdG8KCWZyYW1lX2RpZyAtMiAvLyB0b2tlbklkOiB1aW50MjU2CglpbnQgMAoJZnJhbWVfZGlnIC0xIC8vIHRvOiBhZGRyZXNzCglib3hfcmVwbGFjZQoJcmV0c3ViCgovLyBhcmM3Ml90cmFuc2ZlckZyb20odWludDI1NixhZGRyZXNzLGFkZHJlc3Mpdm9pZAovLwovLyBUcmFuc2ZlcnMgb3duZXJzaGlwIG9mIGFuIE5GVAphYmlfcm91dGVfYXJjNzJfdHJhbnNmZXJGcm9tOgoJLy8gdG9rZW5JZDogdWludDI1NgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwoJZHVwCglsZW4KCWludCAzMgoJPT0KCWFzc2VydAoKCS8vIHRvOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglkdXAKCWxlbgoJaW50IDMyCgk9PQoJYXNzZXJ0CgoJLy8gX2Zyb206IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnQgMzIKCT09Cglhc3NlcnQKCgkvLyBleGVjdXRlIGFyYzcyX3RyYW5zZmVyRnJvbSh1aW50MjU2LGFkZHJlc3MsYWRkcmVzcyl2b2lkCgljYWxsc3ViIGFyYzcyX3RyYW5zZmVyRnJvbQoJaW50IDEKCXJldHVybgoKYXJjNzJfdHJhbnNmZXJGcm9tOgoJcHJvdG8gMyAwOyBieXRlIDB4OyBkdXBuIDIKCgkvLyBleGFtcGxlcy9hcmM3Mi9hcmM3Mi5hbGdvLnRzOjQ4CgkvLyB0b2tlbiA9IHRoaXMudG9rZW5Cb3godG9rZW5JZCkudmFsdWUKCWZyYW1lX2RpZyAtMyAvLyB0b2tlbklkOiB1aW50MjU2CglmcmFtZV9idXJ5IDEgLy8gc3RvcmFnZSBrZXkvL3Rva2VuCgoJLy8gZXhhbXBsZXMvYXJjNzIvYXJjNzIuYWxnby50czo1MAoJLy8ga2V5OiBDb250cm9sID0geyBvd25lcjogdGhpcy50eG4uc2VuZGVyLCBjb250cm9sbGVyOiBfZnJvbSB9Cgl0eG4gU2VuZGVyCglmcmFtZV9kaWcgLTEgLy8gX2Zyb206IGFkZHJlc3MKCWNvbmNhdAoJZnJhbWVfYnVyeSAyIC8vIGtleTogQ29udHJvbAoKCS8vIGlmMF9jb25kaXRpb24KCS8vIGV4YW1wbGVzL2FyYzcyL2FyYzcyLmFsZ28udHM6NTIKCS8vIHRoaXMudHhuLnNlbmRlciA9PT0gX2Zyb20gfHwgdGhpcy50eG4uc2VuZGVyID09PSB0b2tlbi5jb250cm9sbGVyIHx8IHRoaXMuY29udHJvbEJveChrZXkpLmV4aXN0cwoJdHhuIFNlbmRlcgoJZnJhbWVfZGlnIC0xIC8vIF9mcm9tOiBhZGRyZXNzCgk9PQoJZHVwCglibnogc2tpcF9vcjAKCXR4biBTZW5kZXIKCWZyYW1lX2RpZyAxIC8vIHN0b3JhZ2Uga2V5Ly90b2tlbgoJYm94X2dldAoJYXNzZXJ0CglpbnQgMjg4CglpbnQgMzIKCWV4dHJhY3QzCgk9PQoJfHwKCnNraXBfb3IwOgoJZHVwCglibnogc2tpcF9vcjEKCWZyYW1lX2RpZyAyIC8vIGtleTogQ29udHJvbAoJYm94X2xlbgoJc3dhcAoJcG9wCgl8fAoKc2tpcF9vcjE6CglieiBpZjBfZWxzZQoKCS8vIGlmMF9jb25zZXF1ZW50CgkvLyBleGFtcGxlcy9hcmM3Mi9hcmM3Mi5hbGdvLnRzOjUzCgkvLyB0aGlzLnRyYW5zZmVyVG8odG8sIHRva2VuSWQpCglmcmFtZV9kaWcgLTMgLy8gdG9rZW5JZDogdWludDI1NgoJZnJhbWVfZGlnIC0yIC8vIHRvOiBhZGRyZXNzCgljYWxsc3ViIHRyYW5zZmVyVG8KCWIgaWYwX2VuZAoKaWYwX2Vsc2U6CgllcnIgLy8gJ1RyYW5zZmVyIG5vdCBhdXRob3JpemVkJwoKaWYwX2VuZDoKCXJldHN1YgoKLy8gYXJjNzJfYXBwcm92ZSh1aW50MjU2LGFkZHJlc3Mpdm9pZAovLwovLwovLyBBcHByb3ZlIGEgY29udHJvbGxlciBmb3IgYSBzaW5nbGUgTkZUCi8vCi8vIEBwYXJhbSBhcHByb3ZlZCBBcHByb3ZlZCBjb250cm9sbGVyIGFkZHJlc3MKLy8gQHBhcmFtIHRva2VuSWQgVGhlIElEIG9mIHRoZSBORlQKYWJpX3JvdXRlX2FyYzcyX2FwcHJvdmU6CgkvLyB0b2tlbklkOiB1aW50MjU2Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglkdXAKCWxlbgoJaW50IDMyCgk9PQoJYXNzZXJ0CgoJLy8gYXBwcm92ZWQ6IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnQgMzIKCT09Cglhc3NlcnQKCgkvLyBleGVjdXRlIGFyYzcyX2FwcHJvdmUodWludDI1NixhZGRyZXNzKXZvaWQKCWNhbGxzdWIgYXJjNzJfYXBwcm92ZQoJaW50IDEKCXJldHVybgoKYXJjNzJfYXBwcm92ZToKCXByb3RvIDIgMAoKCS8vIGV4YW1wbGVzL2FyYzcyL2FyYzcyLmFsZ28udHM6NjUKCS8vIHRoaXMudG9rZW5Cb3godG9rZW5JZCkudmFsdWUuY29udHJvbGxlciA9IGFwcHJvdmVkCglmcmFtZV9kaWcgLTIgLy8gdG9rZW5JZDogdWludDI1NgoJaW50IDI4OAoJZnJhbWVfZGlnIC0xIC8vIGFwcHJvdmVkOiBhZGRyZXNzCglib3hfcmVwbGFjZQoJcmV0c3ViCgovLyBhcmM3Ml9zZXRBcHByb3ZhbEZvckFsbChib29sLGFkZHJlc3Mpdm9pZAovLwovLwovLyBBcHByb3ZlIGFuIG9wZXJhdG9yIGZvciBhbGwgTkZUcyBmb3IgYSB1c2VyCi8vCi8vIEBwYXJhbSBvcGVyYXRvciBBcHByb3ZlZCBvcGVyYXRvciBhZGRyZXNzCi8vIEBwYXJhbSBhcHByb3ZlZCB0cnVlIHRvIGdpdmUgYXBwcm92YWwsIGZhbHNlIHRvIHJldm9rZQovLyBAcmV0dXJucwphYmlfcm91dGVfYXJjNzJfc2V0QXBwcm92YWxGb3JBbGw6CgkvLyBhcHByb3ZlZDogYm9vbAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgoJZHVwCglsZW4KCWludCAxCgk9PQoJYXNzZXJ0CglpbnQgMAoJZ2V0Yml0CgoJLy8gb3BlcmF0b3I6IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnQgMzIKCT09Cglhc3NlcnQKCgkvLyBleGVjdXRlIGFyYzcyX3NldEFwcHJvdmFsRm9yQWxsKGJvb2wsYWRkcmVzcyl2b2lkCgljYWxsc3ViIGFyYzcyX3NldEFwcHJvdmFsRm9yQWxsCglpbnQgMQoJcmV0dXJuCgphcmM3Ml9zZXRBcHByb3ZhbEZvckFsbDoKCXByb3RvIDIgMDsgYnl0ZSAweDsgZHVwbiAxCgoJLy8gZXhhbXBsZXMvYXJjNzIvYXJjNzIuYWxnby50czo3NwoJLy8ga2V5OiBDb250cm9sID0geyBvd25lcjogdGhpcy50eG4uc2VuZGVyLCBjb250cm9sbGVyOiBvcGVyYXRvciB9Cgl0eG4gU2VuZGVyCglmcmFtZV9kaWcgLTEgLy8gb3BlcmF0b3I6IGFkZHJlc3MKCWNvbmNhdAoJZnJhbWVfYnVyeSAxIC8vIGtleTogQ29udHJvbAoKCS8vIGlmMV9jb25kaXRpb24KCS8vIGV4YW1wbGVzL2FyYzcyL2FyYzcyLmFsZ28udHM6NzkKCS8vIGFwcHJvdmVkCglmcmFtZV9kaWcgLTIgLy8gYXBwcm92ZWQ6IGJvb2wKCWJ6IGlmMV9lbHNlaWYxX2NvbmRpdGlvbgoKCS8vIGlmMV9jb25zZXF1ZW50CgkvLyBleGFtcGxlcy9hcmM3Mi9hcmM3Mi5hbGdvLnRzOjc5CgkvLyB0aGlzLmNvbnRyb2xCb3goa2V5KS52YWx1ZSA9ICcnCglmcmFtZV9kaWcgMSAvLyBrZXk6IENvbnRyb2wKCWR1cAoJYm94X2RlbAoJcG9wCglieXRlIDB4IC8vICIiCglib3hfcHV0CgliIGlmMV9lbmQKCmlmMV9lbHNlaWYxX2NvbmRpdGlvbjoKCS8vIGV4YW1wbGVzL2FyYzcyL2FyYzcyLmFsZ28udHM6ODAKCS8vIHRoaXMuY29udHJvbEJveChrZXkpLmV4aXN0cwoJZnJhbWVfZGlnIDEgLy8ga2V5OiBDb250cm9sCglib3hfbGVuCglzd2FwCglwb3AKCWJ6IGlmMV9lbmQKCgkvLyBpZjFfZWxzZWlmMV9jb25zZXF1ZW50CgkvLyBleGFtcGxlcy9hcmM3Mi9hcmM3Mi5hbGdvLnRzOjgwCgkvLyB0aGlzLmNvbnRyb2xCb3goa2V5KS5kZWxldGUoKQoJZnJhbWVfZGlnIDEgLy8ga2V5OiBDb250cm9sCglib3hfZGVsCgppZjFfZW5kOgoJcmV0c3ViCgovLyBtaW50KGFkZHJlc3Mpdm9pZAphYmlfcm91dGVfbWludDoKCS8vIHRvOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBtaW50KGFkZHJlc3Mpdm9pZAoJY2FsbHN1YiBtaW50CglpbnQgMQoJcmV0dXJuCgptaW50OgoJcHJvdG8gMSAwOyBieXRlIDB4OyBkdXBuIDIKCgkvLyBleGFtcGxlcy9hcmM3Mi9hcmM3Mi5hbGdvLnRzOjg0CgkvLyBpbmRleCA9IHRoaXMuaW5kZXgudmFsdWUKCWJ5dGUgMHg2OTZlNjQ2NTc4IC8vICJpbmRleCIKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9idXJ5IDEgLy8gaW5kZXg6IHVpbnQyNTYKCgkvLyBleGFtcGxlcy9hcmM3Mi9hcmM3Mi5hbGdvLnRzOjg2CgkvLyB0b2tlbjogVG9rZW4gPSB7CgkvLyAgICAgICBvd25lcjogdG8sCgkvLyAgICAgICB1cmk6ICdodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL0FSQ3MnIGFzIEJ5dGVzMjU2LAoJLy8gICAgICAgY29udHJvbGxlcjogQWRkcmVzcy56ZXJvQWRkcmVzcywKCS8vICAgICB9CglmcmFtZV9kaWcgLTEgLy8gdG86IGFkZHJlc3MKCWJ5dGUgMHg2ODc0NzQ3MDczM2EyZjJmNjc2OTc0Njg3NTYyMmU2MzZmNmQyZjYxNmM2NzZmNzI2MTZlNjQ2NjZmNzU2ZTY0NjE3NDY5NmY2ZTJmNDE1MjQzNzMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCAvLyAiaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9BUkNzIgoJY29uY2F0CglnbG9iYWwgWmVyb0FkZHJlc3MKCWNvbmNhdAoJZnJhbWVfYnVyeSAyIC8vIHRva2VuOiBUb2tlbgoKCS8vIGV4YW1wbGVzL2FyYzcyL2FyYzcyLmFsZ28udHM6OTIKCS8vIHRoaXMudG9rZW5Cb3goaW5kZXgpLnZhbHVlID0gdG9rZW4KCWZyYW1lX2RpZyAxIC8vIGluZGV4OiB1aW50MjU2CglmcmFtZV9kaWcgMiAvLyB0b2tlbjogVG9rZW4KCWJveF9wdXQKCgkvLyBleGFtcGxlcy9hcmM3Mi9hcmM3Mi5hbGdvLnRzOjkzCgkvLyB0aGlzLnRyYW5zZmVyVG8odG8sIGluZGV4KQoJZnJhbWVfZGlnIDEgLy8gaW5kZXg6IHVpbnQyNTYKCWZyYW1lX2RpZyAtMSAvLyB0bzogYWRkcmVzcwoJY2FsbHN1YiB0cmFuc2ZlclRvCgoJLy8gZXhhbXBsZXMvYXJjNzIvYXJjNzIuYWxnby50czo5NAoJLy8gdGhpcy5pbmRleC52YWx1ZSA9IGluZGV4ICsgMQoJYnl0ZSAweDY5NmU2NDY1NzggLy8gImluZGV4IgoJZnJhbWVfZGlnIDEgLy8gaW5kZXg6IHVpbnQyNTYKCWJ5dGUgMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxCgliKwoJZHVwCgliaXRsZW4KCWludCAyNTYKCTw9Cglhc3NlcnQKCWJ5dGUgMHhGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGCgliJgoJZHVwCglsZW4KCWR1cAoJaW50IDMyCgktCglzd2FwCglzdWJzdHJpbmczCglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyBhcmM3Ml90b3RhbFN1cHBseSgpdWludDI1NgovLwovLyBSZXR1cm5zIHRoZSBudW1iZXIgb2YgTkZUcyBjdXJyZW50bHkgZGVmaW5lZCBieSB0aGlzIGNvbnRyYWN0CmFiaV9yb3V0ZV9hcmM3Ml90b3RhbFN1cHBseToKCS8vIGV4ZWN1dGUgYXJjNzJfdG90YWxTdXBwbHkoKXVpbnQyNTYKCWNhbGxzdWIgYXJjNzJfdG90YWxTdXBwbHkKCWludCAxCglyZXR1cm4KCmFyYzcyX3RvdGFsU3VwcGx5OgoJcHJvdG8gMCAwCgoJLy8gZXhhbXBsZXMvYXJjNzIvYXJjNzIuYWxnby50czoxMDIKCS8vIHJldHVybiB0aGlzLmluZGV4LnZhbHVlOwoJYnl0ZSAweDY5NmU2NDY1NzggLy8gImluZGV4IgoJYXBwX2dsb2JhbF9nZXQKCWJ5dGUgMHgxNTFmN2M3NQoJc3dhcAoJY29uY2F0Cglsb2cKCXJldHN1YgoKLy8gYXJjNzJfdG9rZW5CeUluZGV4KHVpbnQyNTYpdWludDI1NgovLwovLyBSZXR1cm5zIHRoZSB0b2tlbiBJRCBvZiB0aGUgdG9rZW4gd2l0aCB0aGUgZ2l2ZW4gaW5kZXggYW1vbmcgYWxsIE5GVHMgZGVmaW5lZCBieSB0aGUgY29udHJhY3QKYWJpX3JvdXRlX2FyYzcyX3Rva2VuQnlJbmRleDoKCS8vIGluZGV4OiB1aW50MjU2Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBhcmM3Ml90b2tlbkJ5SW5kZXgodWludDI1Nil1aW50MjU2CgljYWxsc3ViIGFyYzcyX3Rva2VuQnlJbmRleAoJaW50IDEKCXJldHVybgoKYXJjNzJfdG9rZW5CeUluZGV4OgoJcHJvdG8gMSAwCgoJLy8gZXhhbXBsZXMvYXJjNzIvYXJjNzIuYWxnby50czoxMTAKCS8vIHJldHVybiBpbmRleDsKCWJ5dGUgMHgxNTFmN2M3NQoJZnJhbWVfZGlnIC0xIC8vIGluZGV4OiB1aW50MjU2Cgljb25jYXQKCWxvZwoJcmV0c3ViCgphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CglpbnQgMQoJcmV0dXJuCgpjcmVhdGVfTm9PcDoKCW1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCBhYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb24KCWVycgoKY2FsbF9Ob09wOgoJbWV0aG9kICJhcmM3Ml9vd25lck9mKHVpbnQyNTYpYWRkcmVzcyIKCW1ldGhvZCAiYXJjNzJfdG9rZW5VUkkodWludDI1NilieXRlWzI1Nl0iCgltZXRob2QgImFyYzcyX3RyYW5zZmVyRnJvbShhZGRyZXNzLGFkZHJlc3MsdWludDI1Nil2b2lkIgoJbWV0aG9kICJhcmM3Ml9hcHByb3ZlKGFkZHJlc3MsdWludDI1Nil2b2lkIgoJbWV0aG9kICJhcmM3Ml9zZXRBcHByb3ZhbEZvckFsbChhZGRyZXNzLGJvb2wpdm9pZCIKCW1ldGhvZCAibWludChhZGRyZXNzKXZvaWQiCgltZXRob2QgImFyYzcyX3RvdGFsU3VwcGx5KCl1aW50MjU2IgoJbWV0aG9kICJhcmM3Ml90b2tlbkJ5SW5kZXgodWludDI1Nil1aW50MjU2IgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggYWJpX3JvdXRlX2FyYzcyX293bmVyT2YgYWJpX3JvdXRlX2FyYzcyX3Rva2VuVVJJIGFiaV9yb3V0ZV9hcmM3Ml90cmFuc2ZlckZyb20gYWJpX3JvdXRlX2FyYzcyX2FwcHJvdmUgYWJpX3JvdXRlX2FyYzcyX3NldEFwcHJvdmFsRm9yQWxsIGFiaV9yb3V0ZV9taW50IGFiaV9yb3V0ZV9hcmM3Ml90b3RhbFN1cHBseSBhYmlfcm91dGVfYXJjNzJfdG9rZW5CeUluZGV4CgllcnI=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDk="
  },
  "contract": {
    "name": "ARC72",
    "desc": "",
    "methods": [
      {
        "name": "arc72_ownerOf",
        "readonly": true,
        "args": [
          {
            "name": "tokenId",
            "type": "uint256",
            "desc": "The ID of the NFT"
          }
        ],
        "desc": "Returns the address of the current owner of the NFT with the given tokenId",
        "returns": {
          "type": "address",
          "desc": "The current owner of the NFT"
        }
      },
      {
        "name": "arc72_tokenURI",
        "readonly": true,
        "args": [
          {
            "name": "tokenId",
            "type": "uint256",
            "desc": "The ID of the NFT"
          }
        ],
        "desc": "Returns a URI pointing to the NFT metadata",
        "returns": {
          "type": "byte[256]",
          "desc": "URI to token metadata"
        }
      },
      {
        "name": "arc72_transferFrom",
        "args": [
          {
            "name": "_from",
            "type": "address",
            "desc": ""
          },
          {
            "name": "to",
            "type": "address",
            "desc": ""
          },
          {
            "name": "tokenId",
            "type": "uint256",
            "desc": ""
          }
        ],
        "desc": "Transfers ownership of an NFT",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "arc72_approve",
        "args": [
          {
            "name": "approved",
            "type": "address",
            "desc": "Approved controller address"
          },
          {
            "name": "tokenId",
            "type": "uint256",
            "desc": "The ID of the NFT"
          }
        ],
        "desc": "Approve a controller for a single NFT",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "arc72_setApprovalForAll",
        "args": [
          {
            "name": "operator",
            "type": "address",
            "desc": "Approved operator address"
          },
          {
            "name": "approved",
            "type": "bool",
            "desc": "true to give approval, false to revoke"
          }
        ],
        "desc": "Approve an operator for all NFTs for a user",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "mint",
        "args": [
          {
            "name": "to",
            "type": "address",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "arc72_totalSupply",
        "readonly": true,
        "args": [],
        "desc": "Returns the number of NFTs currently defined by this contract",
        "returns": {
          "type": "uint256",
          "desc": ""
        }
      },
      {
        "name": "arc72_tokenByIndex",
        "readonly": true,
        "args": [
          {
            "name": "index",
            "type": "uint256",
            "desc": ""
          }
        ],
        "desc": "Returns the token ID of the token with the given index among all NFTs defined by the contract",
        "returns": {
          "type": "uint256",
          "desc": ""
        }
      },
      {
        "name": "createApplication",
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        },
        "args": []
      }
    ]
  }
}