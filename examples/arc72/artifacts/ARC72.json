{
  "hints": {
    "arc72_ownerOf(uint256)address": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc72_tokenURI(uint256)byte[256]": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc72_transferFrom(address,address,uint256)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc72_approve(address,uint256)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc72_setApprovalForAll(address,bool)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "mint(address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc72_totalSupply()uint256": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc72_tokenByIndex(uint256)uint256": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "index": {
          "type": "bytes",
          "key": "index"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 0
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDkKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuNTAuMAovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmQtZGV2cmVsL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlcHNlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIk5PVF9JTVBMTUVOVEVEIiB3aGljaCBqdXN0IGNvbnRhaW5zICJlcnIiCnR4biBBcHBsaWNhdGlvbklECmludCAwCj4KaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoIGNyZWF0ZV9Ob09wIE5PVF9JTVBMRU1FTlRFRCBOT1RfSU1QTEVNRU5URUQgTk9UX0lNUExFTUVOVEVEIE5PVF9JTVBMRU1FTlRFRCBOT1RfSU1QTEVNRU5URUQgY2FsbF9Ob09wCgpOT1RfSU1QTEVNRU5URUQ6CgllcnIKCi8vIGFyYzcyX293bmVyT2YodWludDI1NilhZGRyZXNzCi8vCi8vIAovLyBSZXR1cm5zIHRoZSBhZGRyZXNzIG9mIHRoZSBjdXJyZW50IG93bmVyIG9mIHRoZSBORlQgd2l0aCB0aGUgZ2l2ZW4gdG9rZW5JZAovLyAKLy8gQHBhcmFtIHRva2VuSWQgVGhlIElEIG9mIHRoZSBORlQKLy8gQHJldHVybnMgVGhlIGN1cnJlbnQgb3duZXIgb2YgdGhlIE5GVAphYmlfcm91dGVfYXJjNzJfb3duZXJPZjoKCS8vIHRva2VuSWQ6IHVpbnQyNTYKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnQgMzIKCT09Cglhc3NlcnQKCgkvLyBleGVjdXRlIGFyYzcyX293bmVyT2YodWludDI1NilhZGRyZXNzCgljYWxsc3ViIGFyYzcyX293bmVyT2YKCWludCAxCglyZXR1cm4KCmFyYzcyX293bmVyT2Y6Cglwcm90byAxIDAKCgkvLyBleGFtcGxlcy9hcmM3Mi9hcmM3Mi5hbGdvLnRzOjI1CgkvLyByZXR1cm4gdGhpcy50b2tlbkJveCh0b2tlbklkKS52YWx1ZS5vd25lcjsKCWZyYW1lX2RpZyAtMSAvLyB0b2tlbklkOiB1aW50MjU2Cglib3hfZ2V0Cglhc3NlcnQKCWV4dHJhY3QgMCAzMgoJYnl0ZSAweDE1MWY3Yzc1Cglzd2FwCgljb25jYXQKCWxvZwoJcmV0c3ViCgovLyBhcmM3Ml90b2tlblVSSSh1aW50MjU2KWJ5dGVbMjU2XQovLwovLyAKLy8gUmV0dXJucyBhIFVSSSBwb2ludGluZyB0byB0aGUgTkZUIG1ldGFkYXRhCi8vIAovLyBAcGFyYW0gdG9rZW5JZCBUaGUgSUQgb2YgdGhlIE5GVAovLyBAcmV0dXJucyBVUkkgdG8gdG9rZW4gbWV0YWRhdGEKYWJpX3JvdXRlX2FyYzcyX3Rva2VuVVJJOgoJLy8gdG9rZW5JZDogdWludDI1NgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCWludCAzMgoJPT0KCWFzc2VydAoKCS8vIGV4ZWN1dGUgYXJjNzJfdG9rZW5VUkkodWludDI1NilieXRlWzI1Nl0KCWNhbGxzdWIgYXJjNzJfdG9rZW5VUkkKCWludCAxCglyZXR1cm4KCmFyYzcyX3Rva2VuVVJJOgoJcHJvdG8gMSAwCgoJLy8gZXhhbXBsZXMvYXJjNzIvYXJjNzIuYWxnby50czozNwoJLy8gcmV0dXJuIHRoaXMudG9rZW5Cb3godG9rZW5JZCkudmFsdWUudXJpOwoJZnJhbWVfZGlnIC0xIC8vIHRva2VuSWQ6IHVpbnQyNTYKCWJveF9nZXQKCWFzc2VydAoJaW50IDMyCglpbnQgMjU2CglleHRyYWN0MwoJYnl0ZSAweDE1MWY3Yzc1Cglzd2FwCgljb25jYXQKCWxvZwoJcmV0c3ViCgp0cmFuc2ZlclRvOgoJcHJvdG8gMiAwCgoJLy8gZXhhbXBsZXMvYXJjNzIvYXJjNzIuYWxnby50czo0MQoJLy8gdGhpcy50b2tlbkJveCh0b2tlbklkKS52YWx1ZS5vd25lciA9IHRvCglmcmFtZV9kaWcgLTIgLy8gdG9rZW5JZDogdWludDI1NgoJaW50IDAKCWZyYW1lX2RpZyAtMSAvLyB0bzogYWRkcmVzcwoJYm94X3JlcGxhY2UKCXJldHN1YgoKLy8gYXJjNzJfdHJhbnNmZXJGcm9tKHVpbnQyNTYsYWRkcmVzcyxhZGRyZXNzKXZvaWQKLy8KLy8gVHJhbnNmZXJzIG93bmVyc2hpcCBvZiBhbiBORlQKYWJpX3JvdXRlX2FyYzcyX3RyYW5zZmVyRnJvbToKCWJ5dGUgMHg7IGR1cCAvLyBwdXNoIGVtcHR5IGJ5dGVzIHRvIGZpbGwgdGhlIHN0YWNrIGZyYW1lIGZvciB0aGlzIHN1YnJvdXRpbmUncyBsb2NhbCB2YXJpYWJsZXMKCgkvLyB0b2tlbklkOiB1aW50MjU2Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAzCglkdXAKCWxlbgoJaW50IDMyCgk9PQoJYXNzZXJ0CgoJLy8gdG86IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDIKCWR1cAoJbGVuCglpbnQgMzIKCT09Cglhc3NlcnQKCgkvLyBfZnJvbTogYWRkcmVzcwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCWludCAzMgoJPT0KCWFzc2VydAoKCS8vIGV4ZWN1dGUgYXJjNzJfdHJhbnNmZXJGcm9tKHVpbnQyNTYsYWRkcmVzcyxhZGRyZXNzKXZvaWQKCWNhbGxzdWIgYXJjNzJfdHJhbnNmZXJGcm9tCglpbnQgMQoJcmV0dXJuCgphcmM3Ml90cmFuc2ZlckZyb206Cglwcm90byA1IDAKCgkvLyBleGFtcGxlcy9hcmM3Mi9hcmM3Mi5hbGdvLnRzOjQ4CgkvLyB0b2tlbiA9IHRoaXMudG9rZW5Cb3godG9rZW5JZCkudmFsdWUKCWZyYW1lX2RpZyAtMyAvLyB0b2tlbklkOiB1aW50MjU2CglmcmFtZV9idXJ5IC00IC8vIHN0b3JhZ2Uga2V5Ly90b2tlbgoKCS8vIGV4YW1wbGVzL2FyYzcyL2FyYzcyLmFsZ28udHM6NTAKCS8vIGtleTogQ29udHJvbCA9IHsgb3duZXI6IHRoaXMudHhuLnNlbmRlciwgY29udHJvbGxlcjogX2Zyb20gfQoJdHhuIFNlbmRlcgoJZnJhbWVfZGlnIC0xIC8vIF9mcm9tOiBhZGRyZXNzCgljb25jYXQKCWZyYW1lX2J1cnkgLTUgLy8ga2V5OiBDb250cm9sCgoJLy8gaWYwX2NvbmRpdGlvbgoJLy8gZXhhbXBsZXMvYXJjNzIvYXJjNzIuYWxnby50czo1MwoJLy8gdGhpcy50eG4uc2VuZGVyID09PSBfZnJvbQoJLy8gICAgICAgfHwgdGhpcy50eG4uc2VuZGVyID09PSB0b2tlbi5jb250cm9sbGVyCgkvLyAgICAgICB8fCB0aGlzLmNvbnRyb2xCb3goa2V5KS5leGlzdHMKCXR4biBTZW5kZXIKCWZyYW1lX2RpZyAtMSAvLyBfZnJvbTogYWRkcmVzcwoJPT0KCWR1cAoJYm56IHNraXBfb3IwCgl0eG4gU2VuZGVyCglmcmFtZV9kaWcgLTQgLy8gc3RvcmFnZSBrZXkvL3Rva2VuCglib3hfZ2V0Cglhc3NlcnQKCWludCAyODgKCWludCAzMgoJZXh0cmFjdDMKCT09Cgl8fAoKc2tpcF9vcjA6CglkdXAKCWJueiBza2lwX29yMQoJZnJhbWVfZGlnIC01IC8vIGtleTogQ29udHJvbAoJYm94X2xlbgoJc3dhcAoJcG9wCgl8fAoKc2tpcF9vcjE6CglieiBpZjBfZWxzZQoKCS8vIGlmMF9jb25zZXF1ZW50CgkvLyBleGFtcGxlcy9hcmM3Mi9hcmM3Mi5hbGdvLnRzOjU3CgkvLyB0aGlzLnRyYW5zZmVyVG8odG8sIHRva2VuSWQpCglmcmFtZV9kaWcgLTMgLy8gdG9rZW5JZDogdWludDI1NgoJZnJhbWVfZGlnIC0yIC8vIHRvOiBhZGRyZXNzCgljYWxsc3ViIHRyYW5zZmVyVG8KCWIgaWYwX2VuZAoKaWYwX2Vsc2U6CgllcnIgLy8gJ1RyYW5zZmVyIG5vdCBhdXRob3JpemVkJwoKaWYwX2VuZDoKCXJldHN1YgoKLy8gYXJjNzJfYXBwcm92ZSh1aW50MjU2LGFkZHJlc3Mpdm9pZAovLwovLyAKLy8gQXBwcm92ZSBhIGNvbnRyb2xsZXIgZm9yIGEgc2luZ2xlIE5GVAovLyAKLy8gQHBhcmFtIGFwcHJvdmVkIEFwcHJvdmVkIGNvbnRyb2xsZXIgYWRkcmVzcwovLyBAcGFyYW0gdG9rZW5JZCBUaGUgSUQgb2YgdGhlIE5GVAphYmlfcm91dGVfYXJjNzJfYXBwcm92ZToKCS8vIHRva2VuSWQ6IHVpbnQyNTYKCXR4bmEgQXBwbGljYXRpb25BcmdzIDIKCWR1cAoJbGVuCglpbnQgMzIKCT09Cglhc3NlcnQKCgkvLyBhcHByb3ZlZDogYWRkcmVzcwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCWludCAzMgoJPT0KCWFzc2VydAoKCS8vIGV4ZWN1dGUgYXJjNzJfYXBwcm92ZSh1aW50MjU2LGFkZHJlc3Mpdm9pZAoJY2FsbHN1YiBhcmM3Ml9hcHByb3ZlCglpbnQgMQoJcmV0dXJuCgphcmM3Ml9hcHByb3ZlOgoJcHJvdG8gMiAwCgoJLy8gZXhhbXBsZXMvYXJjNzIvYXJjNzIuYWxnby50czo2OQoJLy8gdGhpcy50b2tlbkJveCh0b2tlbklkKS52YWx1ZS5jb250cm9sbGVyID0gYXBwcm92ZWQKCWZyYW1lX2RpZyAtMiAvLyB0b2tlbklkOiB1aW50MjU2CglpbnQgMjg4CglmcmFtZV9kaWcgLTEgLy8gYXBwcm92ZWQ6IGFkZHJlc3MKCWJveF9yZXBsYWNlCglyZXRzdWIKCi8vIGFyYzcyX3NldEFwcHJvdmFsRm9yQWxsKGJvb2wsYWRkcmVzcyl2b2lkCi8vCi8vIAovLyBBcHByb3ZlIGFuIG9wZXJhdG9yIGZvciBhbGwgTkZUcyBmb3IgYSB1c2VyCi8vIAovLyBAcGFyYW0gb3BlcmF0b3IgQXBwcm92ZWQgb3BlcmF0b3IgYWRkcmVzcwovLyBAcGFyYW0gYXBwcm92ZWQgdHJ1ZSB0byBnaXZlIGFwcHJvdmFsLCBmYWxzZSB0byByZXZva2UKLy8gQHJldHVybnMKYWJpX3JvdXRlX2FyYzcyX3NldEFwcHJvdmFsRm9yQWxsOgoJYnl0ZSAweCAvLyBwdXNoIGVtcHR5IGJ5dGVzIHRvIGZpbGwgdGhlIHN0YWNrIGZyYW1lIGZvciB0aGlzIHN1YnJvdXRpbmUncyBsb2NhbCB2YXJpYWJsZXMKCgkvLyBhcHByb3ZlZDogYm9vbAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgoJZHVwCglsZW4KCWludCAxCgk9PQoJYXNzZXJ0CglpbnQgMAoJZ2V0Yml0CgoJLy8gb3BlcmF0b3I6IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnQgMzIKCT09Cglhc3NlcnQKCgkvLyBleGVjdXRlIGFyYzcyX3NldEFwcHJvdmFsRm9yQWxsKGJvb2wsYWRkcmVzcyl2b2lkCgljYWxsc3ViIGFyYzcyX3NldEFwcHJvdmFsRm9yQWxsCglpbnQgMQoJcmV0dXJuCgphcmM3Ml9zZXRBcHByb3ZhbEZvckFsbDoKCXByb3RvIDMgMAoKCS8vIGV4YW1wbGVzL2FyYzcyL2FyYzcyLmFsZ28udHM6ODEKCS8vIGtleTogQ29udHJvbCA9IHsgb3duZXI6IHRoaXMudHhuLnNlbmRlciwgY29udHJvbGxlcjogb3BlcmF0b3IgfQoJdHhuIFNlbmRlcgoJZnJhbWVfZGlnIC0xIC8vIG9wZXJhdG9yOiBhZGRyZXNzCgljb25jYXQKCWZyYW1lX2J1cnkgLTMgLy8ga2V5OiBDb250cm9sCgoJLy8gaWYxX2NvbmRpdGlvbgoJLy8gZXhhbXBsZXMvYXJjNzIvYXJjNzIuYWxnby50czo4MwoJLy8gYXBwcm92ZWQKCWZyYW1lX2RpZyAtMiAvLyBhcHByb3ZlZDogYm9vbAoJYnogaWYxX2Vsc2VpZjFfY29uZGl0aW9uCgoJLy8gaWYxX2NvbnNlcXVlbnQKCS8vIGV4YW1wbGVzL2FyYzcyL2FyYzcyLmFsZ28udHM6ODMKCS8vIHRoaXMuY29udHJvbEJveChrZXkpLnZhbHVlID0gJycKCWZyYW1lX2RpZyAtMyAvLyBrZXk6IENvbnRyb2wKCWR1cAoJYm94X2RlbAoJcG9wCglieXRlIDB4IC8vICIiCglib3hfcHV0CgliIGlmMV9lbmQKCmlmMV9lbHNlaWYxX2NvbmRpdGlvbjoKCS8vIGV4YW1wbGVzL2FyYzcyL2FyYzcyLmFsZ28udHM6ODQKCS8vIHRoaXMuY29udHJvbEJveChrZXkpLmV4aXN0cwoJZnJhbWVfZGlnIC0zIC8vIGtleTogQ29udHJvbAoJYm94X2xlbgoJc3dhcAoJcG9wCglieiBpZjFfZW5kCgoJLy8gaWYxX2Vsc2VpZjFfY29uc2VxdWVudAoJLy8gZXhhbXBsZXMvYXJjNzIvYXJjNzIuYWxnby50czo4NAoJLy8gdGhpcy5jb250cm9sQm94KGtleSkuZGVsZXRlKCkKCWZyYW1lX2RpZyAtMyAvLyBrZXk6IENvbnRyb2wKCWJveF9kZWwKCmlmMV9lbmQ6CglyZXRzdWIKCi8vIG1pbnQoYWRkcmVzcyl2b2lkCmFiaV9yb3V0ZV9taW50OgoJYnl0ZSAweDsgZHVwIC8vIHB1c2ggZW1wdHkgYnl0ZXMgdG8gZmlsbCB0aGUgc3RhY2sgZnJhbWUgZm9yIHRoaXMgc3Vicm91dGluZSdzIGxvY2FsIHZhcmlhYmxlcwoKCS8vIHRvOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBtaW50KGFkZHJlc3Mpdm9pZAoJY2FsbHN1YiBtaW50CglpbnQgMQoJcmV0dXJuCgptaW50OgoJcHJvdG8gMyAwCgoJLy8gZXhhbXBsZXMvYXJjNzIvYXJjNzIuYWxnby50czo4OAoJLy8gaW5kZXggPSB0aGlzLmluZGV4LnZhbHVlCglieXRlIDB4Njk2ZTY0NjU3OCAvLyAiaW5kZXgiCglhcHBfZ2xvYmFsX2dldAoJZnJhbWVfYnVyeSAtMiAvLyBpbmRleDogdWludDI1NgoKCS8vIGV4YW1wbGVzL2FyYzcyL2FyYzcyLmFsZ28udHM6OTAKCS8vIHRva2VuOiBUb2tlbiA9IHsKCS8vICAgICAgIG93bmVyOiB0bywKCS8vICAgICAgIHVyaTogJ2h0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vQVJDcycgYXMgQnl0ZXMyNTYsCgkvLyAgICAgICBjb250cm9sbGVyOiBBZGRyZXNzLnplcm9BZGRyZXNzLAoJLy8gICAgIH0KCWZyYW1lX2RpZyAtMSAvLyB0bzogYWRkcmVzcwoJYnl0ZSAweDY4NzQ3NDcwNzMzYTJmMmY2NzY5NzQ2ODc1NjIyZTYzNmY2ZDJmNjE2YzY3NmY3MjYxNmU2NDY2NmY3NTZlNjQ2MTc0Njk2ZjZlMmY0MTUyNDM3MzVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwNWM3ODMwMzA1Yzc4MzAzMDVjNzgzMDMwIC8vICJodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL0FSQ3MiCgljb25jYXQKCWdsb2JhbCBaZXJvQWRkcmVzcwoJY29uY2F0CglmcmFtZV9idXJ5IC0zIC8vIHRva2VuOiBUb2tlbgoKCS8vIGV4YW1wbGVzL2FyYzcyL2FyYzcyLmFsZ28udHM6OTYKCS8vIHRoaXMudG9rZW5Cb3goaW5kZXgpLnZhbHVlID0gdG9rZW4KCWZyYW1lX2RpZyAtMiAvLyBpbmRleDogdWludDI1NgoJZnJhbWVfZGlnIC0zIC8vIHRva2VuOiBUb2tlbgoJYm94X3B1dAoKCS8vIGV4YW1wbGVzL2FyYzcyL2FyYzcyLmFsZ28udHM6OTcKCS8vIHRoaXMudHJhbnNmZXJUbyh0bywgaW5kZXgpCglmcmFtZV9kaWcgLTIgLy8gaW5kZXg6IHVpbnQyNTYKCWZyYW1lX2RpZyAtMSAvLyB0bzogYWRkcmVzcwoJY2FsbHN1YiB0cmFuc2ZlclRvCgoJLy8gZXhhbXBsZXMvYXJjNzIvYXJjNzIuYWxnby50czo5OAoJLy8gdGhpcy5pbmRleC52YWx1ZSA9IGluZGV4ICsgKDEgYXMgdWludDwyNTY+KQoJYnl0ZSAweDY5NmU2NDY1NzggLy8gImluZGV4IgoJZnJhbWVfZGlnIC0yIC8vIGluZGV4OiB1aW50MjU2CglieXRlIDB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMQoJYisKCWR1cAoJYml0bGVuCglpbnQgMjU2Cgk8PQoJYXNzZXJ0CglieXRlIDB4RkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRgoJYiYKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIGFyYzcyX3RvdGFsU3VwcGx5KCl1aW50MjU2Ci8vCi8vIFJldHVybnMgdGhlIG51bWJlciBvZiBORlRzIGN1cnJlbnRseSBkZWZpbmVkIGJ5IHRoaXMgY29udHJhY3QKYWJpX3JvdXRlX2FyYzcyX3RvdGFsU3VwcGx5OgoJLy8gZXhlY3V0ZSBhcmM3Ml90b3RhbFN1cHBseSgpdWludDI1NgoJY2FsbHN1YiBhcmM3Ml90b3RhbFN1cHBseQoJaW50IDEKCXJldHVybgoKYXJjNzJfdG90YWxTdXBwbHk6Cglwcm90byAwIDAKCgkvLyBleGFtcGxlcy9hcmM3Mi9hcmM3Mi5hbGdvLnRzOjEwNgoJLy8gcmV0dXJuIHRoaXMuaW5kZXgudmFsdWU7CglieXRlIDB4Njk2ZTY0NjU3OCAvLyAiaW5kZXgiCglhcHBfZ2xvYmFsX2dldAoJZHVwCgliaXRsZW4KCWludCAyNTYKCTw9Cglhc3NlcnQKCWJ5dGUgMHhGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGCgliJgoJYnl0ZSAweDE1MWY3Yzc1Cglzd2FwCgljb25jYXQKCWxvZwoJcmV0c3ViCgovLyBhcmM3Ml90b2tlbkJ5SW5kZXgodWludDI1Nil1aW50MjU2Ci8vCi8vIFJldHVybnMgdGhlIHRva2VuIElEIG9mIHRoZSB0b2tlbiB3aXRoIHRoZSBnaXZlbiBpbmRleCBhbW9uZyBhbGwgTkZUcyBkZWZpbmVkIGJ5IHRoZSBjb250cmFjdAphYmlfcm91dGVfYXJjNzJfdG9rZW5CeUluZGV4OgoJLy8gaW5kZXg6IHVpbnQyNTYKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnQgMzIKCT09Cglhc3NlcnQKCgkvLyBleGVjdXRlIGFyYzcyX3Rva2VuQnlJbmRleCh1aW50MjU2KXVpbnQyNTYKCWNhbGxzdWIgYXJjNzJfdG9rZW5CeUluZGV4CglpbnQgMQoJcmV0dXJuCgphcmM3Ml90b2tlbkJ5SW5kZXg6Cglwcm90byAxIDAKCgkvLyBleGFtcGxlcy9hcmM3Mi9hcmM3Mi5hbGdvLnRzOjExNAoJLy8gcmV0dXJuIGluZGV4OwoJZnJhbWVfZGlnIC0xIC8vIGluZGV4OiB1aW50MjU2CglkdXAKCWJpdGxlbgoJaW50IDI1NgoJPD0KCWFzc2VydAoJYnl0ZSAweEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkYKCWImCglieXRlIDB4MTUxZjdjNzUKCXN3YXAKCWNvbmNhdAoJbG9nCglyZXRzdWIKCmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCWludCAxCglyZXR1cm4KCmNyZWF0ZV9Ob09wOgoJbWV0aG9kICJjcmVhdGVBcHBsaWNhdGlvbigpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoIGFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoJZXJyCgpjYWxsX05vT3A6CgltZXRob2QgImFyYzcyX293bmVyT2YodWludDI1NilhZGRyZXNzIgoJbWV0aG9kICJhcmM3Ml90b2tlblVSSSh1aW50MjU2KWJ5dGVbMjU2XSIKCW1ldGhvZCAiYXJjNzJfdHJhbnNmZXJGcm9tKGFkZHJlc3MsYWRkcmVzcyx1aW50MjU2KXZvaWQiCgltZXRob2QgImFyYzcyX2FwcHJvdmUoYWRkcmVzcyx1aW50MjU2KXZvaWQiCgltZXRob2QgImFyYzcyX3NldEFwcHJvdmFsRm9yQWxsKGFkZHJlc3MsYm9vbCl2b2lkIgoJbWV0aG9kICJtaW50KGFkZHJlc3Mpdm9pZCIKCW1ldGhvZCAiYXJjNzJfdG90YWxTdXBwbHkoKXVpbnQyNTYiCgltZXRob2QgImFyYzcyX3Rva2VuQnlJbmRleCh1aW50MjU2KXVpbnQyNTYiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCBhYmlfcm91dGVfYXJjNzJfb3duZXJPZiBhYmlfcm91dGVfYXJjNzJfdG9rZW5VUkkgYWJpX3JvdXRlX2FyYzcyX3RyYW5zZmVyRnJvbSBhYmlfcm91dGVfYXJjNzJfYXBwcm92ZSBhYmlfcm91dGVfYXJjNzJfc2V0QXBwcm92YWxGb3JBbGwgYWJpX3JvdXRlX21pbnQgYWJpX3JvdXRlX2FyYzcyX3RvdGFsU3VwcGx5IGFiaV9yb3V0ZV9hcmM3Ml90b2tlbkJ5SW5kZXgKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDkKaW50IDE="
  },
  "contract": {
    "name": "ARC72",
    "desc": "",
    "methods": [
      {
        "name": "arc72_ownerOf",
        "readonly": true,
        "args": [
          {
            "name": "tokenId",
            "type": "uint256",
            "desc": "The ID of the NFT"
          }
        ],
        "desc": "Returns the address of the current owner of the NFT with the given tokenId",
        "returns": {
          "type": "address",
          "desc": "The current owner of the NFT"
        }
      },
      {
        "name": "arc72_tokenURI",
        "readonly": true,
        "args": [
          {
            "name": "tokenId",
            "type": "uint256",
            "desc": "The ID of the NFT"
          }
        ],
        "desc": "Returns a URI pointing to the NFT metadata",
        "returns": {
          "type": "byte[256]",
          "desc": "URI to token metadata"
        }
      },
      {
        "name": "arc72_transferFrom",
        "args": [
          {
            "name": "_from",
            "type": "address",
            "desc": ""
          },
          {
            "name": "to",
            "type": "address",
            "desc": ""
          },
          {
            "name": "tokenId",
            "type": "uint256",
            "desc": ""
          }
        ],
        "desc": "Transfers ownership of an NFT",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "arc72_approve",
        "args": [
          {
            "name": "approved",
            "type": "address",
            "desc": "Approved controller address"
          },
          {
            "name": "tokenId",
            "type": "uint256",
            "desc": "The ID of the NFT"
          }
        ],
        "desc": "Approve a controller for a single NFT",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "arc72_setApprovalForAll",
        "args": [
          {
            "name": "operator",
            "type": "address",
            "desc": "Approved operator address"
          },
          {
            "name": "approved",
            "type": "bool",
            "desc": "true to give approval, false to revoke"
          }
        ],
        "desc": "Approve an operator for all NFTs for a user",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "mint",
        "args": [
          {
            "name": "to",
            "type": "address",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "arc72_totalSupply",
        "readonly": true,
        "args": [],
        "desc": "Returns the number of NFTs currently defined by this contract",
        "returns": {
          "type": "uint256",
          "desc": ""
        }
      },
      {
        "name": "arc72_tokenByIndex",
        "readonly": true,
        "args": [
          {
            "name": "index",
            "type": "uint256",
            "desc": ""
          }
        ],
        "desc": "Returns the token ID of the token with the given index among all NFTs defined by the contract",
        "returns": {
          "type": "uint256",
          "desc": ""
        }
      },
      {
        "name": "createApplication",
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        },
        "args": []
      }
    ]
  }
}