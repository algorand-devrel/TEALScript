{
  "name": "ABITestStaticArrayInStorageMap",
  "desc": "",
  "methods": [
    {
      "name": "staticArrayInStorageMap",
      "args": [],
      "returns": {
        "type": "uint64[3]"
      },
      "actions": {
        "create": [],
        "call": [
          "OptIn"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 2,
        "ints": 0
      },
      "local": {
        "bytes": 2,
        "ints": 0
      }
    },
    "keys": {
      "global": {
        "gRef": {
          "key": "Z1JlZg==",
          "keyType": "AVMBytes",
          "valueType": "uint64[3]"
        }
      },
      "local": {
        "lRef": {
          "key": "bFJlZg==",
          "keyType": "AVMBytes",
          "valueType": "uint64[3]"
        }
      },
      "box": {
        "bRef": {
          "key": "YlJlZg==",
          "keyType": "AVMBytes",
          "valueType": "uint64[3]"
        }
      }
    },
    "maps": {
      "global": {
        "gMap": {
          "keyType": "AVMBytes",
          "valueType": "uint64[3]"
        }
      },
      "local": {
        "lMap": {
          "keyType": "AVMBytes",
          "valueType": "uint64[3]"
        }
      },
      "box": {
        "bMap": {
          "keyType": "AVMBytes",
          "valueType": "uint64[3]"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:130",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:130",
          "pc": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/abi.algo.ts:130",
          "pc": [
            19,
            20
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:130",
          "pc": [
            21
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:130",
          "pc": [
            22,
            23
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:130",
          "pc": [
            24
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:130",
          "pc": [
            25,
            26
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:130",
          "pc": [
            27
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:130",
          "pc": [
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/abi.algo.ts:130",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            54
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/abi.algo.ts:143",
          "pc": [
            55,
            56,
            57,
            58,
            59,
            60
          ]
        },
        {
          "teal": 32,
          "source": "tests/contracts/abi.algo.ts:143",
          "pc": [
            61,
            62,
            63
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/abi.algo.ts:143",
          "pc": [
            64
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:143",
          "pc": [
            65
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:143",
          "pc": [
            66,
            67
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/abi.algo.ts:143",
          "pc": [
            68
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/abi.algo.ts:143",
          "pc": [
            69,
            70,
            71
          ]
        },
        {
          "teal": 43,
          "source": "tests/contracts/abi.algo.ts:143",
          "pc": [
            72,
            73
          ]
        },
        {
          "teal": 44,
          "source": "tests/contracts/abi.algo.ts:143",
          "pc": [
            74
          ]
        },
        {
          "teal": 48,
          "source": "tests/contracts/abi.algo.ts:145",
          "pc": [
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/abi.algo.ts:145",
          "pc": [
            101,
            102
          ]
        },
        {
          "teal": 53,
          "source": "tests/contracts/abi.algo.ts:147",
          "pc": [
            103,
            104,
            105,
            106,
            107,
            108
          ]
        },
        {
          "teal": 54,
          "source": "tests/contracts/abi.algo.ts:147",
          "pc": [
            109,
            110
          ]
        },
        {
          "teal": 55,
          "source": "tests/contracts/abi.algo.ts:147",
          "pc": [
            111
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/abi.algo.ts:148",
          "pc": [
            112,
            113
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/abi.algo.ts:148",
          "pc": [
            114,
            115,
            116,
            117,
            118,
            119
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/abi.algo.ts:148",
          "pc": [
            120,
            121
          ]
        },
        {
          "teal": 62,
          "source": "tests/contracts/abi.algo.ts:148",
          "pc": [
            122
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/abi.algo.ts:149",
          "pc": [
            123,
            124,
            125,
            126,
            127,
            128
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/abi.algo.ts:149",
          "pc": [
            129,
            130
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/abi.algo.ts:149",
          "pc": [
            131
          ]
        },
        {
          "teal": 76,
          "source": "tests/contracts/abi.algo.ts:152",
          "pc": [
            132,
            133,
            134,
            135,
            136,
            137
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/abi.algo.ts:152",
          "pc": [
            138
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/abi.algo.ts:152",
          "pc": [
            139,
            140,
            141
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/abi.algo.ts:152",
          "pc": [
            142
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/abi.algo.ts:152",
          "pc": [
            143
          ]
        },
        {
          "teal": 81,
          "source": "tests/contracts/abi.algo.ts:153",
          "pc": [
            144,
            145
          ]
        },
        {
          "teal": 82,
          "source": "tests/contracts/abi.algo.ts:153",
          "pc": [
            146,
            147,
            148,
            149,
            150,
            151
          ]
        },
        {
          "teal": 83,
          "source": "tests/contracts/abi.algo.ts:153",
          "pc": [
            152
          ]
        },
        {
          "teal": 84,
          "source": "tests/contracts/abi.algo.ts:153",
          "pc": [
            153,
            154,
            155
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/abi.algo.ts:153",
          "pc": [
            156
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/abi.algo.ts:153",
          "pc": [
            157
          ]
        },
        {
          "teal": 87,
          "source": "tests/contracts/abi.algo.ts:151",
          "pc": [
            158
          ]
        },
        {
          "teal": 88,
          "source": "tests/contracts/abi.algo.ts:154",
          "pc": [
            159,
            160,
            161,
            162,
            163,
            164
          ]
        },
        {
          "teal": 89,
          "source": "tests/contracts/abi.algo.ts:154",
          "pc": [
            165,
            166
          ]
        },
        {
          "teal": 90,
          "source": "tests/contracts/abi.algo.ts:154",
          "pc": [
            167,
            168
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/abi.algo.ts:154",
          "pc": [
            169
          ]
        },
        {
          "teal": 92,
          "source": "tests/contracts/abi.algo.ts:154",
          "pc": [
            170
          ]
        },
        {
          "teal": 93,
          "source": "tests/contracts/abi.algo.ts:154",
          "pc": [
            171
          ]
        },
        {
          "teal": 94,
          "source": "tests/contracts/abi.algo.ts:151",
          "pc": [
            172
          ]
        },
        {
          "teal": 95,
          "source": "tests/contracts/abi.algo.ts:151",
          "pc": [
            173,
            174
          ]
        },
        {
          "teal": 99,
          "source": "tests/contracts/abi.algo.ts:157",
          "pc": [
            175,
            176
          ]
        },
        {
          "teal": 102,
          "source": "tests/contracts/abi.algo.ts:143",
          "pc": [
            177,
            178
          ]
        },
        {
          "teal": 105,
          "source": "tests/contracts/abi.algo.ts:143",
          "pc": [
            179,
            180
          ]
        },
        {
          "teal": 106,
          "source": "tests/contracts/abi.algo.ts:143",
          "pc": [
            181
          ]
        },
        {
          "teal": 109,
          "source": "tests/contracts/abi.algo.ts:130",
          "pc": [
            182,
            183
          ]
        },
        {
          "teal": 110,
          "source": "tests/contracts/abi.algo.ts:130",
          "pc": [
            184
          ]
        },
        {
          "teal": 113,
          "source": "tests/contracts/abi.algo.ts:130",
          "pc": [
            185,
            186,
            187,
            188,
            189,
            190
          ]
        },
        {
          "teal": 114,
          "source": "tests/contracts/abi.algo.ts:130",
          "pc": [
            191,
            192,
            193
          ]
        },
        {
          "teal": 115,
          "source": "tests/contracts/abi.algo.ts:130",
          "pc": [
            194,
            195,
            196,
            197
          ]
        },
        {
          "teal": 118,
          "source": "tests/contracts/abi.algo.ts:130",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            198
          ]
        },
        {
          "teal": 121,
          "source": "tests/contracts/abi.algo.ts:130",
          "pc": [
            199,
            200,
            201,
            202,
            203,
            204
          ]
        },
        {
          "teal": 122,
          "source": "tests/contracts/abi.algo.ts:130",
          "pc": [
            205,
            206,
            207
          ]
        },
        {
          "teal": 123,
          "source": "tests/contracts/abi.algo.ts:130",
          "pc": [
            208,
            209,
            210,
            211
          ]
        },
        {
          "teal": 126,
          "source": "tests/contracts/abi.algo.ts:130",
          "errorMessage": "this contract does not implement the given ABI method for call OptIn",
          "pc": [
            212
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmJ5dGVjYmxvY2sgMHg2NzRkNjE3MCAweDZjNGQ2MTcwIDB4NjI0ZDYxNzAgMHgKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuMTA1LjAKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCnB1c2hpbnQgNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKk5PVF9JTVBMRU1FTlRFRCAqY2FsbF9PcHRJbiAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gc3RhdGljQXJyYXlJblN0b3JhZ2VNYXAoKXVpbnQ2NFszXQoqYWJpX3JvdXRlX3N0YXRpY0FycmF5SW5TdG9yYWdlTWFwOgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglwdXNoYnl0ZXMgMHgxNTFmN2M3NQoKCS8vIGV4ZWN1dGUgc3RhdGljQXJyYXlJblN0b3JhZ2VNYXAoKXVpbnQ2NFszXQoJY2FsbHN1YiBzdGF0aWNBcnJheUluU3RvcmFnZU1hcAoJY29uY2F0Cglsb2cKCXB1c2hpbnQgMQoJcmV0dXJuCgovLyBzdGF0aWNBcnJheUluU3RvcmFnZU1hcCgpOiBTdGF0aWNBcnJheTx1aW50NjQsIDM+CnN0YXRpY0FycmF5SW5TdG9yYWdlTWFwOgoJcHJvdG8gMCAxCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGUgMHgKCWR1cAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czoxNDUKCS8vIGE6IFN0YXRpY0FycmF5PHVpbnQ2NCwgMz4gPSBbMTEsIDIyLCAzM10KCXB1c2hieXRlcyAweDAwMDAwMDAwMDAwMDAwMGIwMDAwMDAwMDAwMDAwMDE2MDAwMDAwMDAwMDAwMDAyMQoJZnJhbWVfYnVyeSAwIC8vIGE6IFN0YXRpY0FycmF5PHVpbnQ2NCwgMz4KCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTQ3CgkvLyB0aGlzLmdNYXAoJ2dNYXAnKS52YWx1ZSA9IGEKCWJ5dGUgMHg2NzRkNjE3MCAvLyAiZ01hcCIKCWZyYW1lX2RpZyAwIC8vIGE6IFN0YXRpY0FycmF5PHVpbnQ2NCwgMz4KCWFwcF9nbG9iYWxfcHV0CgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjE0OAoJLy8gdGhpcy5sTWFwKHRoaXMudHhuLnNlbmRlciwgJ2xNYXAnKS52YWx1ZSA9IGEKCXR4biBTZW5kZXIKCWJ5dGUgMHg2YzRkNjE3MCAvLyAibE1hcCIKCWZyYW1lX2RpZyAwIC8vIGE6IFN0YXRpY0FycmF5PHVpbnQ2NCwgMz4KCWFwcF9sb2NhbF9wdXQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTQ5CgkvLyB0aGlzLmJNYXAoJ2JNYXAnKS52YWx1ZSA9IGEKCWJ5dGUgMHg2MjRkNjE3MCAvLyAiYk1hcCIKCWZyYW1lX2RpZyAwIC8vIGE6IFN0YXRpY0FycmF5PHVpbnQ2NCwgMz4KCWJveF9wdXQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTUxCgkvLyByZXQ6IFN0YXRpY0FycmF5PHVpbnQ2NCwgMz4gPSBbCgkvLyAgICAgICB0aGlzLmdNYXAoJ2dNYXAnKS52YWx1ZVsxXSwKCS8vICAgICAgIHRoaXMubE1hcCh0aGlzLnR4bi5zZW5kZXIsICdsTWFwJykudmFsdWVbMV0sCgkvLyAgICAgICB0aGlzLmJNYXAoJ2JNYXAnKS52YWx1ZVsxXSwKCS8vICAgICBdCglieXRlIDB4Njc0ZDYxNzAgLy8gImdNYXAiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCA4IDgKCWJ0b2kKCWl0b2IKCXR4biBTZW5kZXIKCWJ5dGUgMHg2YzRkNjE3MCAvLyAibE1hcCIKCWFwcF9sb2NhbF9nZXQKCWV4dHJhY3QgOCA4CglidG9pCglpdG9iCgljb25jYXQKCWJ5dGUgMHg2MjRkNjE3MCAvLyAiYk1hcCIKCXB1c2hpbnQgOAoJcHVzaGludCA4Cglib3hfZXh0cmFjdAoJYnRvaQoJaXRvYgoJY29uY2F0CglmcmFtZV9idXJ5IDEgLy8gcmV0OiBTdGF0aWNBcnJheTx1aW50NjQsIDM+CgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjE1NwoJLy8gcmV0dXJuIHJldDsKCWZyYW1lX2RpZyAxIC8vIHJldDogU3RhdGljQXJyYXk8dWludDY0LCAzPgoKCS8vIHNldCB0aGUgc3Vicm91dGluZSByZXR1cm4gdmFsdWUKCWZyYW1lX2J1cnkgMAoKCS8vIHBvcCBhbGwgbG9jYWwgdmFyaWFibGVzIGZyb20gdGhlIHN0YWNrCglwb3BuIDEKCXJldHN1YgoKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCXB1c2hpbnQgMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CglwdXNoYnl0ZXMgMHhiODQ0N2IzNiAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9PcHRJbjoKCXB1c2hieXRlcyAweDQ2ZjFhNGIxIC8vIG1ldGhvZCAic3RhdGljQXJyYXlJblN0b3JhZ2VNYXAoKXVpbnQ2NFszXSIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfc3RhdGljQXJyYXlJblN0b3JhZ2VNYXAKCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY2FsbCBPcHRJbgoJZXJy",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiYEBGdNYXAEbE1hcARiTWFwADEYFIEGCzEZCI0MAAAAkQAAAAAAAAAAAIMAAAAAAAAAAAAAAIAEFR98dYgABVCwgQFDigABgABJgBgAAAAAAAAACwAAAAAAAAAWAAAAAAAAACGMAIAEZ01hcIsAZzEAgARsTWFwiwBmgARiTWFwiwC/gARnTWFwZFcICBcWMQCABGxNYXBiVwgIFxZQgARiTWFwgQiBCLoXFlCMAYsBjABGAYmBAUOABLhEezY2GgCOAf/wAIAERvGksTYaAI4B/2MA",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}