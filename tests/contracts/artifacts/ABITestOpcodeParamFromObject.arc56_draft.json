{
  "name": "ABITestOpcodeParamFromObject",
  "desc": "",
  "methods": [
    {
      "name": "opcodeParamFromObject",
      "args": [],
      "returns": {
        "type": "address"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": [
      {
        "teal": 1,
        "source": 1065,
        "pc": [
          0
        ]
      },
      {
        "teal": 2,
        "source": 1065,
        "pc": [
          1,
          2,
          3,
          4
        ]
      },
      {
        "teal": 3,
        "source": 1065,
        "pc": [
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22
        ]
      },
      {
        "teal": 15,
        "source": 1065,
        "pc": [
          23,
          24
        ]
      },
      {
        "teal": 16,
        "source": 1065,
        "pc": [
          25
        ]
      },
      {
        "teal": 17,
        "source": 1065,
        "pc": [
          26,
          27
        ]
      },
      {
        "teal": 18,
        "source": 1065,
        "pc": [
          28
        ]
      },
      {
        "teal": 19,
        "source": 1065,
        "pc": [
          29,
          30
        ]
      },
      {
        "teal": 20,
        "source": 1065,
        "pc": [
          31
        ]
      },
      {
        "teal": 21,
        "source": 1065,
        "pc": [
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57
        ]
      },
      {
        "teal": 25,
        "source": 1065,
        "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
        "pc": [
          58
        ]
      },
      {
        "teal": 30,
        "source": 1066,
        "pc": [
          59,
          60,
          61,
          62,
          63,
          64
        ]
      },
      {
        "teal": 33,
        "source": 1066,
        "pc": [
          65,
          66,
          67
        ]
      },
      {
        "teal": 34,
        "source": 1066,
        "pc": [
          68
        ]
      },
      {
        "teal": 35,
        "source": 1066,
        "pc": [
          69
        ]
      },
      {
        "teal": 36,
        "source": 1066,
        "pc": [
          70,
          71
        ]
      },
      {
        "teal": 37,
        "source": 1066,
        "pc": [
          72
        ]
      },
      {
        "teal": 41,
        "source": 1066,
        "pc": [
          73,
          74,
          75
        ]
      },
      {
        "teal": 44,
        "source": 1066,
        "pc": [
          76,
          77
        ]
      },
      {
        "teal": 48,
        "source": 1067,
        "pc": [
          78,
          79,
          80
        ]
      },
      {
        "teal": 49,
        "source": 1067,
        "pc": [
          81
        ]
      },
      {
        "teal": 50,
        "source": 1067,
        "pc": [
          82,
          83
        ]
      },
      {
        "teal": 54,
        "source": 1069,
        "pc": [
          84,
          85
        ]
      },
      {
        "teal": 57,
        "source": 1066,
        "pc": [
          86,
          87
        ]
      },
      {
        "teal": 58,
        "source": 1066,
        "pc": [
          88
        ]
      },
      {
        "teal": 61,
        "source": 1065,
        "pc": [
          89,
          90
        ]
      },
      {
        "teal": 62,
        "source": 1065,
        "pc": [
          91
        ]
      },
      {
        "teal": 65,
        "source": 1065,
        "pc": [
          92,
          93,
          94,
          95,
          96,
          97
        ]
      },
      {
        "teal": 66,
        "source": 1065,
        "pc": [
          98,
          99,
          100
        ]
      },
      {
        "teal": 67,
        "source": 1065,
        "pc": [
          101,
          102,
          103,
          104
        ]
      },
      {
        "teal": 70,
        "source": 1065,
        "errorMessage": "this contract does not implement the given ABI method for create NoOp",
        "pc": [
          105
        ]
      },
      {
        "teal": 73,
        "source": 1065,
        "pc": [
          106,
          107,
          108,
          109,
          110,
          111
        ]
      },
      {
        "teal": 74,
        "source": 1065,
        "pc": [
          112,
          113,
          114
        ]
      },
      {
        "teal": 75,
        "source": 1065,
        "pc": [
          115,
          116,
          117,
          118
        ]
      },
      {
        "teal": 78,
        "source": 1065,
        "errorMessage": "this contract does not implement the given ABI method for call NoOp",
        "pc": [
          119
        ]
      }
    ],
    "clear": []
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxIDYKYnl0ZWNibG9jayAweDE1MWY3Yzc1IDB4Yjg0NDdiMzYgMHg3OWY3MDMzMyAweAoKLy8gVGhpcyBURUFMIHdhcyBnZW5lcmF0ZWQgYnkgVEVBTFNjcmlwdCB2MC4xMDIuMAovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGUgY29udHJhY3QsIGl0cyByZXNwZWN0aXZlIGJyYW5jaCB3aWxsIGJlICIqTk9UX0lNUExFTUVOVEVEIiB3aGljaCBqdXN0IGNvbnRhaW5zICJlcnIiCnR4biBBcHBsaWNhdGlvbklECiEKaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gb3Bjb2RlUGFyYW1Gcm9tT2JqZWN0KClhZGRyZXNzCiphYmlfcm91dGVfb3Bjb2RlUGFyYW1Gcm9tT2JqZWN0OgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglieXRlIDB4MTUxZjdjNzUKCgkvLyBleGVjdXRlIG9wY29kZVBhcmFtRnJvbU9iamVjdCgpYWRkcmVzcwoJY2FsbHN1YiBvcGNvZGVQYXJhbUZyb21PYmplY3QKCWNvbmNhdAoJbG9nCglpbnQgMQoJcmV0dXJuCgovLyBvcGNvZGVQYXJhbUZyb21PYmplY3QoKTogQWRkcmVzcwpvcGNvZGVQYXJhbUZyb21PYmplY3Q6Cglwcm90byAwIDEKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZSAweAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czoxMDY3CgkvLyBhOiB7IG15QXBwOiBBcHBJRCB9ID0geyBteUFwcDogdGhpcy5hcHAgfQoJdHhuYSBBcHBsaWNhdGlvbnMgMAoJaXRvYgoJZnJhbWVfYnVyeSAwIC8vIGE6IHsgbXlBcHA6IEFwcElEIH0KCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTA2OQoJLy8gcmV0dXJuIHRoaXMuYXBwLmFkZHJlc3M7CglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoKCS8vIHNldCB0aGUgc3Vicm91dGluZSByZXR1cm4gdmFsdWUKCWZyYW1lX2J1cnkgMAoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJaW50IDEKCXJldHVybgoKKmNyZWF0ZV9Ob09wOgoJYnl0ZSAweGI4NDQ3YjM2IC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglieXRlIDB4NzlmNzAzMzMgLy8gbWV0aG9kICJvcGNvZGVQYXJhbUZyb21PYmplY3QoKWFkZHJlc3MiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX29wY29kZVBhcmFtRnJvbU9iamVjdAoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiACAQYmBAQVH3x1BLhEezYEefcDMwAxGBSBBgsxGQiNDAAwAAAAAAAAAAAAAAAiAAAAAAAAAAAAAACABBUffHWIAAVQsIEBQ4oAAYAANjIAFowAMgqMAImBAUOABLhEezY2GgCOAf/wAIAEefcDMzYaAI4B/8QA",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 25,
      "patch": 0,
      "commitHash": "9855f57c"
    }
  }
}