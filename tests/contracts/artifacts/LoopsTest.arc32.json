{
  "hints": {
    "whileLoop()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "forLoop()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "doWhileLoop()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "breakWhileLoop()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "continueWhileLoop()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "breakForLoop()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "continueForLoop()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "breakDoWhileLoop()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "continueDoWhileLoop()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {},
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 0
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "LoopsTest",
    "desc": "",
    "methods": [
      {
        "name": "whileLoop",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "forLoop",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "doWhileLoop",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "breakWhileLoop",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "continueWhileLoop",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "breakForLoop",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "continueForLoop",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "breakDoWhileLoop",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "continueDoWhileLoop",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}