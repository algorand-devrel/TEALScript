{
  "name": "C",
  "desc": "",
  "methods": [
    {
      "name": "a",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "b",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "c",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 2
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {
        "aKey": {
          "key": "YQ==",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        },
        "bKey": {
          "key": "Yg==",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        }
      },
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            1,
            2,
            3,
            4,
            5,
            6
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            7,
            8
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            9
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            10,
            11
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            12
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            13,
            14
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            15
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            42
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/inheritance.algo.ts:15",
          "pc": [
            43,
            44,
            45
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/inheritance.algo.ts:15",
          "pc": [
            46,
            47
          ]
        },
        {
          "teal": 31,
          "source": "tests/contracts/inheritance.algo.ts:15",
          "pc": [
            48
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/inheritance.algo.ts:15",
          "pc": [
            49,
            50,
            51
          ]
        },
        {
          "teal": 39,
          "source": "tests/contracts/inheritance.algo.ts:16",
          "pc": [
            52,
            53,
            54
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/inheritance.algo.ts:16",
          "pc": [
            55,
            56,
            57
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/inheritance.algo.ts:16",
          "pc": [
            58
          ]
        },
        {
          "teal": 42,
          "source": "tests/contracts/inheritance.algo.ts:15",
          "pc": [
            59
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/inheritance.algo.ts:23",
          "pc": [
            60,
            61,
            62
          ]
        },
        {
          "teal": 48,
          "source": "tests/contracts/inheritance.algo.ts:23",
          "pc": [
            63,
            64
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/inheritance.algo.ts:23",
          "pc": [
            65
          ]
        },
        {
          "teal": 53,
          "source": "tests/contracts/inheritance.algo.ts:23",
          "pc": [
            66,
            67,
            68
          ]
        },
        {
          "teal": 57,
          "source": "tests/contracts/inheritance.algo.ts:24",
          "pc": [
            69,
            70,
            71
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/inheritance.algo.ts:24",
          "pc": [
            72
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/inheritance.algo.ts:24",
          "pc": [
            73,
            74,
            75
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/inheritance.algo.ts:24",
          "pc": [
            76
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/inheritance.algo.ts:24",
          "pc": [
            77
          ]
        },
        {
          "teal": 65,
          "source": "tests/contracts/inheritance.algo.ts:25",
          "pc": [
            78,
            79,
            80
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/inheritance.algo.ts:25",
          "pc": [
            81,
            82
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/inheritance.algo.ts:25",
          "pc": [
            83
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/inheritance.algo.ts:23",
          "pc": [
            84
          ]
        },
        {
          "teal": 73,
          "source": "tests/contracts/inheritance.algo.ts:30",
          "pc": [
            85,
            86,
            87
          ]
        },
        {
          "teal": 74,
          "source": "tests/contracts/inheritance.algo.ts:30",
          "pc": [
            88,
            89
          ]
        },
        {
          "teal": 75,
          "source": "tests/contracts/inheritance.algo.ts:30",
          "pc": [
            90
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/inheritance.algo.ts:30",
          "pc": [
            91,
            92,
            93
          ]
        },
        {
          "teal": 83,
          "source": "tests/contracts/inheritance.algo.ts:31",
          "pc": [
            94,
            95,
            96
          ]
        },
        {
          "teal": 84,
          "source": "tests/contracts/inheritance.algo.ts:31",
          "pc": [
            97
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/inheritance.algo.ts:31",
          "pc": [
            98,
            99
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/inheritance.algo.ts:31",
          "pc": [
            100
          ]
        },
        {
          "teal": 87,
          "source": "tests/contracts/inheritance.algo.ts:31",
          "pc": [
            101
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/inheritance.algo.ts:32",
          "pc": [
            102,
            103,
            104
          ]
        },
        {
          "teal": 92,
          "source": "tests/contracts/inheritance.algo.ts:32",
          "pc": [
            105
          ]
        },
        {
          "teal": 93,
          "source": "tests/contracts/inheritance.algo.ts:32",
          "pc": [
            106,
            107,
            108
          ]
        },
        {
          "teal": 94,
          "source": "tests/contracts/inheritance.algo.ts:32",
          "pc": [
            109
          ]
        },
        {
          "teal": 95,
          "source": "tests/contracts/inheritance.algo.ts:32",
          "pc": [
            110
          ]
        },
        {
          "teal": 96,
          "source": "tests/contracts/inheritance.algo.ts:30",
          "pc": [
            111
          ]
        },
        {
          "teal": 99,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            112,
            113
          ]
        },
        {
          "teal": 100,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            114
          ]
        },
        {
          "teal": 103,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            115,
            116,
            117,
            118,
            119,
            120
          ]
        },
        {
          "teal": 104,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            121,
            122,
            123
          ]
        },
        {
          "teal": 105,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            124,
            125,
            126,
            127
          ]
        },
        {
          "teal": 108,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            128
          ]
        },
        {
          "teal": 111,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            129,
            130,
            131,
            132,
            133,
            134
          ]
        },
        {
          "teal": 112,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            135,
            136,
            137,
            138,
            139,
            140
          ]
        },
        {
          "teal": 113,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            141,
            142,
            143,
            144,
            145,
            146
          ]
        },
        {
          "teal": 114,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            147,
            148,
            149
          ]
        },
        {
          "teal": 115,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "pc": [
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157
          ]
        },
        {
          "teal": 118,
          "source": "tests/contracts/inheritance.algo.ts:29",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            158
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmJ5dGVjYmxvY2sgMHg2MSAweDYyCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwNS4wCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQpwdXNoaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gYSgpdm9pZAoqYWJpX3JvdXRlX2E6CgkvLyBleGVjdXRlIGEoKXZvaWQKCWNhbGxzdWIgYQoJcHVzaGludCAxCglyZXR1cm4KCi8vIGEoKTogdm9pZAphOgoJcHJvdG8gMCAwCgoJLy8gdGVzdHMvY29udHJhY3RzL2luaGVyaXRhbmNlLmFsZ28udHM6MTYKCS8vIHRoaXMuYUtleS52YWx1ZSA9IDEzMzcKCWJ5dGUgMHg2MSAvLyAiYSIKCXB1c2hpbnQgMTMzNwoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gYigpdm9pZAoqYWJpX3JvdXRlX2I6CgkvLyBleGVjdXRlIGIoKXZvaWQKCWNhbGxzdWIgYgoJcHVzaGludCAxCglyZXR1cm4KCi8vIGIoKTogdm9pZApiOgoJcHJvdG8gMCAwCgoJLy8gdGVzdHMvY29udHJhY3RzL2luaGVyaXRhbmNlLmFsZ28udHM6MjQKCS8vIGFzc2VydCh0aGlzLmFLZXkudmFsdWUgPT09IDEzMzcpCglieXRlIDB4NjEgLy8gImEiCglhcHBfZ2xvYmFsX2dldAoJcHVzaGludCAxMzM3Cgk9PQoJYXNzZXJ0CgoJLy8gdGVzdHMvY29udHJhY3RzL2luaGVyaXRhbmNlLmFsZ28udHM6MjUKCS8vIHRoaXMuYktleS52YWx1ZSA9IDQyCglieXRlIDB4NjIgLy8gImIiCglwdXNoaW50IDQyCglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyBjKCl2b2lkCiphYmlfcm91dGVfYzoKCS8vIGV4ZWN1dGUgYygpdm9pZAoJY2FsbHN1YiBjCglwdXNoaW50IDEKCXJldHVybgoKLy8gYygpOiB2b2lkCmM6Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvaW5oZXJpdGFuY2UuYWxnby50czozMQoJLy8gYXNzZXJ0KHRoaXMuYktleS52YWx1ZSA9PT0gNDIpCglieXRlIDB4NjIgLy8gImIiCglhcHBfZ2xvYmFsX2dldAoJcHVzaGludCA0MgoJPT0KCWFzc2VydAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9pbmhlcml0YW5jZS5hbGdvLnRzOjMyCgkvLyBhc3NlcnQodGhpcy5hS2V5LnZhbHVlID09PSAxMzM3KQoJYnl0ZSAweDYxIC8vICJhIgoJYXBwX2dsb2JhbF9nZXQKCXB1c2hpbnQgMTMzNwoJPT0KCWFzc2VydAoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJcHVzaGludCAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCXB1c2hieXRlcyAweGI4NDQ3YjM2IC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglwdXNoYnl0ZXMgMHgxZTdhYWQxYyAvLyBtZXRob2QgImEoKXZvaWQiCglwdXNoYnl0ZXMgMHgzYWM5MGIwOCAvLyBtZXRob2QgImIoKXZvaWQiCglwdXNoYnl0ZXMgMHg4YzY5NjZmMCAvLyBtZXRob2QgImMoKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2EgKmFiaV9yb3V0ZV9iICphYmlfcm91dGVfYwoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiYCAWEBYjEYFIEGCzEZCI0MAFcAAAAAAAAAAAAAAEkAAAAAAAAAAAAAAIgAA4EBQ4oAAIABYYG5CmeJiAADgQFDigAAgAFhZIG5ChJEgAFigSpniYgAA4EBQ4oAAIABYmSBKhJEgAFhZIG5ChJEiYEBQ4AEuER7NjYaAI4B//AAgAQeeq0cgAQ6yQsIgASMaWbwNhoAjgP/jf+e/7cA",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}