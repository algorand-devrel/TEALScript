#pragma version 9

// This TEAL was generated by TEALScript v0.44.0
// https://github.com/algorand-devrel/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its repsective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

// boolTupleAccess()bool
abi_route_boolTupleAccess:
	byte 0x // push empty bytes to fill the stack frame for this subroutine's local variables

	// execute boolTupleAccess()bool
	callsub boolTupleAccess
	int 1
	return

boolTupleAccess:
	proto 1 0

	// tests/contracts/abi.algo.ts:864
	// a: [
	//       boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean
	//     ] = [
	//       false, false, false, false, false, false, false, false, true,
	//     ]
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x0002 // initial head offset
	byte 0x0000
	int 0
	int 0
	setbit
	int 1
	int 0
	setbit
	int 2
	int 0
	setbit
	int 3
	int 0
	setbit
	int 4
	int 0
	setbit
	int 5
	int 0
	setbit
	int 6
	int 0
	setbit
	int 7
	int 0
	setbit
	int 8
	int 1
	setbit
	callsub process_static_tuple_element
	pop // pop head offset
	concat // concat head and tail
	frame_bury -1 // a: [bool,bool,bool,bool,bool,bool,bool,bool,bool]

	// tests/contracts/abi.algo.ts:870
	// return a[8];
	frame_dig -1 // a: [bool,bool,bool,bool,bool,bool,bool,bool,bool]
	store 0 // full array
	int 0 // initial offset
	int 0 // headOffset
	+
	int 8
	*
	int 8
	+
	load 0 // full array
	swap
	getbit
	byte 0x00
	int 0
	uncover 2
	setbit
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_createApplication:
	int 1
	return

create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "boolTupleAccess()bool"
	txna ApplicationArgs 0
	match abi_route_boolTupleAccess
	err

process_static_tuple_element:
	proto 4 3
	frame_dig -4 // tuple head
	frame_dig -1 // element
	concat
	frame_dig -3 // tuple tail
	frame_dig -2 // head offset
	retsub