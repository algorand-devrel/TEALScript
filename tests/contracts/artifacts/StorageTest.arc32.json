{
  "hints": {
    "prefix()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "globalKeyPut()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "globalKeyGet()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "globalKeyDelete()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "globalKeyExists()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "localKeyPut(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "localKeyGet(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "localKeyDelete(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "localKeyExists(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxKeyPut()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxKeyGet()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxKeyDelete()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxKeyExists()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "globalMapPut()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "globalMapGet()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "globalMapDelete()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "globalMapExists()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "localMapPut(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "localMapGet(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "localMapDelete(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "localMapExists(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxMapPut()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxMapGet()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxMapDelete()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxMapExists()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxKeyCreate()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxMapCreate()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxKeyLength()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxMapLength()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxKeyReplace()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxMapReplace()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxKeyExtract()string": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxMapExtract()string": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "isOptedIn()bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "exGlobal()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "exLocal()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "accessStaticValueInLargeBox()uint16": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "dynamicAccessStaticValueInLargeBox(uint64)uint16": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxResize()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxSplice()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {
        "localKey": {
          "type": "bytes",
          "key": "foo"
        }
      },
      "reserved": {}
    },
    "global": {
      "declared": {
        "globalKey": {
          "type": "bytes",
          "key": "foo"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 3,
      "num_uints": 0
    },
    "local": {
      "num_byte_slices": 3,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "StorageTest",
    "desc": "",
    "methods": [
      {
        "name": "prefix",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "globalKeyPut",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "globalKeyGet",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "globalKeyDelete",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "globalKeyExists",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "localKeyPut",
        "args": [
          {
            "name": "a",
            "type": "account"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "localKeyGet",
        "args": [
          {
            "name": "a",
            "type": "account"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "localKeyDelete",
        "args": [
          {
            "name": "a",
            "type": "account"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "localKeyExists",
        "args": [
          {
            "name": "a",
            "type": "account"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "boxKeyPut",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "boxKeyGet",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "boxKeyDelete",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "boxKeyExists",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "globalMapPut",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "globalMapGet",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "globalMapDelete",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "globalMapExists",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "localMapPut",
        "args": [
          {
            "name": "a",
            "type": "account"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "localMapGet",
        "args": [
          {
            "name": "a",
            "type": "account"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "localMapDelete",
        "args": [
          {
            "name": "a",
            "type": "account"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "localMapExists",
        "args": [
          {
            "name": "a",
            "type": "account"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "boxMapPut",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "boxMapGet",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "boxMapDelete",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "boxMapExists",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "boxKeyCreate",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "boxMapCreate",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "boxKeyLength",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "boxMapLength",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "boxKeyReplace",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "boxMapReplace",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "boxKeyExtract",
        "args": [],
        "returns": {
          "type": "string"
        }
      },
      {
        "name": "boxMapExtract",
        "args": [],
        "returns": {
          "type": "string"
        }
      },
      {
        "name": "isOptedIn",
        "args": [],
        "returns": {
          "type": "bool"
        }
      },
      {
        "name": "exGlobal",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "exLocal",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "accessStaticValueInLargeBox",
        "args": [],
        "returns": {
          "type": "uint16"
        }
      },
      {
        "name": "dynamicAccessStaticValueInLargeBox",
        "args": [
          {
            "name": "i",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "uint16"
        }
      },
      {
        "name": "boxResize",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "boxSplice",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}