{
  "name": "ABITestNestedStructInBoxMap",
  "desc": "",
  "methods": [
    {
      "name": "nestedStructInBoxMap",
      "args": [],
      "returns": {
        "type": "((uint8))",
        "struct": "T8"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "T8": [
      {
        "name": "foo",
        "type": [
          {
            "name": "bar",
            "type": "uint8"
          }
        ]
      }
    ]
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {
        "bMap": {
          "keyType": "bytes",
          "valueType": "T8"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": [
      {
        "teal": 1,
        "source": 1276,
        "pc": [
          0
        ]
      },
      {
        "teal": 2,
        "source": 1276,
        "pc": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      {
        "teal": 3,
        "source": 1276,
        "pc": [
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33
        ]
      },
      {
        "teal": 15,
        "source": 1276,
        "pc": [
          34,
          35
        ]
      },
      {
        "teal": 16,
        "source": 1276,
        "pc": [
          36
        ]
      },
      {
        "teal": 17,
        "source": 1276,
        "pc": [
          37,
          38
        ]
      },
      {
        "teal": 18,
        "source": 1276,
        "pc": [
          39
        ]
      },
      {
        "teal": 19,
        "source": 1276,
        "pc": [
          40,
          41
        ]
      },
      {
        "teal": 20,
        "source": 1276,
        "pc": [
          42
        ]
      },
      {
        "teal": 21,
        "source": 1276,
        "pc": [
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68
        ]
      },
      {
        "teal": 25,
        "source": 1276,
        "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
        "pc": [
          69
        ]
      },
      {
        "teal": 30,
        "source": 1279,
        "pc": [
          70,
          71,
          72,
          73,
          74,
          75
        ]
      },
      {
        "teal": 33,
        "source": 1279,
        "pc": [
          76,
          77,
          78
        ]
      },
      {
        "teal": 34,
        "source": 1279,
        "pc": [
          79
        ]
      },
      {
        "teal": 35,
        "source": 1279,
        "pc": [
          80
        ]
      },
      {
        "teal": 36,
        "source": 1279,
        "pc": [
          81,
          82
        ]
      },
      {
        "teal": 37,
        "source": 1279,
        "pc": [
          83
        ]
      },
      {
        "teal": 41,
        "source": 1279,
        "pc": [
          84,
          85,
          86
        ]
      },
      {
        "teal": 45,
        "source": 1280,
        "pc": [
          87,
          88,
          89,
          90,
          91,
          92
        ]
      },
      {
        "teal": 46,
        "source": 1280,
        "pc": [
          93,
          94,
          95
        ]
      },
      {
        "teal": 47,
        "source": 1280,
        "pc": [
          96
        ]
      },
      {
        "teal": 51,
        "source": 1281,
        "pc": [
          97,
          98,
          99,
          100,
          101,
          102
        ]
      },
      {
        "teal": 52,
        "source": 1281,
        "pc": [
          103,
          104
        ]
      },
      {
        "teal": 53,
        "source": 1281,
        "pc": [
          105,
          106,
          107
        ]
      },
      {
        "teal": 54,
        "source": 1281,
        "pc": [
          108
        ]
      },
      {
        "teal": 58,
        "source": 1282,
        "pc": [
          109,
          110,
          111,
          112,
          113,
          114
        ]
      },
      {
        "teal": 59,
        "source": 1282,
        "pc": [
          115,
          116
        ]
      },
      {
        "teal": 60,
        "source": 1282,
        "pc": [
          117,
          118,
          119
        ]
      },
      {
        "teal": 61,
        "source": 1282,
        "pc": [
          120
        ]
      },
      {
        "teal": 65,
        "source": 1283,
        "pc": [
          121,
          122,
          123,
          124,
          125,
          126
        ]
      },
      {
        "teal": 66,
        "source": 1283,
        "pc": [
          127
        ]
      },
      {
        "teal": 69,
        "source": 1283,
        "errorMessage": "box value does not exist: this.bMap('bMap').value",
        "pc": [
          128
        ]
      },
      {
        "teal": 70,
        "source": 1279,
        "pc": [
          129
        ]
      },
      {
        "teal": 73,
        "source": 1276,
        "pc": [
          130,
          131
        ]
      },
      {
        "teal": 74,
        "source": 1276,
        "pc": [
          132
        ]
      },
      {
        "teal": 77,
        "source": 1276,
        "pc": [
          133,
          134,
          135,
          136,
          137,
          138
        ]
      },
      {
        "teal": 78,
        "source": 1276,
        "pc": [
          139,
          140,
          141
        ]
      },
      {
        "teal": 79,
        "source": 1276,
        "pc": [
          142,
          143,
          144,
          145
        ]
      },
      {
        "teal": 82,
        "source": 1276,
        "errorMessage": "this contract does not implement the given ABI method for create NoOp",
        "pc": [
          146
        ]
      },
      {
        "teal": 85,
        "source": 1276,
        "pc": [
          147,
          148,
          149,
          150,
          151,
          152
        ]
      },
      {
        "teal": 86,
        "source": 1276,
        "pc": [
          153,
          154,
          155
        ]
      },
      {
        "teal": 87,
        "source": 1276,
        "pc": [
          156,
          157,
          158,
          159
        ]
      },
      {
        "teal": 90,
        "source": 1276,
        "errorMessage": "this contract does not implement the given ABI method for call NoOp",
        "pc": [
          160
        ]
      }
    ],
    "clear": []
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAwIDEgNgpieXRlY2Jsb2NrIDB4MDIgMHgwMyAweDAxIDB4YTQxM2EwOWYgMHhiODQ0N2IzNiAweDYyNGQ2MTcwIDB4MTUxZjdjNzUKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuMTAyLjAKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCmludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIG5lc3RlZFN0cnVjdEluQm94TWFwKCkoKHVpbnQ4KSkKKmFiaV9yb3V0ZV9uZXN0ZWRTdHJ1Y3RJbkJveE1hcDoKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJYnl0ZSAweDE1MWY3Yzc1CgoJLy8gZXhlY3V0ZSBuZXN0ZWRTdHJ1Y3RJbkJveE1hcCgpKCh1aW50OCkpCgljYWxsc3ViIG5lc3RlZFN0cnVjdEluQm94TWFwCgljb25jYXQKCWxvZwoJaW50IDEKCXJldHVybgoKLy8gbmVzdGVkU3RydWN0SW5Cb3hNYXAoKTogVDgKbmVzdGVkU3RydWN0SW5Cb3hNYXA6Cglwcm90byAwIDEKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTI4MAoJLy8gdGhpcy5iTWFwKCdiTWFwJykudmFsdWUgPSB7IGZvbzogeyBiYXI6IDEgfSB9CglieXRlIDB4NjI0ZDYxNzAgLy8gImJNYXAiCglieXRlIDB4MDEKCWJveF9wdXQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTI4MQoJLy8gdGhpcy5iTWFwKCdiTWFwJykudmFsdWUuZm9vLmJhciA9IDMKCWJ5dGUgMHg2MjRkNjE3MCAvLyAiYk1hcCIKCWludCAwCglieXRlIDB4MDMKCWJveF9yZXBsYWNlCgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjEyODIKCS8vIHRoaXMuYk1hcCgnYk1hcCcpLnZhbHVlLmZvby5iYXIgPSA8dWludDg+MgoJYnl0ZSAweDYyNGQ2MTcwIC8vICJiTWFwIgoJaW50IDAKCWJ5dGUgMHgwMgoJYm94X3JlcGxhY2UKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTI4MwoJLy8gcmV0dXJuIHRoaXMuYk1hcCgnYk1hcCcpLnZhbHVlOwoJYnl0ZSAweDYyNGQ2MTcwIC8vICJiTWFwIgoJYm94X2dldAoKCS8vIGJveCB2YWx1ZSBkb2VzIG5vdCBleGlzdDogdGhpcy5iTWFwKCdiTWFwJykudmFsdWUKCWFzc2VydAoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJaW50IDEKCXJldHVybgoKKmNyZWF0ZV9Ob09wOgoJYnl0ZSAweGI4NDQ3YjM2IC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglieXRlIDB4YTQxM2EwOWYgLy8gbWV0aG9kICJuZXN0ZWRTdHJ1Y3RJbkJveE1hcCgpKCh1aW50OCkpIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9uZXN0ZWRTdHJ1Y3RJbkJveE1hcAoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiADAAEGJgcBAgEDAQEEpBOgnwS4RHs2BGJNYXAEFR98dTEYFIEGCzEZCI0MAE4AAAAAAAAAAAAAAEAAAAAAAAAAAAAAAIAEFR98dYgABVCwgQFDigABgARiTWFwgAEBv4AEYk1hcIEAgAEDu4AEYk1hcIEAgAECu4AEYk1hcL5EiYEBQ4AEuER7NjYaAI4B//AAgASkE6CfNhoAjgH/pgA=",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 25,
      "patch": 0,
      "commitHash": "9855f57c"
    }
  }
}