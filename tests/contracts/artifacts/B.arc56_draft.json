{
  "name": "B",
  "desc": "",
  "methods": [
    {
      "name": "a",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "b",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 2
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {
        "aKey": {
          "key": "YQ==",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        },
        "bKey": {
          "key": "Yg==",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        }
      },
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            1,
            2,
            3,
            4
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            5,
            6
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            7
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            8,
            9
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            10
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            11,
            12
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            13
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            40
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/inheritance.algo.ts:15",
          "pc": [
            41,
            42,
            43
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/inheritance.algo.ts:15",
          "pc": [
            44,
            45
          ]
        },
        {
          "teal": 31,
          "source": "tests/contracts/inheritance.algo.ts:15",
          "pc": [
            46
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/inheritance.algo.ts:15",
          "pc": [
            47,
            48,
            49
          ]
        },
        {
          "teal": 39,
          "source": "tests/contracts/inheritance.algo.ts:16",
          "pc": [
            50,
            51,
            52
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/inheritance.algo.ts:16",
          "pc": [
            53,
            54,
            55
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/inheritance.algo.ts:16",
          "pc": [
            56
          ]
        },
        {
          "teal": 42,
          "source": "tests/contracts/inheritance.algo.ts:15",
          "pc": [
            57
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/inheritance.algo.ts:23",
          "pc": [
            58,
            59,
            60
          ]
        },
        {
          "teal": 48,
          "source": "tests/contracts/inheritance.algo.ts:23",
          "pc": [
            61,
            62
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/inheritance.algo.ts:23",
          "pc": [
            63
          ]
        },
        {
          "teal": 53,
          "source": "tests/contracts/inheritance.algo.ts:23",
          "pc": [
            64,
            65,
            66
          ]
        },
        {
          "teal": 57,
          "source": "tests/contracts/inheritance.algo.ts:24",
          "pc": [
            67,
            68,
            69
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/inheritance.algo.ts:24",
          "pc": [
            70
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/inheritance.algo.ts:24",
          "pc": [
            71,
            72,
            73
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/inheritance.algo.ts:24",
          "pc": [
            74
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/inheritance.algo.ts:24",
          "pc": [
            75
          ]
        },
        {
          "teal": 65,
          "source": "tests/contracts/inheritance.algo.ts:25",
          "pc": [
            76,
            77,
            78
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/inheritance.algo.ts:25",
          "pc": [
            79,
            80
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/inheritance.algo.ts:25",
          "pc": [
            81
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/inheritance.algo.ts:23",
          "pc": [
            82
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            83,
            84
          ]
        },
        {
          "teal": 72,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            85
          ]
        },
        {
          "teal": 75,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            86,
            87,
            88,
            89,
            90,
            91
          ]
        },
        {
          "teal": 76,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            92,
            93,
            94
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            95,
            96,
            97,
            98
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            99
          ]
        },
        {
          "teal": 83,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            100,
            101,
            102,
            103,
            104,
            105
          ]
        },
        {
          "teal": 84,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            106,
            107,
            108,
            109,
            110,
            111
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            112,
            113,
            114
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "pc": [
            115,
            116,
            117,
            118,
            119,
            120
          ]
        },
        {
          "teal": 89,
          "source": "tests/contracts/inheritance.algo.ts:20",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            121
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmJ5dGVjYmxvY2sgMHg2MQoKLy8gVGhpcyBURUFMIHdhcyBnZW5lcmF0ZWQgYnkgVEVBTFNjcmlwdCB2MC4xMDUuMAovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGUgY29udHJhY3QsIGl0cyByZXNwZWN0aXZlIGJyYW5jaCB3aWxsIGJlICIqTk9UX0lNUExFTUVOVEVEIiB3aGljaCBqdXN0IGNvbnRhaW5zICJlcnIiCnR4biBBcHBsaWNhdGlvbklECiEKcHVzaGludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIGEoKXZvaWQKKmFiaV9yb3V0ZV9hOgoJLy8gZXhlY3V0ZSBhKCl2b2lkCgljYWxsc3ViIGEKCXB1c2hpbnQgMQoJcmV0dXJuCgovLyBhKCk6IHZvaWQKYToKCXByb3RvIDAgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9pbmhlcml0YW5jZS5hbGdvLnRzOjE2CgkvLyB0aGlzLmFLZXkudmFsdWUgPSAxMzM3CglieXRlIDB4NjEgLy8gImEiCglwdXNoaW50IDEzMzcKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIGIoKXZvaWQKKmFiaV9yb3V0ZV9iOgoJLy8gZXhlY3V0ZSBiKCl2b2lkCgljYWxsc3ViIGIKCXB1c2hpbnQgMQoJcmV0dXJuCgovLyBiKCk6IHZvaWQKYjoKCXByb3RvIDAgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9pbmhlcml0YW5jZS5hbGdvLnRzOjI0CgkvLyBhc3NlcnQodGhpcy5hS2V5LnZhbHVlID09PSAxMzM3KQoJYnl0ZSAweDYxIC8vICJhIgoJYXBwX2dsb2JhbF9nZXQKCXB1c2hpbnQgMTMzNwoJPT0KCWFzc2VydAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9pbmhlcml0YW5jZS5hbGdvLnRzOjI1CgkvLyB0aGlzLmJLZXkudmFsdWUgPSA0MgoJcHVzaGJ5dGVzIDB4NjIgLy8gImIiCglwdXNoaW50IDQyCglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJcHVzaGludCAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCXB1c2hieXRlcyAweGI4NDQ3YjM2IC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglwdXNoYnl0ZXMgMHgxZTdhYWQxYyAvLyBtZXRob2QgImEoKXZvaWQiCglwdXNoYnl0ZXMgMHgzYWM5MGIwOCAvLyBtZXRob2QgImIoKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2EgKmFiaV9yb3V0ZV9iCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoJZXJy",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiYBAWExGBSBBgsxGQiNDAA8AAAAAAAAAAAAAAAuAAAAAAAAAAAAAACIAAOBAUOKAACAAWGBuQpniYgAA4EBQ4oAAIABYWSBuQoSRIABYoEqZ4mBAUOABLhEezY2GgCOAf/wAIAEHnqtHIAEOskLCDYaAI4C/7D/wQA=",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}