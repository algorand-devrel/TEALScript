{
  "hints": {
    "prefix()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "globalRefPut()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "globalRefGet()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "globalRefDelete()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "globalRefExists()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "localRefPut(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "localRefGet(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "localRefDelete(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "localRefExists(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxRefPut()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxRefGet()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxRefDelete()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxRefExists()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "globalMapPut()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "globalMapGet()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "globalMapDelete()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "globalMapExists()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "localMapPut(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "localMapGet(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "localMapDelete(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "localMapExists(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxMapPut()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxMapGet()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxMapDelete()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxMapExists()void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "CREATE"
  },
  "schema": {
    "local": {
      "declared": {
        "localRef": {
          "type": "bytes",
          "key": "localRef"
        },
        "localMap": {
          "type": "bytes",
          "key": "localMap"
        }
      },
      "reserved": {}
    },
    "global": {
      "declared": {
        "globalRef": {
          "type": "bytes",
          "key": "globalRef"
        },
        "globalMap": {
          "type": "bytes",
          "key": "globalMap"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 2,
      "num_uints": 0
    },
    "local": {
      "num_byte_slices": 2,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKCWIgbWFpbgoKYWJpX3JvdXRlX3ByZWZpeDoKCXR4biBPbkNvbXBsZXRpb24KCWludCBOb09wCgk9PQoJdHhuIEFwcGxpY2F0aW9uSUQKCWludCAwCgkhPQoJJiYKCWFzc2VydAoJY2FsbHN1YiBwcmVmaXgKCWludCAxCglyZXR1cm4KCnByZWZpeDoKCXByb3RvIDAgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9zdG9yYWdlLmFsZ28udHM6MjAKCS8vIHRoaXMuYm94TWFwV2l0aFByZWZpeC5wdXQoJ29vJywgJ2JhcicpCglieXRlICJmIgoJYnl0ZSAib28iCgljb25jYXQKCWR1cAoJYm94X2RlbAoJcG9wCglieXRlICJiYXIiCglib3hfcHV0CglyZXRzdWIKCmFiaV9yb3V0ZV9nbG9iYWxSZWZQdXQ6Cgl0eG4gT25Db21wbGV0aW9uCglpbnQgTm9PcAoJPT0KCXR4biBBcHBsaWNhdGlvbklECglpbnQgMAoJIT0KCSYmCglhc3NlcnQKCWNhbGxzdWIgZ2xvYmFsUmVmUHV0CglpbnQgMQoJcmV0dXJuCgpnbG9iYWxSZWZQdXQ6Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvc3RvcmFnZS5hbGdvLnRzOjI0CgkvLyB0aGlzLmdsb2JhbFJlZi5wdXQoJ2JhcicpCglieXRlICJmb28iCglieXRlICJiYXIiCglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgphYmlfcm91dGVfZ2xvYmFsUmVmR2V0OgoJdHhuIE9uQ29tcGxldGlvbgoJaW50IE5vT3AKCT09Cgl0eG4gQXBwbGljYXRpb25JRAoJaW50IDAKCSE9CgkmJgoJYXNzZXJ0CgljYWxsc3ViIGdsb2JhbFJlZkdldAoJaW50IDEKCXJldHVybgoKZ2xvYmFsUmVmR2V0OgoJcHJvdG8gMCAwCgoJLy8gdGVzdHMvY29udHJhY3RzL3N0b3JhZ2UuYWxnby50czoyOAoJLy8gYXNzZXJ0KHRoaXMuZ2xvYmFsUmVmLmdldCgpID09PSAnYmFyJykKCWJ5dGUgImZvbyIKCWFwcF9nbG9iYWxfZ2V0CglieXRlICJiYXIiCgk9PQoJYXNzZXJ0CglyZXRzdWIKCmFiaV9yb3V0ZV9nbG9iYWxSZWZEZWxldGU6Cgl0eG4gT25Db21wbGV0aW9uCglpbnQgTm9PcAoJPT0KCXR4biBBcHBsaWNhdGlvbklECglpbnQgMAoJIT0KCSYmCglhc3NlcnQKCWNhbGxzdWIgZ2xvYmFsUmVmRGVsZXRlCglpbnQgMQoJcmV0dXJuCgpnbG9iYWxSZWZEZWxldGU6Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvc3RvcmFnZS5hbGdvLnRzOjMyCgkvLyB0aGlzLmdsb2JhbFJlZi5kZWxldGUoKQoJYnl0ZSAiZm9vIgoJYXBwX2dsb2JhbF9kZWwKCXJldHN1YgoKYWJpX3JvdXRlX2dsb2JhbFJlZkV4aXN0czoKCXR4biBPbkNvbXBsZXRpb24KCWludCBOb09wCgk9PQoJdHhuIEFwcGxpY2F0aW9uSUQKCWludCAwCgkhPQoJJiYKCWFzc2VydAoJY2FsbHN1YiBnbG9iYWxSZWZFeGlzdHMKCWludCAxCglyZXR1cm4KCmdsb2JhbFJlZkV4aXN0czoKCXByb3RvIDAgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9zdG9yYWdlLmFsZ28udHM6MzYKCS8vIHRoaXMuZ2xvYmFsUmVmLmV4aXN0cygpCgl0eG5hIEFwcGxpY2F0aW9ucyAwCglieXRlICJmb28iCglhcHBfZ2xvYmFsX2dldF9leAoJc3dhcAoJcG9wCglyZXRzdWIKCmFiaV9yb3V0ZV9sb2NhbFJlZlB1dDoKCXR4biBPbkNvbXBsZXRpb24KCWludCBOb09wCgk9PQoJdHhuIEFwcGxpY2F0aW9uSUQKCWludCAwCgkhPQoJJiYKCWFzc2VydAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoJdHhuYXMgQWNjb3VudHMKCWNhbGxzdWIgbG9jYWxSZWZQdXQKCWludCAxCglyZXR1cm4KCmxvY2FsUmVmUHV0OgoJcHJvdG8gMSAwCgoJLy8gdGVzdHMvY29udHJhY3RzL3N0b3JhZ2UuYWxnby50czo0MAoJLy8gdGhpcy5sb2NhbFJlZi5wdXQoYSwgJ2JhcicpCglmcmFtZV9kaWcgLTEgLy8gYTogYWNjb3VudAoJYnl0ZSAiZm9vIgoJYnl0ZSAiYmFyIgoJYXBwX2xvY2FsX3B1dAoJcmV0c3ViCgphYmlfcm91dGVfbG9jYWxSZWZHZXQ6Cgl0eG4gT25Db21wbGV0aW9uCglpbnQgTm9PcAoJPT0KCXR4biBBcHBsaWNhdGlvbklECglpbnQgMAoJIT0KCSYmCglhc3NlcnQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCXR4bmFzIEFjY291bnRzCgljYWxsc3ViIGxvY2FsUmVmR2V0CglpbnQgMQoJcmV0dXJuCgpsb2NhbFJlZkdldDoKCXByb3RvIDEgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9zdG9yYWdlLmFsZ28udHM6NDQKCS8vIGFzc2VydCh0aGlzLmxvY2FsUmVmLmdldChhKSA9PT0gJ2JhcicpCglmcmFtZV9kaWcgLTEgLy8gYTogYWNjb3VudAoJYnl0ZSAiZm9vIgoJYXBwX2xvY2FsX2dldAoJYnl0ZSAiYmFyIgoJPT0KCWFzc2VydAoJcmV0c3ViCgphYmlfcm91dGVfbG9jYWxSZWZEZWxldGU6Cgl0eG4gT25Db21wbGV0aW9uCglpbnQgTm9PcAoJPT0KCXR4biBBcHBsaWNhdGlvbklECglpbnQgMAoJIT0KCSYmCglhc3NlcnQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCXR4bmFzIEFjY291bnRzCgljYWxsc3ViIGxvY2FsUmVmRGVsZXRlCglpbnQgMQoJcmV0dXJuCgpsb2NhbFJlZkRlbGV0ZToKCXByb3RvIDEgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9zdG9yYWdlLmFsZ28udHM6NDgKCS8vIHRoaXMubG9jYWxSZWYuZGVsZXRlKGEpCglmcmFtZV9kaWcgLTEgLy8gYTogYWNjb3VudAoJYnl0ZSAiZm9vIgoJYXBwX2xvY2FsX2RlbAoJcmV0c3ViCgphYmlfcm91dGVfbG9jYWxSZWZFeGlzdHM6Cgl0eG4gT25Db21wbGV0aW9uCglpbnQgTm9PcAoJPT0KCXR4biBBcHBsaWNhdGlvbklECglpbnQgMAoJIT0KCSYmCglhc3NlcnQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCXR4bmFzIEFjY291bnRzCgljYWxsc3ViIGxvY2FsUmVmRXhpc3RzCglpbnQgMQoJcmV0dXJuCgpsb2NhbFJlZkV4aXN0czoKCXByb3RvIDEgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9zdG9yYWdlLmFsZ28udHM6NTIKCS8vIHRoaXMubG9jYWxSZWYuZXhpc3RzKGEpCglmcmFtZV9kaWcgLTEgLy8gYTogYWNjb3VudAoJdHhuYSBBcHBsaWNhdGlvbnMgMAoJYnl0ZSAiZm9vIgoJYXBwX2xvY2FsX2dldF9leAoJc3dhcAoJcG9wCglyZXRzdWIKCmFiaV9yb3V0ZV9ib3hSZWZQdXQ6Cgl0eG4gT25Db21wbGV0aW9uCglpbnQgTm9PcAoJPT0KCXR4biBBcHBsaWNhdGlvbklECglpbnQgMAoJIT0KCSYmCglhc3NlcnQKCWNhbGxzdWIgYm94UmVmUHV0CglpbnQgMQoJcmV0dXJuCgpib3hSZWZQdXQ6Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvc3RvcmFnZS5hbGdvLnRzOjU2CgkvLyB0aGlzLmJveFJlZi5wdXQoJ2JhcicpCglieXRlICJmb28iCglieXRlICJiYXIiCglib3hfcHV0CglyZXRzdWIKCmFiaV9yb3V0ZV9ib3hSZWZHZXQ6Cgl0eG4gT25Db21wbGV0aW9uCglpbnQgTm9PcAoJPT0KCXR4biBBcHBsaWNhdGlvbklECglpbnQgMAoJIT0KCSYmCglhc3NlcnQKCWNhbGxzdWIgYm94UmVmR2V0CglpbnQgMQoJcmV0dXJuCgpib3hSZWZHZXQ6Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvc3RvcmFnZS5hbGdvLnRzOjYwCgkvLyBhc3NlcnQodGhpcy5ib3hSZWYuZ2V0KCkgPT09ICdiYXInKQoJYnl0ZSAiZm9vIgoJYm94X2dldAoJYXNzZXJ0CglieXRlICJiYXIiCgk9PQoJYXNzZXJ0CglyZXRzdWIKCmFiaV9yb3V0ZV9ib3hSZWZEZWxldGU6Cgl0eG4gT25Db21wbGV0aW9uCglpbnQgTm9PcAoJPT0KCXR4biBBcHBsaWNhdGlvbklECglpbnQgMAoJIT0KCSYmCglhc3NlcnQKCWNhbGxzdWIgYm94UmVmRGVsZXRlCglpbnQgMQoJcmV0dXJuCgpib3hSZWZEZWxldGU6Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvc3RvcmFnZS5hbGdvLnRzOjY0CgkvLyB0aGlzLmJveFJlZi5kZWxldGUoKQoJYnl0ZSAiZm9vIgoJYm94X2RlbAoJcmV0c3ViCgphYmlfcm91dGVfYm94UmVmRXhpc3RzOgoJdHhuIE9uQ29tcGxldGlvbgoJaW50IE5vT3AKCT09Cgl0eG4gQXBwbGljYXRpb25JRAoJaW50IDAKCSE9CgkmJgoJYXNzZXJ0CgljYWxsc3ViIGJveFJlZkV4aXN0cwoJaW50IDEKCXJldHVybgoKYm94UmVmRXhpc3RzOgoJcHJvdG8gMCAwCgoJLy8gdGVzdHMvY29udHJhY3RzL3N0b3JhZ2UuYWxnby50czo2OAoJLy8gdGhpcy5ib3hSZWYuZXhpc3RzKCkKCWJ5dGUgImZvbyIKCWJveF9nZXQKCXN3YXAKCXBvcAoJcmV0c3ViCgphYmlfcm91dGVfZ2xvYmFsTWFwUHV0OgoJdHhuIE9uQ29tcGxldGlvbgoJaW50IE5vT3AKCT09Cgl0eG4gQXBwbGljYXRpb25JRAoJaW50IDAKCSE9CgkmJgoJYXNzZXJ0CgljYWxsc3ViIGdsb2JhbE1hcFB1dAoJaW50IDEKCXJldHVybgoKZ2xvYmFsTWFwUHV0OgoJcHJvdG8gMCAwCgoJLy8gdGVzdHMvY29udHJhY3RzL3N0b3JhZ2UuYWxnby50czo3MgoJLy8gdGhpcy5nbG9iYWxNYXAucHV0KCdmb28nLCAnYmFyJykKCWJ5dGUgImZvbyIKCWJ5dGUgImJhciIKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCmFiaV9yb3V0ZV9nbG9iYWxNYXBHZXQ6Cgl0eG4gT25Db21wbGV0aW9uCglpbnQgTm9PcAoJPT0KCXR4biBBcHBsaWNhdGlvbklECglpbnQgMAoJIT0KCSYmCglhc3NlcnQKCWNhbGxzdWIgZ2xvYmFsTWFwR2V0CglpbnQgMQoJcmV0dXJuCgpnbG9iYWxNYXBHZXQ6Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvc3RvcmFnZS5hbGdvLnRzOjc2CgkvLyBhc3NlcnQodGhpcy5nbG9iYWxNYXAuZ2V0KCdmb28nKSA9PT0gJ2JhcicpCglieXRlICJmb28iCglhcHBfZ2xvYmFsX2dldAoJYnl0ZSAiYmFyIgoJPT0KCWFzc2VydAoJcmV0c3ViCgphYmlfcm91dGVfZ2xvYmFsTWFwRGVsZXRlOgoJdHhuIE9uQ29tcGxldGlvbgoJaW50IE5vT3AKCT09Cgl0eG4gQXBwbGljYXRpb25JRAoJaW50IDAKCSE9CgkmJgoJYXNzZXJ0CgljYWxsc3ViIGdsb2JhbE1hcERlbGV0ZQoJaW50IDEKCXJldHVybgoKZ2xvYmFsTWFwRGVsZXRlOgoJcHJvdG8gMCAwCgoJLy8gdGVzdHMvY29udHJhY3RzL3N0b3JhZ2UuYWxnby50czo4MAoJLy8gdGhpcy5nbG9iYWxNYXAuZGVsZXRlKCdmb28nKQoJYnl0ZSAiZm9vIgoJYXBwX2dsb2JhbF9kZWwKCXJldHN1YgoKYWJpX3JvdXRlX2dsb2JhbE1hcEV4aXN0czoKCXR4biBPbkNvbXBsZXRpb24KCWludCBOb09wCgk9PQoJdHhuIEFwcGxpY2F0aW9uSUQKCWludCAwCgkhPQoJJiYKCWFzc2VydAoJY2FsbHN1YiBnbG9iYWxNYXBFeGlzdHMKCWludCAxCglyZXR1cm4KCmdsb2JhbE1hcEV4aXN0czoKCXByb3RvIDAgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9zdG9yYWdlLmFsZ28udHM6ODQKCS8vIHRoaXMuZ2xvYmFsTWFwLmV4aXN0cygnZm9vJykKCXR4bmEgQXBwbGljYXRpb25zIDAKCWJ5dGUgImZvbyIKCWFwcF9nbG9iYWxfZ2V0X2V4Cglzd2FwCglwb3AKCXJldHN1YgoKYWJpX3JvdXRlX2xvY2FsTWFwUHV0OgoJdHhuIE9uQ29tcGxldGlvbgoJaW50IE5vT3AKCT09Cgl0eG4gQXBwbGljYXRpb25JRAoJaW50IDAKCSE9CgkmJgoJYXNzZXJ0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgl0eG5hcyBBY2NvdW50cwoJY2FsbHN1YiBsb2NhbE1hcFB1dAoJaW50IDEKCXJldHVybgoKbG9jYWxNYXBQdXQ6Cglwcm90byAxIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvc3RvcmFnZS5hbGdvLnRzOjg4CgkvLyB0aGlzLmxvY2FsTWFwLnB1dChhLCAnZm9vJywgJ2JhcicpCglmcmFtZV9kaWcgLTEgLy8gYTogYWNjb3VudAoJYnl0ZSAiZm9vIgoJYnl0ZSAiYmFyIgoJYXBwX2xvY2FsX3B1dAoJcmV0c3ViCgphYmlfcm91dGVfbG9jYWxNYXBHZXQ6Cgl0eG4gT25Db21wbGV0aW9uCglpbnQgTm9PcAoJPT0KCXR4biBBcHBsaWNhdGlvbklECglpbnQgMAoJIT0KCSYmCglhc3NlcnQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCXR4bmFzIEFjY291bnRzCgljYWxsc3ViIGxvY2FsTWFwR2V0CglpbnQgMQoJcmV0dXJuCgpsb2NhbE1hcEdldDoKCXByb3RvIDEgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9zdG9yYWdlLmFsZ28udHM6OTIKCS8vIGFzc2VydCh0aGlzLmxvY2FsTWFwLmdldChhLCAnZm9vJykgPT09ICdiYXInKQoJZnJhbWVfZGlnIC0xIC8vIGE6IGFjY291bnQKCWJ5dGUgImZvbyIKCWFwcF9sb2NhbF9nZXQKCWJ5dGUgImJhciIKCT09Cglhc3NlcnQKCXJldHN1YgoKYWJpX3JvdXRlX2xvY2FsTWFwRGVsZXRlOgoJdHhuIE9uQ29tcGxldGlvbgoJaW50IE5vT3AKCT09Cgl0eG4gQXBwbGljYXRpb25JRAoJaW50IDAKCSE9CgkmJgoJYXNzZXJ0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgl0eG5hcyBBY2NvdW50cwoJY2FsbHN1YiBsb2NhbE1hcERlbGV0ZQoJaW50IDEKCXJldHVybgoKbG9jYWxNYXBEZWxldGU6Cglwcm90byAxIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvc3RvcmFnZS5hbGdvLnRzOjk2CgkvLyB0aGlzLmxvY2FsTWFwLmRlbGV0ZShhLCAnZm9vJykKCWZyYW1lX2RpZyAtMSAvLyBhOiBhY2NvdW50CglieXRlICJmb28iCglhcHBfbG9jYWxfZGVsCglyZXRzdWIKCmFiaV9yb3V0ZV9sb2NhbE1hcEV4aXN0czoKCXR4biBPbkNvbXBsZXRpb24KCWludCBOb09wCgk9PQoJdHhuIEFwcGxpY2F0aW9uSUQKCWludCAwCgkhPQoJJiYKCWFzc2VydAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoJdHhuYXMgQWNjb3VudHMKCWNhbGxzdWIgbG9jYWxNYXBFeGlzdHMKCWludCAxCglyZXR1cm4KCmxvY2FsTWFwRXhpc3RzOgoJcHJvdG8gMSAwCgoJLy8gdGVzdHMvY29udHJhY3RzL3N0b3JhZ2UuYWxnby50czoxMDAKCS8vIHRoaXMubG9jYWxNYXAuZXhpc3RzKGEsICdmb28nKQoJZnJhbWVfZGlnIC0xIC8vIGE6IGFjY291bnQKCXR4bmEgQXBwbGljYXRpb25zIDAKCWJ5dGUgImZvbyIKCWFwcF9sb2NhbF9nZXRfZXgKCXN3YXAKCXBvcAoJcmV0c3ViCgphYmlfcm91dGVfYm94TWFwUHV0OgoJdHhuIE9uQ29tcGxldGlvbgoJaW50IE5vT3AKCT09Cgl0eG4gQXBwbGljYXRpb25JRAoJaW50IDAKCSE9CgkmJgoJYXNzZXJ0CgljYWxsc3ViIGJveE1hcFB1dAoJaW50IDEKCXJldHVybgoKYm94TWFwUHV0OgoJcHJvdG8gMCAwCgoJLy8gdGVzdHMvY29udHJhY3RzL3N0b3JhZ2UuYWxnby50czoxMDQKCS8vIHRoaXMuYm94TWFwLnB1dCgnZm9vJywgJ2JhcicpCglieXRlICJmb28iCglieXRlICJiYXIiCglib3hfcHV0CglyZXRzdWIKCmFiaV9yb3V0ZV9ib3hNYXBHZXQ6Cgl0eG4gT25Db21wbGV0aW9uCglpbnQgTm9PcAoJPT0KCXR4biBBcHBsaWNhdGlvbklECglpbnQgMAoJIT0KCSYmCglhc3NlcnQKCWNhbGxzdWIgYm94TWFwR2V0CglpbnQgMQoJcmV0dXJuCgpib3hNYXBHZXQ6Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvc3RvcmFnZS5hbGdvLnRzOjEwOAoJLy8gYXNzZXJ0KHRoaXMuYm94TWFwLmdldCgnZm9vJykgPT09ICdiYXInKQoJYnl0ZSAiZm9vIgoJYm94X2dldAoJYXNzZXJ0CglieXRlICJiYXIiCgk9PQoJYXNzZXJ0CglyZXRzdWIKCmFiaV9yb3V0ZV9ib3hNYXBEZWxldGU6Cgl0eG4gT25Db21wbGV0aW9uCglpbnQgTm9PcAoJPT0KCXR4biBBcHBsaWNhdGlvbklECglpbnQgMAoJIT0KCSYmCglhc3NlcnQKCWNhbGxzdWIgYm94TWFwRGVsZXRlCglpbnQgMQoJcmV0dXJuCgpib3hNYXBEZWxldGU6Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvc3RvcmFnZS5hbGdvLnRzOjExMgoJLy8gdGhpcy5ib3hNYXAuZGVsZXRlKCdmb28nKQoJYnl0ZSAiZm9vIgoJYm94X2RlbAoJcmV0c3ViCgphYmlfcm91dGVfYm94TWFwRXhpc3RzOgoJdHhuIE9uQ29tcGxldGlvbgoJaW50IE5vT3AKCT09Cgl0eG4gQXBwbGljYXRpb25JRAoJaW50IDAKCSE9CgkmJgoJYXNzZXJ0CgljYWxsc3ViIGJveE1hcEV4aXN0cwoJaW50IDEKCXJldHVybgoKYm94TWFwRXhpc3RzOgoJcHJvdG8gMCAwCgoJLy8gdGVzdHMvY29udHJhY3RzL3N0b3JhZ2UuYWxnby50czoxMTYKCS8vIHRoaXMuYm94TWFwLmV4aXN0cygnZm9vJykKCWJ5dGUgImZvbyIKCWJveF9nZXQKCXN3YXAKCXBvcAoJcmV0c3ViCgptYWluOgoJdHhuIE51bUFwcEFyZ3MKCWJueiByb3V0ZV9hYmkKCgkvLyBkZWZhdWx0IGNyZWF0ZUFwcGxpY2F0aW9uCgl0eG4gQXBwbGljYXRpb25JRAoJaW50IDAKCT09Cgl0eG4gT25Db21wbGV0aW9uCglpbnQgTm9PcAoJPT0KCSYmCglyZXR1cm4KCnJvdXRlX2FiaToKCW1ldGhvZCAicHJlZml4KCl2b2lkIgoJbWV0aG9kICJnbG9iYWxSZWZQdXQoKXZvaWQiCgltZXRob2QgImdsb2JhbFJlZkdldCgpdm9pZCIKCW1ldGhvZCAiZ2xvYmFsUmVmRGVsZXRlKCl2b2lkIgoJbWV0aG9kICJnbG9iYWxSZWZFeGlzdHMoKXZvaWQiCgltZXRob2QgImxvY2FsUmVmUHV0KGFjY291bnQpdm9pZCIKCW1ldGhvZCAibG9jYWxSZWZHZXQoYWNjb3VudCl2b2lkIgoJbWV0aG9kICJsb2NhbFJlZkRlbGV0ZShhY2NvdW50KXZvaWQiCgltZXRob2QgImxvY2FsUmVmRXhpc3RzKGFjY291bnQpdm9pZCIKCW1ldGhvZCAiYm94UmVmUHV0KCl2b2lkIgoJbWV0aG9kICJib3hSZWZHZXQoKXZvaWQiCgltZXRob2QgImJveFJlZkRlbGV0ZSgpdm9pZCIKCW1ldGhvZCAiYm94UmVmRXhpc3RzKCl2b2lkIgoJbWV0aG9kICJnbG9iYWxNYXBQdXQoKXZvaWQiCgltZXRob2QgImdsb2JhbE1hcEdldCgpdm9pZCIKCW1ldGhvZCAiZ2xvYmFsTWFwRGVsZXRlKCl2b2lkIgoJbWV0aG9kICJnbG9iYWxNYXBFeGlzdHMoKXZvaWQiCgltZXRob2QgImxvY2FsTWFwUHV0KGFjY291bnQpdm9pZCIKCW1ldGhvZCAibG9jYWxNYXBHZXQoYWNjb3VudCl2b2lkIgoJbWV0aG9kICJsb2NhbE1hcERlbGV0ZShhY2NvdW50KXZvaWQiCgltZXRob2QgImxvY2FsTWFwRXhpc3RzKGFjY291bnQpdm9pZCIKCW1ldGhvZCAiYm94TWFwUHV0KCl2b2lkIgoJbWV0aG9kICJib3hNYXBHZXQoKXZvaWQiCgltZXRob2QgImJveE1hcERlbGV0ZSgpdm9pZCIKCW1ldGhvZCAiYm94TWFwRXhpc3RzKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggYWJpX3JvdXRlX3ByZWZpeCBhYmlfcm91dGVfZ2xvYmFsUmVmUHV0IGFiaV9yb3V0ZV9nbG9iYWxSZWZHZXQgYWJpX3JvdXRlX2dsb2JhbFJlZkRlbGV0ZSBhYmlfcm91dGVfZ2xvYmFsUmVmRXhpc3RzIGFiaV9yb3V0ZV9sb2NhbFJlZlB1dCBhYmlfcm91dGVfbG9jYWxSZWZHZXQgYWJpX3JvdXRlX2xvY2FsUmVmRGVsZXRlIGFiaV9yb3V0ZV9sb2NhbFJlZkV4aXN0cyBhYmlfcm91dGVfYm94UmVmUHV0IGFiaV9yb3V0ZV9ib3hSZWZHZXQgYWJpX3JvdXRlX2JveFJlZkRlbGV0ZSBhYmlfcm91dGVfYm94UmVmRXhpc3RzIGFiaV9yb3V0ZV9nbG9iYWxNYXBQdXQgYWJpX3JvdXRlX2dsb2JhbE1hcEdldCBhYmlfcm91dGVfZ2xvYmFsTWFwRGVsZXRlIGFiaV9yb3V0ZV9nbG9iYWxNYXBFeGlzdHMgYWJpX3JvdXRlX2xvY2FsTWFwUHV0IGFiaV9yb3V0ZV9sb2NhbE1hcEdldCBhYmlfcm91dGVfbG9jYWxNYXBEZWxldGUgYWJpX3JvdXRlX2xvY2FsTWFwRXhpc3RzIGFiaV9yb3V0ZV9ib3hNYXBQdXQgYWJpX3JvdXRlX2JveE1hcEdldCBhYmlfcm91dGVfYm94TWFwRGVsZXRlIGFiaV9yb3V0ZV9ib3hNYXBFeGlzdHM=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50IDEKcmV0dXJu"
  },
  "contract": {
    "name": "StorageTest",
    "desc": "",
    "methods": [
      {
        "name": "prefix",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "globalRefPut",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "globalRefGet",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "globalRefDelete",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "globalRefExists",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "localRefPut",
        "args": [
          {
            "name": "a",
            "type": "account",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "localRefGet",
        "args": [
          {
            "name": "a",
            "type": "account",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "localRefDelete",
        "args": [
          {
            "name": "a",
            "type": "account",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "localRefExists",
        "args": [
          {
            "name": "a",
            "type": "account",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "boxRefPut",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "boxRefGet",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "boxRefDelete",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "boxRefExists",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "globalMapPut",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "globalMapGet",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "globalMapDelete",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "globalMapExists",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "localMapPut",
        "args": [
          {
            "name": "a",
            "type": "account",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "localMapGet",
        "args": [
          {
            "name": "a",
            "type": "account",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "localMapDelete",
        "args": [
          {
            "name": "a",
            "type": "account",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "localMapExists",
        "args": [
          {
            "name": "a",
            "type": "account",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "boxMapPut",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "boxMapGet",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "boxMapDelete",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "boxMapExists",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      }
    ]
  }
}