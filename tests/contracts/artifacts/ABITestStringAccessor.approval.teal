#pragma version 9

// This TEAL was generated by TEALScript v0.65.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its respective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

// stringAccessor()string
abi_route_stringAccessor:
	// The ABI return prefix
	byte 0x151f7c75

	// execute stringAccessor()string
	callsub stringAccessor
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	log
	int 1
	return

stringAccessor:
	// Setup the frame for args and return value. Use empty bytes to create space on the stack for local variables if necessary
	proto 0 1; byte 0x

	// tests/contracts/abi.algo.ts:843
	// s = 'Hello World'
	byte 0x48656c6c6f20576f726c64 // "Hello World"
	frame_bury 0 // s: bytes

	// tests/contracts/abi.algo.ts:845
	// return s[1];
	frame_dig 0 // s: bytes
	extract 1 1

	// set the subroutine return value
	frame_bury 0
	retsub

abi_route_createApplication:
	int 1
	return

create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "stringAccessor()string"
	txna ApplicationArgs 0
	match abi_route_stringAccessor
	err