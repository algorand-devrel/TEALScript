#pragma version 8
	b main

abi_route_spliceFirstElementValue:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	!=
	&&
	assert
	byte 0x; dup
	callsub spliceFirstElementValue
	int 1
	return

spliceFirstElementValue:
	proto 2 0

	// tests/contracts/abi.algo.ts:493
	// a: uint<16>[] = [1, 2, 3]
	int 1
	itob
	extract 6 0
	int 2
	itob
	extract 6 0
	concat
	int 3
	itob
	extract 6 0
	concat
	byte 0x0003
	swap
	concat
	frame_bury -1 // a: uint16[]

	// tests/contracts/abi.algo.ts:495
	// v = a.splice(0, 1)
	frame_dig -1 // a: uint16[]
	int 0
	extract_uint16
	int 1
	-
	itob
	extract 6 2
	int 0
	int 2
	*
	int 2
	+
	store 12 // splice start
	int 1
	int 2
	*
	int 2
	+
	store 13 // splice byte length
	frame_dig -1 // a: uint16[]
	int 2
	load 12 // splice start
	substring3
	frame_dig -1 // a: uint16[]
	dup
	len
	load 12 // splice start
	load 13 // splice byte length
	+
	int 2
	-
	swap
	substring3
	concat
	concat
	int 1
	itob
	extract 6 2
	frame_dig -1 // a: uint16[]
	load 12 // splice start
	load 13 // splice byte length
	int 2
	-
	extract3
	concat
	swap
	frame_bury -1 // a: uint16[]
	frame_bury -2 // v: uint16[]

	// tests/contracts/abi.algo.ts:497
	// return v;
	frame_dig -2 // v: uint16[]
	byte 0x151f7c75
	swap
	concat
	log
	retsub

main:
	txn NumAppArgs
	bnz route_abi

	// default createApplication
	txn ApplicationID
	int 0
	==
	txn OnCompletion
	int NoOp
	==
	&&
	return

route_abi:
	method "spliceFirstElementValue()uint16[]"
	txna ApplicationArgs 0
	match abi_route_spliceFirstElementValue
	err