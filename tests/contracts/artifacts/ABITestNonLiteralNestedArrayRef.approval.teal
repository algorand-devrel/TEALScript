#pragma version 9

// This TEAL was generated by TEALScript v0.65.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its repsective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

// nonLiteralNestedArrayRef()uint8[2][2]
abi_route_nonLiteralNestedArrayRef:
	// The ABI return prefix
	byte 0x151f7c75

	// execute nonLiteralNestedArrayRef()uint8[2][2]
	callsub nonLiteralNestedArrayRef
	concat
	log
	int 1
	return

nonLiteralNestedArrayRef:
	// Setup the frame for args and return value. Use empty bytes to create space on the stack for local variables if necessary
	proto 0 1; byte 0x; dupn 2

	// tests/contracts/abi.algo.ts:784
	// a: StaticArray<StaticArray<uint<8>, 2>, 2> = [
	//       [1, 2],
	//       [3, 4],
	//     ]
	byte 0x01020304
	frame_bury 0 // a: uint8[2][2]

	// tests/contracts/abi.algo.ts:789
	// i = 1
	int 1
	frame_bury 1 // i: uint64
	frame_dig 1 // i: uint64
	frame_bury 2 // accessor: accessor//0//b

	// tests/contracts/abi.algo.ts:792
	// i = 1337
	int 1337
	frame_bury 1 // i: uint64

	// tests/contracts/abi.algo.ts:794
	// b[1] = 5 as uint<8>
	frame_dig 0 // a: uint8[2][2]
	store 255 // full array
	int 0 // initial offset
	frame_dig 2 // saved accessor: accessor//0//b
	int 2
	* // acc * typeLength
	+
	int 1 // acc * typeLength
	+
	load 255 // full array
	swap
	byte 0x05
	replace3
	frame_bury 0 // b: uint8[2][2]

	// tests/contracts/abi.algo.ts:796
	// return a;
	frame_dig 0 // a: uint8[2][2]

	// bury the return value and pop all of the stack used for local variables
	frame_bury 0
	popn 3
	retsub

abi_route_createApplication:
	int 1
	return

create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "nonLiteralNestedArrayRef()uint8[2][2]"
	txna ApplicationArgs 0
	match abi_route_nonLiteralNestedArrayRef
	err