{
  "name": "ABITestAccesStringInTuple",
  "desc": "",
  "methods": [
    {
      "name": "accesStringInTuple",
      "args": [],
      "returns": {
        "type": "string"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": [
    {
      "teal": 1,
      "source": 548,
      "pc": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ]
    },
    {
      "teal": 13,
      "source": 548,
      "pc": [
        9,
        10
      ]
    },
    {
      "teal": 14,
      "source": 548,
      "pc": [
        11
      ]
    },
    {
      "teal": 15,
      "source": 548,
      "pc": [
        12,
        13
      ]
    },
    {
      "teal": 16,
      "source": 548,
      "pc": [
        14
      ]
    },
    {
      "teal": 17,
      "source": 548,
      "pc": [
        15,
        16
      ]
    },
    {
      "teal": 18,
      "source": 548,
      "pc": [
        17
      ]
    },
    {
      "teal": 19,
      "source": 548,
      "pc": [
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43
      ]
    },
    {
      "teal": 23,
      "source": 548,
      "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "pc": [
        44
      ]
    },
    {
      "teal": 28,
      "source": 549,
      "pc": [
        45,
        46,
        47,
        48,
        49,
        50
      ]
    },
    {
      "teal": 31,
      "source": 549,
      "pc": [
        51,
        52,
        53
      ]
    },
    {
      "teal": 32,
      "source": 549,
      "pc": [
        54
      ]
    },
    {
      "teal": 33,
      "source": 549,
      "pc": [
        55
      ]
    },
    {
      "teal": 34,
      "source": 549,
      "pc": [
        56
      ]
    },
    {
      "teal": 35,
      "source": 549,
      "pc": [
        57,
        58,
        59
      ]
    },
    {
      "teal": 36,
      "source": 549,
      "pc": [
        60
      ]
    },
    {
      "teal": 37,
      "source": 549,
      "pc": [
        61
      ]
    },
    {
      "teal": 38,
      "source": 549,
      "pc": [
        62
      ]
    },
    {
      "teal": 39,
      "source": 549,
      "pc": [
        63
      ]
    },
    {
      "teal": 40,
      "source": 549,
      "pc": [
        64
      ]
    },
    {
      "teal": 41,
      "source": 549,
      "pc": [
        65
      ]
    },
    {
      "teal": 45,
      "source": 549,
      "pc": [
        66,
        67,
        68
      ]
    },
    {
      "teal": 48,
      "source": 549,
      "pc": [
        69
      ]
    },
    {
      "teal": 52,
      "source": 550,
      "pc": [
        70
      ]
    },
    {
      "teal": 53,
      "source": 550,
      "pc": [
        71
      ]
    },
    {
      "teal": 54,
      "source": 550,
      "pc": [
        72,
        73,
        74,
        75
      ]
    },
    {
      "teal": 55,
      "source": 550,
      "pc": [
        76,
        77,
        78,
        79
      ]
    },
    {
      "teal": 56,
      "source": 550,
      "pc": [
        80,
        81,
        82
      ]
    },
    {
      "teal": 57,
      "source": 550,
      "pc": [
        83,
        84,
        85,
        86,
        87
      ]
    },
    {
      "teal": 58,
      "source": 550,
      "pc": [
        88,
        89,
        90
      ]
    },
    {
      "teal": 59,
      "source": 550,
      "pc": [
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        103,
        104,
        105,
        106
      ]
    },
    {
      "teal": 60,
      "source": 550,
      "pc": [
        107,
        108,
        109
      ]
    },
    {
      "teal": 61,
      "source": 550,
      "pc": [
        110,
        111,
        112,
        113,
        114
      ]
    },
    {
      "teal": 62,
      "source": 550,
      "pc": [
        115,
        116,
        117
      ]
    },
    {
      "teal": 63,
      "source": 550,
      "pc": [
        118
      ]
    },
    {
      "teal": 64,
      "source": 550,
      "pc": [
        119
      ]
    },
    {
      "teal": 65,
      "source": 550,
      "pc": [
        120,
        121
      ]
    },
    {
      "teal": 69,
      "source": 552,
      "pc": [
        122,
        123
      ]
    },
    {
      "teal": 70,
      "source": 552,
      "pc": [
        124,
        125
      ]
    },
    {
      "teal": 71,
      "source": 552,
      "pc": [
        126
      ]
    },
    {
      "teal": 72,
      "source": 552,
      "pc": [
        127,
        128
      ]
    },
    {
      "teal": 73,
      "source": 552,
      "pc": [
        129,
        130
      ]
    },
    {
      "teal": 74,
      "source": 552,
      "pc": [
        131,
        132
      ]
    },
    {
      "teal": 75,
      "source": 552,
      "pc": [
        133
      ]
    },
    {
      "teal": 76,
      "source": 552,
      "pc": [
        134
      ]
    },
    {
      "teal": 77,
      "source": 552,
      "pc": [
        135,
        136
      ]
    },
    {
      "teal": 78,
      "source": 552,
      "pc": [
        137
      ]
    },
    {
      "teal": 79,
      "source": 552,
      "pc": [
        138
      ]
    },
    {
      "teal": 80,
      "source": 552,
      "pc": [
        139
      ]
    },
    {
      "teal": 81,
      "source": 552,
      "pc": [
        140
      ]
    },
    {
      "teal": 82,
      "source": 552,
      "pc": [
        141
      ]
    },
    {
      "teal": 83,
      "source": 552,
      "pc": [
        142
      ]
    },
    {
      "teal": 84,
      "source": 552,
      "pc": [
        143
      ]
    },
    {
      "teal": 85,
      "source": 552,
      "pc": [
        144,
        145,
        146
      ]
    },
    {
      "teal": 86,
      "source": 552,
      "pc": [
        147,
        148,
        149,
        150,
        151,
        152,
        153,
        154,
        155,
        156,
        157,
        158,
        159,
        160
      ]
    },
    {
      "teal": 87,
      "source": 552,
      "pc": [
        161
      ]
    },
    {
      "teal": 88,
      "source": 552,
      "pc": [
        162
      ]
    },
    {
      "teal": 92,
      "source": 554,
      "pc": [
        163,
        164
      ]
    },
    {
      "teal": 93,
      "source": 554,
      "pc": [
        165,
        166
      ]
    },
    {
      "teal": 94,
      "source": 554,
      "pc": [
        167
      ]
    },
    {
      "teal": 95,
      "source": 554,
      "pc": [
        168,
        169
      ]
    },
    {
      "teal": 96,
      "source": 554,
      "pc": [
        170,
        171
      ]
    },
    {
      "teal": 97,
      "source": 554,
      "pc": [
        172,
        173
      ]
    },
    {
      "teal": 98,
      "source": 554,
      "pc": [
        174
      ]
    },
    {
      "teal": 99,
      "source": 554,
      "pc": [
        175
      ]
    },
    {
      "teal": 100,
      "source": 554,
      "pc": [
        176,
        177
      ]
    },
    {
      "teal": 101,
      "source": 554,
      "pc": [
        178
      ]
    },
    {
      "teal": 102,
      "source": 554,
      "pc": [
        179
      ]
    },
    {
      "teal": 103,
      "source": 554,
      "pc": [
        180
      ]
    },
    {
      "teal": 104,
      "source": 554,
      "pc": [
        181
      ]
    },
    {
      "teal": 105,
      "source": 554,
      "pc": [
        182
      ]
    },
    {
      "teal": 106,
      "source": 554,
      "pc": [
        183
      ]
    },
    {
      "teal": 107,
      "source": 554,
      "pc": [
        184
      ]
    },
    {
      "teal": 108,
      "source": 554,
      "pc": [
        185,
        186,
        187
      ]
    },
    {
      "teal": 111,
      "source": 549,
      "pc": [
        188,
        189
      ]
    },
    {
      "teal": 112,
      "source": 549,
      "pc": [
        190
      ]
    },
    {
      "teal": 115,
      "source": 548,
      "pc": [
        191
      ]
    },
    {
      "teal": 116,
      "source": 548,
      "pc": [
        192
      ]
    },
    {
      "teal": 119,
      "source": 548,
      "pc": [
        193,
        194,
        195,
        196,
        197,
        198
      ]
    },
    {
      "teal": 120,
      "source": 548,
      "pc": [
        199,
        200,
        201
      ]
    },
    {
      "teal": 121,
      "source": 548,
      "pc": [
        202,
        203,
        204,
        205
      ]
    },
    {
      "teal": 124,
      "source": 548,
      "errorMessage": "this contract does not implement the given ABI method for create NoOp",
      "pc": [
        206
      ]
    },
    {
      "teal": 127,
      "source": 548,
      "pc": [
        207,
        208,
        209,
        210,
        211,
        212
      ]
    },
    {
      "teal": 128,
      "source": 548,
      "pc": [
        213,
        214,
        215
      ]
    },
    {
      "teal": 129,
      "source": 548,
      "pc": [
        216,
        217,
        218,
        219
      ]
    },
    {
      "teal": 132,
      "source": 548,
      "errorMessage": "this contract does not implement the given ABI method for call NoOp",
      "pc": [
        220
      ]
    },
    {
      "teal": 135,
      "source": 548,
      "pc": [
        221,
        222,
        223
      ]
    },
    {
      "teal": 136,
      "source": 548,
      "pc": [
        224,
        225
      ]
    },
    {
      "teal": 137,
      "source": 548,
      "pc": [
        226,
        227
      ]
    },
    {
      "teal": 138,
      "source": 548,
      "pc": [
        228
      ]
    },
    {
      "teal": 139,
      "source": 548,
      "pc": [
        229,
        230
      ]
    },
    {
      "teal": 140,
      "source": 548,
      "pc": [
        231,
        232
      ]
    },
    {
      "teal": 141,
      "source": 548,
      "pc": [
        233
      ]
    },
    {
      "teal": 144,
      "source": 548,
      "pc": [
        234,
        235,
        236
      ]
    },
    {
      "teal": 145,
      "source": 548,
      "pc": [
        237,
        238
      ]
    },
    {
      "teal": 146,
      "source": 548,
      "pc": [
        239,
        240
      ]
    },
    {
      "teal": 147,
      "source": 548,
      "pc": [
        241
      ]
    },
    {
      "teal": 148,
      "source": 548,
      "pc": [
        242,
        243
      ]
    },
    {
      "teal": 149,
      "source": 548,
      "pc": [
        244,
        245
      ]
    },
    {
      "teal": 150,
      "source": 548,
      "pc": [
        246
      ]
    },
    {
      "teal": 151,
      "source": 548,
      "pc": [
        247
      ]
    },
    {
      "teal": 152,
      "source": 548,
      "pc": [
        248,
        249
      ]
    },
    {
      "teal": 153,
      "source": 548,
      "pc": [
        250
      ]
    },
    {
      "teal": 154,
      "source": 548,
      "pc": [
        251
      ]
    },
    {
      "teal": 155,
      "source": 548,
      "pc": [
        252
      ]
    },
    {
      "teal": 156,
      "source": 548,
      "pc": [
        253,
        254,
        255
      ]
    },
    {
      "teal": 157,
      "source": 548,
      "pc": [
        256,
        257
      ]
    },
    {
      "teal": 158,
      "source": 548,
      "pc": [
        258,
        259
      ]
    },
    {
      "teal": 159,
      "source": 548,
      "pc": [
        260
      ]
    },
    {
      "teal": 160,
      "source": 548,
      "pc": [
        261
      ]
    },
    {
      "teal": 161,
      "source": 548,
      "pc": [
        262,
        263
      ]
    },
    {
      "teal": 162,
      "source": 548,
      "pc": [
        264,
        265
      ]
    },
    {
      "teal": 163,
      "source": 548,
      "pc": [
        266,
        267
      ]
    },
    {
      "teal": 164,
      "source": 548,
      "pc": [
        268,
        269
      ]
    },
    {
      "teal": 165,
      "source": 548,
      "pc": [
        270
      ]
    }
  ],
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwMi4wCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQppbnQgNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyBhY2Nlc1N0cmluZ0luVHVwbGUoKXN0cmluZwoqYWJpX3JvdXRlX2FjY2VzU3RyaW5nSW5UdXBsZToKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJYnl0ZSAweDE1MWY3Yzc1CgoJLy8gZXhlY3V0ZSBhY2Nlc1N0cmluZ0luVHVwbGUoKXN0cmluZwoJY2FsbHN1YiBhY2Nlc1N0cmluZ0luVHVwbGUKCWR1cAoJbGVuCglpdG9iCglleHRyYWN0IDYgMgoJc3dhcAoJY29uY2F0Cgljb25jYXQKCWxvZwoJaW50IDEKCXJldHVybgoKLy8gYWNjZXNTdHJpbmdJblR1cGxlKCk6IHN0cmluZwphY2Nlc1N0cmluZ0luVHVwbGU6Cglwcm90byAwIDEKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZSAweAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czo1NTAKCS8vIGE6IFt1aW50MTYsIHVpbnQ8OD5bXSwgc3RyaW5nLCB1aW50PDg+W11dID0gWzEsIFsyXSwgJ0hlbGxvIFdvcmxkIScsIFszXV0KCWJ5dGUgMHggLy8gaW5pdGlhbCBoZWFkCglieXRlIDB4IC8vIGluaXRpYWwgdGFpbAoJYnl0ZSAweDAwMDggLy8gaW5pdGlhbCBoZWFkIG9mZnNldAoJYnl0ZSAweDAwMDEKCWNhbGxzdWIgKnByb2Nlc3Nfc3RhdGljX3R1cGxlX2VsZW1lbnQKCWJ5dGUgMHgwMDAxMDIKCWNhbGxzdWIgKnByb2Nlc3NfZHluYW1pY190dXBsZV9lbGVtZW50CglieXRlIDB4MDAwYzQ4NjU2YzZjNmYyMDU3NmY3MjZjNjQyMQoJY2FsbHN1YiAqcHJvY2Vzc19keW5hbWljX3R1cGxlX2VsZW1lbnQKCWJ5dGUgMHgwMDAxMDMKCWNhbGxzdWIgKnByb2Nlc3NfZHluYW1pY190dXBsZV9lbGVtZW50Cglwb3AgLy8gcG9wIGhlYWQgb2Zmc2V0Cgljb25jYXQgLy8gY29uY2F0IGhlYWQgYW5kIHRhaWwKCWZyYW1lX2J1cnkgMCAvLyBhOiBbdWludDE2LCB1aW50PDg+W10sIHN0cmluZywgdWludDw4PltdXQoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czo1NTIKCS8vIGFzc2VydChhWzJdID09PSAnSGVsbG8gV29ybGQhJykKCWZyYW1lX2RpZyAwIC8vIGE6IFt1aW50MTYsIHVpbnQ8OD5bXSwgc3RyaW5nLCB1aW50PDg+W11dCglzdG9yZSAyNTUgLy8gZnVsbCBhcnJheQoJaW50IDQKCWxvYWQgMjU1IC8vIGZ1bGwgYXJyYXkKCWxvYWQgMjU1IC8vIGZ1bGwgYXJyYXkKCXVuY292ZXIgMgoJZXh0cmFjdF91aW50MTYKCWR1cCAvLyBkdXBsaWNhdGUgc3RhcnQgb2YgZWxlbWVudAoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJc3dhcAoJZXh0cmFjdF91aW50MTYgLy8gZ2V0IG51bWJlciBvZiBlbGVtZW50cwoJaW50IDEgLy8gZ2V0IHR5cGUgbGVuZ3RoCgkqIC8vIG11bHRpcGx5IGJ5IHR5cGUgbGVuZ3RoCglpbnQgMgoJKyAvLyBhZGQgdHdvIGZvciBsZW5ndGgKCWV4dHJhY3QzCglleHRyYWN0IDIgMAoJYnl0ZSAweDQ4NjU2YzZjNmYyMDU3NmY3MjZjNjQyMSAvLyAiSGVsbG8gV29ybGQhIgoJPT0KCWFzc2VydAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czo1NTQKCS8vIHJldHVybiBhWzJdOwoJZnJhbWVfZGlnIDAgLy8gYTogW3VpbnQxNiwgdWludDw4PltdLCBzdHJpbmcsIHVpbnQ8OD5bXV0KCXN0b3JlIDI1NSAvLyBmdWxsIGFycmF5CglpbnQgNAoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJdW5jb3ZlciAyCglleHRyYWN0X3VpbnQxNgoJZHVwIC8vIGR1cGxpY2F0ZSBzdGFydCBvZiBlbGVtZW50Cglsb2FkIDI1NSAvLyBmdWxsIGFycmF5Cglzd2FwCglleHRyYWN0X3VpbnQxNiAvLyBnZXQgbnVtYmVyIG9mIGVsZW1lbnRzCglpbnQgMSAvLyBnZXQgdHlwZSBsZW5ndGgKCSogLy8gbXVsdGlwbHkgYnkgdHlwZSBsZW5ndGgKCWludCAyCgkrIC8vIGFkZCB0d28gZm9yIGxlbmd0aAoJZXh0cmFjdDMKCWV4dHJhY3QgMiAwCgoJLy8gc2V0IHRoZSBzdWJyb3V0aW5lIHJldHVybiB2YWx1ZQoJZnJhbWVfYnVyeSAwCglyZXRzdWIKCiphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CglpbnQgMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CgltZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJbWV0aG9kICJhY2Nlc1N0cmluZ0luVHVwbGUoKXN0cmluZyIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfYWNjZXNTdHJpbmdJblR1cGxlCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoJZXJyCgoqcHJvY2Vzc19zdGF0aWNfdHVwbGVfZWxlbWVudDoKCXByb3RvIDQgMwoJZnJhbWVfZGlnIC00IC8vIHR1cGxlIGhlYWQKCWZyYW1lX2RpZyAtMSAvLyBlbGVtZW50Cgljb25jYXQKCWZyYW1lX2RpZyAtMyAvLyB0dXBsZSB0YWlsCglmcmFtZV9kaWcgLTIgLy8gaGVhZCBvZmZzZXQKCXJldHN1YgoKKnByb2Nlc3NfZHluYW1pY190dXBsZV9lbGVtZW50OgoJcHJvdG8gNCAzCglmcmFtZV9kaWcgLTQgLy8gdHVwbGUgaGVhZAoJZnJhbWVfZGlnIC0yIC8vIGhlYWQgb2Zmc2V0Cgljb25jYXQKCWZyYW1lX2J1cnkgLTQgLy8gdHVwbGUgaGVhZAoJZnJhbWVfZGlnIC0xIC8vIGVsZW1lbnQKCWR1cAoJbGVuCglmcmFtZV9kaWcgLTIgLy8gaGVhZCBvZmZzZXQKCWJ0b2kKCSsKCWl0b2IKCWV4dHJhY3QgNiAyCglmcmFtZV9idXJ5IC0yIC8vIGhlYWQgb2Zmc2V0CglmcmFtZV9kaWcgLTMgLy8gdHVwbGUgdGFpbAoJc3dhcAoJY29uY2F0CglmcmFtZV9idXJ5IC0zIC8vIHR1cGxlIHRhaWwKCWZyYW1lX2RpZyAtNCAvLyB0dXBsZSBoZWFkCglmcmFtZV9kaWcgLTMgLy8gdHVwbGUgdGFpbAoJZnJhbWVfZGlnIC0yIC8vIGhlYWQgb2Zmc2V0CglyZXRzdWI=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiADAQQCJgEAMRgUgQYLMRkIjQwAowAAAAAAAAAAAAAAlQAAAAAAAAAAAAAAgAQVH3x1iAAMSRUWVwYCTFBQsCJDigABKCgogAIACIACAAGIAIqAAwABAogAj4AOAAxIZWxsbyBXb3JsZCGIAHyAAwABA4gAdEhQjACLADX/IzT/NP9PAllJNP9MWSILJAhYVwIAgAxIZWxsbyBXb3JsZCESRIsANf8jNP80/08CWUk0/0xZIgskCFhXAgCMAIkiQ4AEuER7NjYaAI4B//EAgASULPPANhoAjgH/UQCKBAOL/Iv/UIv9i/6JigQDi/yL/lCM/Iv/SRWL/hcIFlcGAoz+i/1MUIz9i/yL/Yv+iQ==",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 25,
      "patch": 0,
      "commitHash": "9855f57c"
    }
  }
}