#pragma version 8
	b main

abi_route_arraySpliceValue:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	!=
	&&
	assert
	byte 0x
	dupn 3
	callsub arraySpliceValue
	int 1
	return

arraySpliceValue:
	proto 4 0

	// tests/contracts/abi.algo.ts:442
	// a: uint<16>[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
	int 1
	itob
	extract 6 0
	int 2
	itob
	extract 6 0
	concat
	int 3
	itob
	extract 6 0
	concat
	int 4
	itob
	extract 6 0
	concat
	int 5
	itob
	extract 6 0
	concat
	int 6
	itob
	extract 6 0
	concat
	int 7
	itob
	extract 6 0
	concat
	int 8
	itob
	extract 6 0
	concat
	int 9
	itob
	extract 6 0
	concat
	int 10
	itob
	extract 6 0
	concat
	byte 0x000a
	swap
	concat
	frame_bury -1 // a: uint16[]

	// tests/contracts/abi.algo.ts:444
	// i = 1
	int 1
	frame_bury -2 // i: uint64

	// tests/contracts/abi.algo.ts:445
	// l = 7
	int 7
	frame_bury -3 // l: uint64

	// tests/contracts/abi.algo.ts:446
	// v = a.splice(i, l)
	frame_dig -1 // a: uint16[]
	int 0
	extract_uint16
	frame_dig -3 // l: uint64
	-
	itob
	extract 6 2
	frame_dig -2 // i: uint64
	int 2
	*
	int 2
	+
	store 12 // splice start
	frame_dig -3 // l: uint64
	int 2
	*
	int 2
	+
	store 13 // splice byte length
	frame_dig -1 // a: uint16[]
	int 2
	load 12 // splice start
	substring3
	frame_dig -1 // a: uint16[]
	dup
	len
	load 12 // splice start
	load 13 // splice byte length
	+
	int 2
	-
	swap
	substring3
	concat
	concat
	frame_dig -3 // l: uint64
	itob
	extract 6 2
	frame_dig -1 // a: uint16[]
	load 12 // splice start
	load 13 // splice byte length
	int 2
	-
	extract3
	concat
	swap
	frame_bury -1 // a: uint16[]
	frame_bury -4 // v: uint16[]

	// tests/contracts/abi.algo.ts:448
	// return v;
	frame_dig -4 // v: uint16[]
	byte 0x151f7c75
	swap
	concat
	log
	retsub

main:
	txn NumAppArgs
	bnz route_abi

	// default createApplication
	txn ApplicationID
	int 0
	==
	txn OnCompletion
	int NoOp
	==
	&&
	return

route_abi:
	method "arraySpliceValue()uint16[]"
	txna ApplicationArgs 0
	match abi_route_arraySpliceValue
	err