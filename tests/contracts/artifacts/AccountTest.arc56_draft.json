{
  "name": "AccountTest",
  "desc": "",
  "methods": [
    {
      "name": "hasAsset",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "assetBalance",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "assetFrozen",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "hasBalance",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "balance",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "minBalance",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "authAddr",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalNumUint",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalNumByteSlice",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalExtraAppPages",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalAppsCreated",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalAppsOptedIn",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalAssetsCreated",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalAssets",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalBoxes",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalBoxBytes",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "pc": [
            40
          ],
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?"
        },
        {
          "pc": [
            49
          ],
          "errorMessage": "argument 0 (a) for hasAsset must be a address"
        },
        {
          "pc": [
            77
          ],
          "errorMessage": "argument 0 (a) for assetBalance must be a address"
        },
        {
          "pc": [
            104
          ],
          "errorMessage": "argument 0 (a) for assetFrozen must be a address"
        },
        {
          "pc": [
            131
          ],
          "errorMessage": "argument 0 (a) for hasBalance must be a address"
        },
        {
          "pc": [
            157
          ],
          "errorMessage": "argument 0 (a) for balance must be a address"
        },
        {
          "pc": [
            182
          ],
          "errorMessage": "argument 0 (a) for minBalance must be a address"
        },
        {
          "pc": [
            207
          ],
          "errorMessage": "argument 0 (a) for authAddr must be a address"
        },
        {
          "pc": [
            232
          ],
          "errorMessage": "argument 0 (a) for totalNumUint must be a address"
        },
        {
          "pc": [
            257
          ],
          "errorMessage": "argument 0 (a) for totalNumByteSlice must be a address"
        },
        {
          "pc": [
            282
          ],
          "errorMessage": "argument 0 (a) for totalExtraAppPages must be a address"
        },
        {
          "pc": [
            307
          ],
          "errorMessage": "argument 0 (a) for totalAppsCreated must be a address"
        },
        {
          "pc": [
            332
          ],
          "errorMessage": "argument 0 (a) for totalAppsOptedIn must be a address"
        },
        {
          "pc": [
            357
          ],
          "errorMessage": "argument 0 (a) for totalAssetsCreated must be a address"
        },
        {
          "pc": [
            382
          ],
          "errorMessage": "argument 0 (a) for totalAssets must be a address"
        },
        {
          "pc": [
            407
          ],
          "errorMessage": "argument 0 (a) for totalBoxes must be a address"
        },
        {
          "pc": [
            432
          ],
          "errorMessage": "argument 0 (a) for totalBoxBytes must be a address"
        },
        {
          "pc": [
            465
          ],
          "errorMessage": "this contract does not implement the given ABI method for create NoOp"
        },
        {
          "pc": [
            599
          ],
          "errorMessage": "this contract does not implement the given ABI method for call NoOp"
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxIDMyCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwNC4xCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQpwdXNoaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gaGFzQXNzZXQoYWRkcmVzcyl2b2lkCiphYmlfcm91dGVfaGFzQXNzZXQ6CgkvLyBhOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGEpIGZvciBoYXNBc3NldCBtdXN0IGJlIGEgYWRkcmVzcwoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBoYXNBc3NldChhZGRyZXNzKXZvaWQKCWNhbGxzdWIgaGFzQXNzZXQKCWludCAxCglyZXR1cm4KCi8vIGhhc0Fzc2V0KGE6IEFkZHJlc3MpOiB2b2lkCmhhc0Fzc2V0OgoJcHJvdG8gMSAwCgoJLy8gdGVzdHMvY29udHJhY3RzL2FjY291bnQuYWxnby50czo2CgkvLyBhc3NlcnQoYS5pc09wdGVkSW5Ub0Fzc2V0KEFzc2V0SUQuZnJvbVVpbnQ2NCgxMjMpKSkKCWZyYW1lX2RpZyAtMSAvLyBhOiBBZGRyZXNzCglwdXNoaW50IDEyMwoJYXNzZXRfaG9sZGluZ19nZXQgQXNzZXRCYWxhbmNlCglzd2FwCglwb3AKCWFzc2VydAoJcmV0c3ViCgovLyBhc3NldEJhbGFuY2UoYWRkcmVzcyl2b2lkCiphYmlfcm91dGVfYXNzZXRCYWxhbmNlOgoJLy8gYTogYWRkcmVzcwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCWludCAzMgoJPT0KCgkvLyBhcmd1bWVudCAwIChhKSBmb3IgYXNzZXRCYWxhbmNlIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIGFzc2V0QmFsYW5jZShhZGRyZXNzKXZvaWQKCWNhbGxzdWIgYXNzZXRCYWxhbmNlCglpbnQgMQoJcmV0dXJuCgovLyBhc3NldEJhbGFuY2UoYTogQWRkcmVzcyk6IHZvaWQKYXNzZXRCYWxhbmNlOgoJcHJvdG8gMSAwCgoJLy8gdGVzdHMvY29udHJhY3RzL2FjY291bnQuYWxnby50czoxMAoJLy8gYXNzZXJ0KGEuYXNzZXRCYWxhbmNlKEFzc2V0SUQuZnJvbVVpbnQ2NCgxMjMpKSkKCWZyYW1lX2RpZyAtMSAvLyBhOiBBZGRyZXNzCglwdXNoaW50IDEyMwoJYXNzZXRfaG9sZGluZ19nZXQgQXNzZXRCYWxhbmNlCglwb3AKCWFzc2VydAoJcmV0c3ViCgovLyBhc3NldEZyb3plbihhZGRyZXNzKXZvaWQKKmFiaV9yb3V0ZV9hc3NldEZyb3plbjoKCS8vIGE6IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnQgMzIKCT09CgoJLy8gYXJndW1lbnQgMCAoYSkgZm9yIGFzc2V0RnJvemVuIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIGFzc2V0RnJvemVuKGFkZHJlc3Mpdm9pZAoJY2FsbHN1YiBhc3NldEZyb3plbgoJaW50IDEKCXJldHVybgoKLy8gYXNzZXRGcm96ZW4oYTogQWRkcmVzcyk6IHZvaWQKYXNzZXRGcm96ZW46Cglwcm90byAxIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWNjb3VudC5hbGdvLnRzOjE0CgkvLyBhc3NlcnQoYS5hc3NldEZyb3plbihBc3NldElELmZyb21VaW50NjQoMTIzKSkpCglmcmFtZV9kaWcgLTEgLy8gYTogQWRkcmVzcwoJcHVzaGludCAxMjMKCWFzc2V0X2hvbGRpbmdfZ2V0IEFzc2V0RnJvemVuCglwb3AKCWFzc2VydAoJcmV0c3ViCgovLyBoYXNCYWxhbmNlKGFkZHJlc3Mpdm9pZAoqYWJpX3JvdXRlX2hhc0JhbGFuY2U6CgkvLyBhOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGEpIGZvciBoYXNCYWxhbmNlIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIGhhc0JhbGFuY2UoYWRkcmVzcyl2b2lkCgljYWxsc3ViIGhhc0JhbGFuY2UKCWludCAxCglyZXR1cm4KCi8vIGhhc0JhbGFuY2UoYTogQWRkcmVzcyk6IHZvaWQKaGFzQmFsYW5jZToKCXByb3RvIDEgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hY2NvdW50LmFsZ28udHM6MTgKCS8vIGFzc2VydChhLmlzSW5MZWRnZXIpCglmcmFtZV9kaWcgLTEgLy8gYTogQWRkcmVzcwoJYWNjdF9wYXJhbXNfZ2V0IEFjY3RCYWxhbmNlCglzd2FwCglwb3AKCWFzc2VydAoJcmV0c3ViCgovLyBiYWxhbmNlKGFkZHJlc3Mpdm9pZAoqYWJpX3JvdXRlX2JhbGFuY2U6CgkvLyBhOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGEpIGZvciBiYWxhbmNlIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIGJhbGFuY2UoYWRkcmVzcyl2b2lkCgljYWxsc3ViIGJhbGFuY2UKCWludCAxCglyZXR1cm4KCi8vIGJhbGFuY2UoYTogQWRkcmVzcyk6IHZvaWQKYmFsYW5jZToKCXByb3RvIDEgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hY2NvdW50LmFsZ28udHM6MjIKCS8vIGFzc2VydChhLmJhbGFuY2UpCglmcmFtZV9kaWcgLTEgLy8gYTogQWRkcmVzcwoJYWNjdF9wYXJhbXNfZ2V0IEFjY3RCYWxhbmNlCglwb3AKCWFzc2VydAoJcmV0c3ViCgovLyBtaW5CYWxhbmNlKGFkZHJlc3Mpdm9pZAoqYWJpX3JvdXRlX21pbkJhbGFuY2U6CgkvLyBhOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGEpIGZvciBtaW5CYWxhbmNlIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIG1pbkJhbGFuY2UoYWRkcmVzcyl2b2lkCgljYWxsc3ViIG1pbkJhbGFuY2UKCWludCAxCglyZXR1cm4KCi8vIG1pbkJhbGFuY2UoYTogQWRkcmVzcyk6IHZvaWQKbWluQmFsYW5jZToKCXByb3RvIDEgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hY2NvdW50LmFsZ28udHM6MjYKCS8vIGFzc2VydChhLm1pbkJhbGFuY2UpCglmcmFtZV9kaWcgLTEgLy8gYTogQWRkcmVzcwoJYWNjdF9wYXJhbXNfZ2V0IEFjY3RNaW5CYWxhbmNlCglwb3AKCWFzc2VydAoJcmV0c3ViCgovLyBhdXRoQWRkcihhZGRyZXNzKXZvaWQKKmFiaV9yb3V0ZV9hdXRoQWRkcjoKCS8vIGE6IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnQgMzIKCT09CgoJLy8gYXJndW1lbnQgMCAoYSkgZm9yIGF1dGhBZGRyIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIGF1dGhBZGRyKGFkZHJlc3Mpdm9pZAoJY2FsbHN1YiBhdXRoQWRkcgoJaW50IDEKCXJldHVybgoKLy8gYXV0aEFkZHIoYTogQWRkcmVzcyk6IHZvaWQKYXV0aEFkZHI6Cglwcm90byAxIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWNjb3VudC5hbGdvLnRzOjMwCgkvLyBsb2coYS5hdXRoQWRkcikKCWZyYW1lX2RpZyAtMSAvLyBhOiBBZGRyZXNzCglhY2N0X3BhcmFtc19nZXQgQWNjdEF1dGhBZGRyCglwb3AKCWxvZwoJcmV0c3ViCgovLyB0b3RhbE51bVVpbnQoYWRkcmVzcyl2b2lkCiphYmlfcm91dGVfdG90YWxOdW1VaW50OgoJLy8gYTogYWRkcmVzcwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCWludCAzMgoJPT0KCgkvLyBhcmd1bWVudCAwIChhKSBmb3IgdG90YWxOdW1VaW50IG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIHRvdGFsTnVtVWludChhZGRyZXNzKXZvaWQKCWNhbGxzdWIgdG90YWxOdW1VaW50CglpbnQgMQoJcmV0dXJuCgovLyB0b3RhbE51bVVpbnQoYTogQWRkcmVzcyk6IHZvaWQKdG90YWxOdW1VaW50OgoJcHJvdG8gMSAwCgoJLy8gdGVzdHMvY29udHJhY3RzL2FjY291bnQuYWxnby50czozNAoJLy8gYXNzZXJ0KGEudG90YWxOdW1VaW50KQoJZnJhbWVfZGlnIC0xIC8vIGE6IEFkZHJlc3MKCWFjY3RfcGFyYW1zX2dldCBBY2N0VG90YWxOdW1VaW50Cglwb3AKCWFzc2VydAoJcmV0c3ViCgovLyB0b3RhbE51bUJ5dGVTbGljZShhZGRyZXNzKXZvaWQKKmFiaV9yb3V0ZV90b3RhbE51bUJ5dGVTbGljZToKCS8vIGE6IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnQgMzIKCT09CgoJLy8gYXJndW1lbnQgMCAoYSkgZm9yIHRvdGFsTnVtQnl0ZVNsaWNlIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIHRvdGFsTnVtQnl0ZVNsaWNlKGFkZHJlc3Mpdm9pZAoJY2FsbHN1YiB0b3RhbE51bUJ5dGVTbGljZQoJaW50IDEKCXJldHVybgoKLy8gdG90YWxOdW1CeXRlU2xpY2UoYTogQWRkcmVzcyk6IHZvaWQKdG90YWxOdW1CeXRlU2xpY2U6Cglwcm90byAxIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWNjb3VudC5hbGdvLnRzOjM4CgkvLyBhc3NlcnQoYS50b3RhbE51bUJ5dGVTbGljZSkKCWZyYW1lX2RpZyAtMSAvLyBhOiBBZGRyZXNzCglhY2N0X3BhcmFtc19nZXQgQWNjdFRvdGFsTnVtQnl0ZVNsaWNlCglwb3AKCWFzc2VydAoJcmV0c3ViCgovLyB0b3RhbEV4dHJhQXBwUGFnZXMoYWRkcmVzcyl2b2lkCiphYmlfcm91dGVfdG90YWxFeHRyYUFwcFBhZ2VzOgoJLy8gYTogYWRkcmVzcwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCWludCAzMgoJPT0KCgkvLyBhcmd1bWVudCAwIChhKSBmb3IgdG90YWxFeHRyYUFwcFBhZ2VzIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIHRvdGFsRXh0cmFBcHBQYWdlcyhhZGRyZXNzKXZvaWQKCWNhbGxzdWIgdG90YWxFeHRyYUFwcFBhZ2VzCglpbnQgMQoJcmV0dXJuCgovLyB0b3RhbEV4dHJhQXBwUGFnZXMoYTogQWRkcmVzcyk6IHZvaWQKdG90YWxFeHRyYUFwcFBhZ2VzOgoJcHJvdG8gMSAwCgoJLy8gdGVzdHMvY29udHJhY3RzL2FjY291bnQuYWxnby50czo0MgoJLy8gYXNzZXJ0KGEudG90YWxFeHRyYUFwcFBhZ2VzKQoJZnJhbWVfZGlnIC0xIC8vIGE6IEFkZHJlc3MKCWFjY3RfcGFyYW1zX2dldCBBY2N0VG90YWxFeHRyYUFwcFBhZ2VzCglwb3AKCWFzc2VydAoJcmV0c3ViCgovLyB0b3RhbEFwcHNDcmVhdGVkKGFkZHJlc3Mpdm9pZAoqYWJpX3JvdXRlX3RvdGFsQXBwc0NyZWF0ZWQ6CgkvLyBhOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGEpIGZvciB0b3RhbEFwcHNDcmVhdGVkIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIHRvdGFsQXBwc0NyZWF0ZWQoYWRkcmVzcyl2b2lkCgljYWxsc3ViIHRvdGFsQXBwc0NyZWF0ZWQKCWludCAxCglyZXR1cm4KCi8vIHRvdGFsQXBwc0NyZWF0ZWQoYTogQWRkcmVzcyk6IHZvaWQKdG90YWxBcHBzQ3JlYXRlZDoKCXByb3RvIDEgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hY2NvdW50LmFsZ28udHM6NDYKCS8vIGFzc2VydChhLnRvdGFsQXBwc0NyZWF0ZWQpCglmcmFtZV9kaWcgLTEgLy8gYTogQWRkcmVzcwoJYWNjdF9wYXJhbXNfZ2V0IEFjY3RUb3RhbEFwcHNDcmVhdGVkCglwb3AKCWFzc2VydAoJcmV0c3ViCgovLyB0b3RhbEFwcHNPcHRlZEluKGFkZHJlc3Mpdm9pZAoqYWJpX3JvdXRlX3RvdGFsQXBwc09wdGVkSW46CgkvLyBhOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGEpIGZvciB0b3RhbEFwcHNPcHRlZEluIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIHRvdGFsQXBwc09wdGVkSW4oYWRkcmVzcyl2b2lkCgljYWxsc3ViIHRvdGFsQXBwc09wdGVkSW4KCWludCAxCglyZXR1cm4KCi8vIHRvdGFsQXBwc09wdGVkSW4oYTogQWRkcmVzcyk6IHZvaWQKdG90YWxBcHBzT3B0ZWRJbjoKCXByb3RvIDEgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hY2NvdW50LmFsZ28udHM6NTAKCS8vIGFzc2VydChhLnRvdGFsQXBwc09wdGVkSW4pCglmcmFtZV9kaWcgLTEgLy8gYTogQWRkcmVzcwoJYWNjdF9wYXJhbXNfZ2V0IEFjY3RUb3RhbEFwcHNPcHRlZEluCglwb3AKCWFzc2VydAoJcmV0c3ViCgovLyB0b3RhbEFzc2V0c0NyZWF0ZWQoYWRkcmVzcyl2b2lkCiphYmlfcm91dGVfdG90YWxBc3NldHNDcmVhdGVkOgoJLy8gYTogYWRkcmVzcwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCWludCAzMgoJPT0KCgkvLyBhcmd1bWVudCAwIChhKSBmb3IgdG90YWxBc3NldHNDcmVhdGVkIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIHRvdGFsQXNzZXRzQ3JlYXRlZChhZGRyZXNzKXZvaWQKCWNhbGxzdWIgdG90YWxBc3NldHNDcmVhdGVkCglpbnQgMQoJcmV0dXJuCgovLyB0b3RhbEFzc2V0c0NyZWF0ZWQoYTogQWRkcmVzcyk6IHZvaWQKdG90YWxBc3NldHNDcmVhdGVkOgoJcHJvdG8gMSAwCgoJLy8gdGVzdHMvY29udHJhY3RzL2FjY291bnQuYWxnby50czo1NAoJLy8gYXNzZXJ0KGEudG90YWxBc3NldHNDcmVhdGVkKQoJZnJhbWVfZGlnIC0xIC8vIGE6IEFkZHJlc3MKCWFjY3RfcGFyYW1zX2dldCBBY2N0VG90YWxBc3NldHNDcmVhdGVkCglwb3AKCWFzc2VydAoJcmV0c3ViCgovLyB0b3RhbEFzc2V0cyhhZGRyZXNzKXZvaWQKKmFiaV9yb3V0ZV90b3RhbEFzc2V0czoKCS8vIGE6IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnQgMzIKCT09CgoJLy8gYXJndW1lbnQgMCAoYSkgZm9yIHRvdGFsQXNzZXRzIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIHRvdGFsQXNzZXRzKGFkZHJlc3Mpdm9pZAoJY2FsbHN1YiB0b3RhbEFzc2V0cwoJaW50IDEKCXJldHVybgoKLy8gdG90YWxBc3NldHMoYTogQWRkcmVzcyk6IHZvaWQKdG90YWxBc3NldHM6Cglwcm90byAxIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWNjb3VudC5hbGdvLnRzOjU4CgkvLyBhc3NlcnQoYS50b3RhbEFzc2V0cykKCWZyYW1lX2RpZyAtMSAvLyBhOiBBZGRyZXNzCglhY2N0X3BhcmFtc19nZXQgQWNjdFRvdGFsQXNzZXRzCglwb3AKCWFzc2VydAoJcmV0c3ViCgovLyB0b3RhbEJveGVzKGFkZHJlc3Mpdm9pZAoqYWJpX3JvdXRlX3RvdGFsQm94ZXM6CgkvLyBhOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGEpIGZvciB0b3RhbEJveGVzIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIHRvdGFsQm94ZXMoYWRkcmVzcyl2b2lkCgljYWxsc3ViIHRvdGFsQm94ZXMKCWludCAxCglyZXR1cm4KCi8vIHRvdGFsQm94ZXMoYTogQWRkcmVzcyk6IHZvaWQKdG90YWxCb3hlczoKCXByb3RvIDEgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hY2NvdW50LmFsZ28udHM6NjIKCS8vIGFzc2VydChhLnRvdGFsQm94ZXMpCglmcmFtZV9kaWcgLTEgLy8gYTogQWRkcmVzcwoJYWNjdF9wYXJhbXNfZ2V0IEFjY3RUb3RhbEJveGVzCglwb3AKCWFzc2VydAoJcmV0c3ViCgovLyB0b3RhbEJveEJ5dGVzKGFkZHJlc3Mpdm9pZAoqYWJpX3JvdXRlX3RvdGFsQm94Qnl0ZXM6CgkvLyBhOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGEpIGZvciB0b3RhbEJveEJ5dGVzIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIHRvdGFsQm94Qnl0ZXMoYWRkcmVzcyl2b2lkCgljYWxsc3ViIHRvdGFsQm94Qnl0ZXMKCWludCAxCglyZXR1cm4KCi8vIHRvdGFsQm94Qnl0ZXMoYTogQWRkcmVzcyk6IHZvaWQKdG90YWxCb3hCeXRlczoKCXByb3RvIDEgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hY2NvdW50LmFsZ28udHM6NjYKCS8vIGFzc2VydChhLnRvdGFsQm94Qnl0ZXMpCglmcmFtZV9kaWcgLTEgLy8gYTogQWRkcmVzcwoJYWNjdF9wYXJhbXNfZ2V0IEFjY3RUb3RhbEJveEJ5dGVzCglwb3AKCWFzc2VydAoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJaW50IDEKCXJldHVybgoKKmNyZWF0ZV9Ob09wOgoJcHVzaGJ5dGVzIDB4Yjg0NDdiMzYgLy8gbWV0aG9kICJjcmVhdGVBcHBsaWNhdGlvbigpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb24KCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY3JlYXRlIE5vT3AKCWVycgoKKmNhbGxfTm9PcDoKCXB1c2hieXRlcyAweGFhMzhhZTkxIC8vIG1ldGhvZCAiaGFzQXNzZXQoYWRkcmVzcyl2b2lkIgoJcHVzaGJ5dGVzIDB4NjRjYjA2NjEgLy8gbWV0aG9kICJhc3NldEJhbGFuY2UoYWRkcmVzcyl2b2lkIgoJcHVzaGJ5dGVzIDB4NjhkMThkZGIgLy8gbWV0aG9kICJhc3NldEZyb3plbihhZGRyZXNzKXZvaWQiCglwdXNoYnl0ZXMgMHgyYWJmMWVkZSAvLyBtZXRob2QgImhhc0JhbGFuY2UoYWRkcmVzcyl2b2lkIgoJcHVzaGJ5dGVzIDB4ODk5ZTQ3OWQgLy8gbWV0aG9kICJiYWxhbmNlKGFkZHJlc3Mpdm9pZCIKCXB1c2hieXRlcyAweDI1OGEwZmNhIC8vIG1ldGhvZCAibWluQmFsYW5jZShhZGRyZXNzKXZvaWQiCglwdXNoYnl0ZXMgMHhiZWNjMjE4MyAvLyBtZXRob2QgImF1dGhBZGRyKGFkZHJlc3Mpdm9pZCIKCXB1c2hieXRlcyAweGZiODFlMTA5IC8vIG1ldGhvZCAidG90YWxOdW1VaW50KGFkZHJlc3Mpdm9pZCIKCXB1c2hieXRlcyAweDQ0ZDIxNWUxIC8vIG1ldGhvZCAidG90YWxOdW1CeXRlU2xpY2UoYWRkcmVzcyl2b2lkIgoJcHVzaGJ5dGVzIDB4NGIzYmZlZjMgLy8gbWV0aG9kICJ0b3RhbEV4dHJhQXBwUGFnZXMoYWRkcmVzcyl2b2lkIgoJcHVzaGJ5dGVzIDB4MDkxYWQyYWEgLy8gbWV0aG9kICJ0b3RhbEFwcHNDcmVhdGVkKGFkZHJlc3Mpdm9pZCIKCXB1c2hieXRlcyAweGI5YmYzZjk1IC8vIG1ldGhvZCAidG90YWxBcHBzT3B0ZWRJbihhZGRyZXNzKXZvaWQiCglwdXNoYnl0ZXMgMHg0ZjhkMmQyYyAvLyBtZXRob2QgInRvdGFsQXNzZXRzQ3JlYXRlZChhZGRyZXNzKXZvaWQiCglwdXNoYnl0ZXMgMHgxM2Q0YTM3ZCAvLyBtZXRob2QgInRvdGFsQXNzZXRzKGFkZHJlc3Mpdm9pZCIKCXB1c2hieXRlcyAweGZjODcyM2RhIC8vIG1ldGhvZCAidG90YWxCb3hlcyhhZGRyZXNzKXZvaWQiCglwdXNoYnl0ZXMgMHhjNGNjNWU5NSAvLyBtZXRob2QgInRvdGFsQm94Qnl0ZXMoYWRkcmVzcyl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9oYXNBc3NldCAqYWJpX3JvdXRlX2Fzc2V0QmFsYW5jZSAqYWJpX3JvdXRlX2Fzc2V0RnJvemVuICphYmlfcm91dGVfaGFzQmFsYW5jZSAqYWJpX3JvdXRlX2JhbGFuY2UgKmFiaV9yb3V0ZV9taW5CYWxhbmNlICphYmlfcm91dGVfYXV0aEFkZHIgKmFiaV9yb3V0ZV90b3RhbE51bVVpbnQgKmFiaV9yb3V0ZV90b3RhbE51bUJ5dGVTbGljZSAqYWJpX3JvdXRlX3RvdGFsRXh0cmFBcHBQYWdlcyAqYWJpX3JvdXRlX3RvdGFsQXBwc0NyZWF0ZWQgKmFiaV9yb3V0ZV90b3RhbEFwcHNPcHRlZEluICphYmlfcm91dGVfdG90YWxBc3NldHNDcmVhdGVkICphYmlfcm91dGVfdG90YWxBc3NldHMgKmFiaV9yb3V0ZV90b3RhbEJveGVzICphYmlfcm91dGVfdG90YWxCb3hCeXRlcwoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiACASAxGBSBBgsxGQiNDAGqAAAAAAAAAAAAAAGcAAAAAAAAAAAAAAA2GgFJFYEgEkSIAAOBAUOKAQCL/4F7cABMSESJNhoBSRWBIBJEiAADgQFDigEAi/+Be3AASESJNhoBSRWBIBJEiAADgQFDigEAi/+Be3ABSESJNhoBSRWBIBJEiAADgQFDigEAi/9zAExIRIk2GgFJFYEgEkSIAAOBAUOKAQCL/3MASESJNhoBSRWBIBJEiAADgQFDigEAi/9zAUhEiTYaAUkVgSASRIgAA4EBQ4oBAIv/cwJIsIk2GgFJFYEgEkSIAAOBAUOKAQCL/3MDSESJNhoBSRWBIBJEiAADgQFDigEAi/9zBEhEiTYaAUkVgSASRIgAA4EBQ4oBAIv/cwVIRIk2GgFJFYEgEkSIAAOBAUOKAQCL/3MGSESJNhoBSRWBIBJEiAADgQFDigEAi/9zB0hEiTYaAUkVgSASRIgAA4EBQ4oBAIv/cwhIRIk2GgFJFYEgEkSIAAOBAUOKAQCL/3MJSESJNhoBSRWBIBJEiAADgQFDigEAi/9zCkhEiTYaAUkVgSASRIgAA4EBQ4oBAIv/cwtIRImBAUOABLhEezY2GgCOAf/wAIAEqjiukYAEZMsGYYAEaNGN24AEKr8e3oAEiZ5HnYAEJYoPyoAEvswhg4AE+4HhCYAERNIV4YAESzv+84AECRrSqoAEub8/lYAET40tLIAEE9SjfYAE/Icj2oAExMxelTYaAI4Q/dL97v4J/iT+Pv5X/nD+if6i/rv+1P7t/wb/H/84/1EA",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}