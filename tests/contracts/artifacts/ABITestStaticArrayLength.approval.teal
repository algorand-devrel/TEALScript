#pragma version 10

// This TEAL was generated by TEALScript v0.85.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	err

// staticArrayLength()uint64
*abi_route_staticArrayLength:
	// The ABI return prefix
	byte 0x151f7c75

	// execute staticArrayLength()uint64
	callsub staticArrayLength
	itob
	concat
	log
	int 1
	return

// staticArrayLength(): uint64
staticArrayLength:
	proto 0 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x

	// tests/contracts/abi.algo.ts:1394
	// a: StaticArray<uint8, 5> = [11, 22, 33, 44, 55]
	byte 0x0b16212c37
	frame_bury 0 // a: StaticArray<uint8, 5>

	// tests/contracts/abi.algo.ts:1396
	// return a.length;
	int 5

	// set the subroutine return value
	frame_bury 0
	retsub

*abi_route_createApplication:
	int 1
	return

*create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication
	err

*call_NoOp:
	method "staticArrayLength()uint64"
	txna ApplicationArgs 0
	match *abi_route_staticArrayLength
	err