{
  "name": "ARC56Test",
  "desc": "",
  "methods": [
    {
      "name": "foo",
      "args": [
        {
          "name": "inputs",
          "type": "((uint64,uint64),(uint64,uint64))",
          "struct": "Inputs"
        }
      ],
      "returns": {
        "type": "(uint64,uint64)",
        "struct": "Outputs"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "optInToApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "OptIn"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "{ foo: uint16; bar: uint16 }": {
      "foo": "uint16",
      "bar": "uint16"
    },
    "Outputs": {
      "sum": "uint64",
      "difference": "uint64"
    },
    "Inputs": {
      "add": {
        "a": "uint64",
        "b": "uint64"
      },
      "subtract": {
        "a": "uint64",
        "b": "uint64"
      }
    }
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 37,
        "ints": 1
      },
      "local": {
        "bytes": 13,
        "ints": 1
      }
    },
    "keys": {
      "global": {
        "globalKey": {
          "key": "Z2xvYmFsS2V5",
          "keyType": "bytes",
          "valueType": "uint64"
        }
      },
      "local": {
        "localKey": {
          "key": "bG9jYWxLZXk=",
          "keyType": "bytes",
          "valueType": "uint64"
        }
      },
      "box": {
        "boxKey": {
          "key": "Ym94S2V5",
          "keyType": "bytes",
          "valueType": "string"
        }
      }
    },
    "maps": {
      "global": {
        "globalMap": {
          "keyType": "string",
          "valueType": "{ foo: uint16; bar: uint16 }",
          "prefix": "p"
        }
      },
      "local": {
        "localMap": {
          "keyType": "bytes",
          "valueType": "string",
          "prefix": "p"
        }
      },
      "box": {
        "boxMap": {
          "keyType": "Inputs",
          "valueType": "Outputs",
          "prefix": "p"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": [
    {
      "teal": 1,
      "source": 6,
      "pc": [
        0,
        1,
        2,
        3
      ]
    },
    {
      "teal": 9,
      "source": 6,
      "pc": [
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13
      ]
    },
    {
      "teal": 10,
      "source": 6,
      "pc": [
        14
      ]
    },
    {
      "teal": 11,
      "source": 6,
      "pc": [
        15,
        16
      ]
    },
    {
      "teal": 18,
      "source": 6,
      "pc": [
        17,
        18
      ]
    },
    {
      "teal": 19,
      "source": 6,
      "pc": [
        19
      ]
    },
    {
      "teal": 20,
      "source": 6,
      "pc": [
        20,
        21
      ]
    },
    {
      "teal": 21,
      "source": 6,
      "pc": [
        22
      ]
    },
    {
      "teal": 22,
      "source": 6,
      "pc": [
        23,
        24
      ]
    },
    {
      "teal": 23,
      "source": 6,
      "pc": [
        25
      ]
    },
    {
      "teal": 24,
      "source": 6,
      "pc": [
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51
      ]
    },
    {
      "teal": 28,
      "source": 6,
      "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "pc": [
        52
      ]
    },
    {
      "teal": 33,
      "source": 23,
      "pc": [
        53,
        54,
        55,
        56,
        57,
        58
      ]
    },
    {
      "teal": 36,
      "source": 23,
      "pc": [
        59,
        60,
        61
      ]
    },
    {
      "teal": 37,
      "source": 23,
      "pc": [
        62
      ]
    },
    {
      "teal": 38,
      "source": 23,
      "pc": [
        63
      ]
    },
    {
      "teal": 39,
      "source": 23,
      "pc": [
        64,
        65
      ]
    },
    {
      "teal": 40,
      "source": 23,
      "pc": [
        66
      ]
    },
    {
      "teal": 43,
      "source": 23,
      "errorMessage": "argument 0 (inputs) for foo must be a ((uint64,uint64),(uint64,uint64))",
      "pc": [
        67
      ]
    },
    {
      "teal": 46,
      "source": 23,
      "pc": [
        68,
        69,
        70
      ]
    },
    {
      "teal": 47,
      "source": 23,
      "pc": [
        71
      ]
    },
    {
      "teal": 48,
      "source": 23,
      "pc": [
        72
      ]
    },
    {
      "teal": 49,
      "source": 23,
      "pc": [
        73
      ]
    },
    {
      "teal": 50,
      "source": 23,
      "pc": [
        74
      ]
    },
    {
      "teal": 54,
      "source": 23,
      "pc": [
        75,
        76,
        77
      ]
    },
    {
      "teal": 59,
      "source": 24,
      "pc": [
        78,
        79
      ]
    },
    {
      "teal": 60,
      "source": 24,
      "pc": [
        80,
        81,
        82
      ]
    },
    {
      "teal": 61,
      "source": 24,
      "pc": [
        83
      ]
    },
    {
      "teal": 62,
      "source": 24,
      "pc": [
        84,
        85
      ]
    },
    {
      "teal": 63,
      "source": 24,
      "pc": [
        86,
        87,
        88
      ]
    },
    {
      "teal": 64,
      "source": 24,
      "pc": [
        89
      ]
    },
    {
      "teal": 65,
      "source": 24,
      "pc": [
        90
      ]
    },
    {
      "teal": 66,
      "source": 24,
      "pc": [
        91,
        92,
        93
      ]
    },
    {
      "teal": 70,
      "source": 24,
      "errorMessage": "subtract.a must be greater than subtract.b",
      "pc": [
        94
      ]
    },
    {
      "teal": 75,
      "source": 26,
      "pc": [
        95,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        103,
        104,
        105
      ]
    },
    {
      "teal": 76,
      "source": 26,
      "pc": [
        106,
        107
      ]
    },
    {
      "teal": 77,
      "source": 26,
      "pc": [
        108
      ]
    },
    {
      "teal": 81,
      "source": 27,
      "pc": [
        109,
        110,
        111,
        112,
        113,
        114,
        115,
        116
      ]
    },
    {
      "teal": 82,
      "source": 27,
      "pc": [
        117,
        118,
        119,
        120,
        121,
        122
      ]
    },
    {
      "teal": 83,
      "source": 27,
      "pc": [
        123
      ]
    },
    {
      "teal": 90,
      "source": 30,
      "pc": [
        124,
        125
      ]
    },
    {
      "teal": 91,
      "source": 30,
      "pc": [
        126,
        127,
        128
      ]
    },
    {
      "teal": 92,
      "source": 30,
      "pc": [
        129
      ]
    },
    {
      "teal": 93,
      "source": 30,
      "pc": [
        130,
        131
      ]
    },
    {
      "teal": 94,
      "source": 30,
      "pc": [
        132,
        133,
        134
      ]
    },
    {
      "teal": 95,
      "source": 30,
      "pc": [
        135
      ]
    },
    {
      "teal": 96,
      "source": 30,
      "pc": [
        136
      ]
    },
    {
      "teal": 97,
      "source": 30,
      "pc": [
        137
      ]
    },
    {
      "teal": 98,
      "source": 31,
      "pc": [
        138,
        139
      ]
    },
    {
      "teal": 99,
      "source": 31,
      "pc": [
        140,
        141,
        142
      ]
    },
    {
      "teal": 100,
      "source": 31,
      "pc": [
        143
      ]
    },
    {
      "teal": 101,
      "source": 31,
      "pc": [
        144,
        145
      ]
    },
    {
      "teal": 102,
      "source": 31,
      "pc": [
        146,
        147,
        148
      ]
    },
    {
      "teal": 103,
      "source": 31,
      "pc": [
        149
      ]
    },
    {
      "teal": 104,
      "source": 31,
      "pc": [
        150
      ]
    },
    {
      "teal": 105,
      "source": 31,
      "pc": [
        151
      ]
    },
    {
      "teal": 106,
      "source": 31,
      "pc": [
        152
      ]
    },
    {
      "teal": 107,
      "source": 23,
      "pc": [
        153
      ]
    },
    {
      "teal": 112,
      "source": 35,
      "pc": [
        154,
        155,
        156
      ]
    },
    {
      "teal": 113,
      "source": 35,
      "pc": [
        157
      ]
    },
    {
      "teal": 114,
      "source": 35,
      "pc": [
        158
      ]
    },
    {
      "teal": 118,
      "source": 35,
      "pc": [
        159,
        160,
        161
      ]
    },
    {
      "teal": 122,
      "source": 36,
      "pc": [
        162,
        163
      ]
    },
    {
      "teal": 123,
      "source": 36,
      "pc": [
        164,
        165,
        166,
        167,
        168,
        169,
        170,
        171,
        172,
        173
      ]
    },
    {
      "teal": 124,
      "source": 36,
      "pc": [
        174,
        175
      ]
    },
    {
      "teal": 125,
      "source": 36,
      "pc": [
        176
      ]
    },
    {
      "teal": 129,
      "source": 37,
      "pc": [
        177,
        178
      ]
    },
    {
      "teal": 130,
      "source": 37,
      "pc": [
        179,
        180,
        181,
        182,
        183,
        184
      ]
    },
    {
      "teal": 131,
      "source": 37,
      "pc": [
        185,
        186,
        187,
        188,
        189,
        190,
        191
      ]
    },
    {
      "teal": 132,
      "source": 37,
      "pc": [
        192
      ]
    },
    {
      "teal": 136,
      "source": 38,
      "pc": [
        193,
        194,
        195,
        196,
        197,
        198,
        199,
        200
      ]
    },
    {
      "teal": 137,
      "source": 38,
      "pc": [
        201
      ]
    },
    {
      "teal": 138,
      "source": 38,
      "pc": [
        202
      ]
    },
    {
      "teal": 139,
      "source": 38,
      "pc": [
        203
      ]
    },
    {
      "teal": 140,
      "source": 38,
      "pc": [
        204,
        205,
        206,
        207,
        208,
        209,
        210
      ]
    },
    {
      "teal": 141,
      "source": 38,
      "pc": [
        211
      ]
    },
    {
      "teal": 145,
      "source": 39,
      "pc": [
        212,
        213,
        214,
        215,
        216,
        217,
        218,
        219,
        220,
        221,
        222,
        223,
        224,
        225,
        226,
        227,
        228,
        229,
        230,
        231,
        232,
        233,
        234,
        235,
        236,
        237,
        238,
        239,
        240,
        241,
        242,
        243,
        244,
        245,
        246
      ]
    },
    {
      "teal": 146,
      "source": 39,
      "pc": [
        247,
        248,
        249,
        250,
        251,
        252,
        253,
        254,
        255,
        256,
        257,
        258,
        259,
        260,
        261,
        262,
        263,
        264
      ]
    },
    {
      "teal": 147,
      "source": 39,
      "pc": [
        265
      ]
    },
    {
      "teal": 148,
      "source": 35,
      "pc": [
        266
      ]
    },
    {
      "teal": 151,
      "source": 6,
      "pc": [
        267
      ]
    },
    {
      "teal": 152,
      "source": 6,
      "pc": [
        268
      ]
    },
    {
      "teal": 155,
      "source": 6,
      "pc": [
        269,
        270,
        271,
        272,
        273,
        274
      ]
    },
    {
      "teal": 156,
      "source": 6,
      "pc": [
        275,
        276,
        277
      ]
    },
    {
      "teal": 157,
      "source": 6,
      "pc": [
        278,
        279,
        280,
        281
      ]
    },
    {
      "teal": 160,
      "source": 6,
      "errorMessage": "this contract does not implement the given ABI method for create NoOp",
      "pc": [
        282
      ]
    },
    {
      "teal": 163,
      "source": 6,
      "pc": [
        283,
        284,
        285,
        286,
        287,
        288
      ]
    },
    {
      "teal": 164,
      "source": 6,
      "pc": [
        289,
        290,
        291
      ]
    },
    {
      "teal": 165,
      "source": 6,
      "pc": [
        292,
        293,
        294,
        295
      ]
    },
    {
      "teal": 168,
      "source": 6,
      "errorMessage": "this contract does not implement the given ABI method for call NoOp",
      "pc": [
        296
      ]
    },
    {
      "teal": 171,
      "source": 6,
      "pc": [
        297,
        298,
        299,
        300,
        301,
        302
      ]
    },
    {
      "teal": 172,
      "source": 6,
      "pc": [
        303,
        304,
        305
      ]
    },
    {
      "teal": 173,
      "source": 6,
      "pc": [
        306,
        307,
        308,
        309
      ]
    },
    {
      "teal": 176,
      "source": 6,
      "errorMessage": "this contract does not implement the given ABI method for call OptIn",
      "pc": [
        310
      ]
    }
  ],
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwMC4wCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIGxpbmVzIG9mIFRFQUwgYXJlIHVzZWQgdG8gaW5pdGlhbGl6ZSB0ZW1wbGF0ZSB2YXJpYWJsZXMgaW4gc2NyYXRjaCBzbG90cwpwdXNoYnl0ZXMgVE1QTF9zb21lTnVtYmVyCmJ0b2kKc3RvcmUgMjAwCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQppbnQgNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqY2FsbF9PcHRJbiAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gZm9vKCgodWludDY0LHVpbnQ2NCksKHVpbnQ2NCx1aW50NjQpKSkodWludDY0LHVpbnQ2NCkKKmFiaV9yb3V0ZV9mb286CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCWJ5dGUgMHgxNTFmN2M3NQoKCS8vIGlucHV0czogKCh1aW50NjQsdWludDY0KSwodWludDY0LHVpbnQ2NCkpCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGlucHV0cykgZm9yIGZvbyBtdXN0IGJlIGEgKCh1aW50NjQsdWludDY0KSwodWludDY0LHVpbnQ2NCkpCglhc3NlcnQKCgkvLyBleGVjdXRlIGZvbygoKHVpbnQ2NCx1aW50NjQpLCh1aW50NjQsdWludDY0KSkpKHVpbnQ2NCx1aW50NjQpCgljYWxsc3ViIGZvbwoJY29uY2F0Cglsb2cKCWludCAxCglyZXR1cm4KCi8vIGZvbyhpbnB1dHM6IElucHV0cyk6IE91dHB1dHMKZm9vOgoJcHJvdG8gMSAxCgoJLy8gKmlmMF9jb25kaXRpb24KCS8vIHRlc3RzL2NvbnRyYWN0cy9hcmM1Ni5hbGdvLnRzOjI0CgkvLyBpbnB1dHMuc3VidHJhY3QuYSA8IGlucHV0cy5zdWJ0cmFjdC5iCglmcmFtZV9kaWcgLTEgLy8gaW5wdXRzOiBJbnB1dHMKCWV4dHJhY3QgMTYgOAoJYnRvaQoJZnJhbWVfZGlnIC0xIC8vIGlucHV0czogSW5wdXRzCglleHRyYWN0IDI0IDgKCWJ0b2kKCTwKCWJ6ICppZjBfZW5kCgoJLy8gKmlmMF9jb25zZXF1ZW50CgkvLyBzdWJ0cmFjdC5hIG11c3QgYmUgZ3JlYXRlciB0aGFuIHN1YnRyYWN0LmIKCWVycgoKKmlmMF9lbmQ6CgkvLyB0ZXN0cy9jb250cmFjdHMvYXJjNTYuYWxnby50czoyNgoJLy8gdGhpcy5nbG9iYWxLZXkudmFsdWUgPSB0aGlzLnNvbWVOdW1iZXIKCWJ5dGUgMHg2NzZjNmY2MjYxNmM0YjY1NzkgLy8gImdsb2JhbEtleSIKCWxvYWQgMjAwIC8vIFRNUExfc29tZU51bWJlcgoJYXBwX2dsb2JhbF9wdXQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYXJjNTYuYWxnby50czoyNwoJLy8gdGhpcy5nbG9iYWxNYXAoJ2ZvbycpLnZhbHVlID0geyBmb286IDEzLCBiYXI6IDM3IH0KCWJ5dGUgMHg3MDAwMDM2NjZmNmYKCWJ5dGUgMHgwMDBkMDAyNQoJYXBwX2dsb2JhbF9wdXQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYXJjNTYuYWxnby50czoyOQoJLy8gcmV0dXJuIHsKCS8vICAgICAgIHN1bTogaW5wdXRzLmFkZC5hICsgaW5wdXRzLmFkZC5iLAoJLy8gICAgICAgZGlmZmVyZW5jZTogaW5wdXRzLnN1YnRyYWN0LmEgLSBpbnB1dHMuc3VidHJhY3QuYiwKCS8vICAgICB9OwoJZnJhbWVfZGlnIC0xIC8vIGlucHV0czogSW5wdXRzCglleHRyYWN0IDAgOAoJYnRvaQoJZnJhbWVfZGlnIC0xIC8vIGlucHV0czogSW5wdXRzCglleHRyYWN0IDggOAoJYnRvaQoJKwoJaXRvYgoJZnJhbWVfZGlnIC0xIC8vIGlucHV0czogSW5wdXRzCglleHRyYWN0IDE2IDgKCWJ0b2kKCWZyYW1lX2RpZyAtMSAvLyBpbnB1dHM6IElucHV0cwoJZXh0cmFjdCAyNCA4CglidG9pCgktCglpdG9iCgljb25jYXQKCXJldHN1YgoKLy8gb3B0SW5Ub0FwcGxpY2F0aW9uKCl2b2lkCiphYmlfcm91dGVfb3B0SW5Ub0FwcGxpY2F0aW9uOgoJLy8gZXhlY3V0ZSBvcHRJblRvQXBwbGljYXRpb24oKXZvaWQKCWNhbGxzdWIgb3B0SW5Ub0FwcGxpY2F0aW9uCglpbnQgMQoJcmV0dXJuCgovLyBvcHRJblRvQXBwbGljYXRpb24oKTogdm9pZApvcHRJblRvQXBwbGljYXRpb246Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvYXJjNTYuYWxnby50czozNgoJLy8gdGhpcy5sb2NhbEtleSh0aGlzLnR4bi5zZW5kZXIpLnZhbHVlID0gdGhpcy5zb21lTnVtYmVyCgl0eG4gU2VuZGVyCglieXRlIDB4NmM2ZjYzNjE2YzRiNjU3OSAvLyAibG9jYWxLZXkiCglsb2FkIDIwMCAvLyBUTVBMX3NvbWVOdW1iZXIKCWFwcF9sb2NhbF9wdXQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYXJjNTYuYWxnby50czozNwoJLy8gdGhpcy5sb2NhbE1hcCh0aGlzLnR4bi5zZW5kZXIsICdmb28nKS52YWx1ZSA9ICdiYXInCgl0eG4gU2VuZGVyCglieXRlIDB4NzA2NjZmNmYKCWJ5dGUgMHgwMDAzNjI2MTcyCglhcHBfbG9jYWxfcHV0CgoJLy8gdGVzdHMvY29udHJhY3RzL2FyYzU2LmFsZ28udHM6MzgKCS8vIHRoaXMuYm94S2V5LnZhbHVlID0gJ2JheicKCWJ5dGUgMHg2MjZmNzg0YjY1NzkgLy8gImJveEtleSIKCWR1cAoJYm94X2RlbAoJcG9wCglieXRlIDB4MDAwMzYyNjE3YQoJYm94X3B1dAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hcmM1Ni5hbGdvLnRzOjM5CgkvLyB0aGlzLmJveE1hcCh7IGFkZDogeyBhOiAxLCBiOiAyIH0sIHN1YnRyYWN0OiB7IGE6IDQsIGI6IDMgfSB9KS52YWx1ZSA9IHsgc3VtOiAzLCBkaWZmZXJlbmNlOiAxIH0KCWJ5dGUgMHg3MDAwMDAwMDAwMDAwMDAwMDEwMDAwMDAwMDAwMDAwMDAyMDAwMDAwMDAwMDAwMDAwNDAwMDAwMDAwMDAwMDAwMDMKCWJ5dGUgMHgwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMQoJYm94X3B1dAoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJaW50IDEKCXJldHVybgoKKmNyZWF0ZV9Ob09wOgoJbWV0aG9kICJjcmVhdGVBcHBsaWNhdGlvbigpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb24KCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY3JlYXRlIE5vT3AKCWVycgoKKmNhbGxfTm9PcDoKCW1ldGhvZCAiZm9vKCgodWludDY0LHVpbnQ2NCksKHVpbnQ2NCx1aW50NjQpKSkodWludDY0LHVpbnQ2NCkiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2ZvbwoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycgoKKmNhbGxfT3B0SW46CgltZXRob2QgIm9wdEluVG9BcHBsaWNhdGlvbigpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfb3B0SW5Ub0FwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgT3B0SW4KCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "templateVariables": {
    "someNumber": {
      "type": "uint64"
    }
  },
  "scratchVariables": {
    "someNumber": {
      "type": "uint64",
      "slot": 200
    },
    "someScratch": {
      "type": "string",
      "slot": 77
    }
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 25,
      "patch": 0,
      "commitHash": "9855f57c"
    }
  }
}