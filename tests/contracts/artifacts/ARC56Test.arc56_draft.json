{
  "name": "ARC56Test",
  "desc": "",
  "methods": [
    {
      "name": "foo",
      "args": [
        {
          "name": "inputs",
          "type": "((uint64,uint64),(uint64,uint64))",
          "struct": "Inputs"
        }
      ],
      "returns": {
        "type": "(uint64,uint64)",
        "struct": "Outputs"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "optInToApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "OptIn"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "{ foo: uint16; bar: uint16 }": {
      "foo": "uint16",
      "bar": "uint16"
    },
    "Outputs": {
      "sum": "uint64",
      "difference": "uint64"
    },
    "Inputs": {
      "add": {
        "a": "uint64",
        "b": "uint64"
      },
      "subtract": {
        "a": "uint64",
        "b": "uint64"
      }
    }
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 37,
        "ints": 1
      },
      "local": {
        "bytes": 13,
        "ints": 1
      }
    },
    "keys": {
      "global": {
        "globalKey": {
          "key": "Z2xvYmFsS2V5",
          "keyType": "bytes",
          "valueType": "uint64"
        }
      },
      "local": {
        "localKey": {
          "key": "bG9jYWxLZXk=",
          "keyType": "bytes",
          "valueType": "uint64"
        }
      },
      "box": {
        "boxKey": {
          "key": "Ym94S2V5",
          "keyType": "bytes",
          "valueType": "string"
        }
      }
    },
    "maps": {
      "global": {
        "globalMap": {
          "keyType": "string",
          "valueType": "{ foo: uint16; bar: uint16 }",
          "prefix": "p"
        }
      },
      "local": {
        "localMap": {
          "keyType": "bytes",
          "valueType": "string",
          "prefix": "p"
        }
      },
      "box": {
        "boxMap": {
          "keyType": "Inputs",
          "valueType": "Outputs",
          "prefix": "p"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": [
    {
      "teal": 1,
      "source": 6,
      "disassembledTeal": 1
    },
    {
      "teal": 13,
      "source": 6,
      "disassembledTeal": 2
    },
    {
      "teal": 14,
      "source": 6,
      "disassembledTeal": 3
    },
    {
      "teal": 15,
      "source": 6,
      "disassembledTeal": 4
    },
    {
      "teal": 16,
      "source": 6,
      "disassembledTeal": 5
    },
    {
      "teal": 17,
      "source": 6,
      "disassembledTeal": 6
    },
    {
      "teal": 18,
      "source": 6,
      "disassembledTeal": 7
    },
    {
      "teal": 19,
      "source": 6,
      "disassembledTeal": 8
    },
    {
      "teal": 23,
      "source": 6,
      "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "disassembledTeal": 10
    },
    {
      "teal": 28,
      "source": 23,
      "disassembledTeal": 12
    },
    {
      "teal": 31,
      "source": 23,
      "disassembledTeal": 13
    },
    {
      "teal": 32,
      "source": 23,
      "disassembledTeal": 14
    },
    {
      "teal": 33,
      "source": 23,
      "disassembledTeal": 15
    },
    {
      "teal": 34,
      "source": 23,
      "disassembledTeal": 16
    },
    {
      "teal": 35,
      "source": 23,
      "disassembledTeal": 17
    },
    {
      "teal": 38,
      "source": 23,
      "errorMessage": "argument 0 (inputs) for foo must be a ((uint64,uint64),(uint64,uint64))",
      "disassembledTeal": 18
    },
    {
      "teal": 41,
      "source": 23,
      "disassembledTeal": 19
    },
    {
      "teal": 42,
      "source": 23,
      "disassembledTeal": 20
    },
    {
      "teal": 43,
      "source": 23,
      "disassembledTeal": 21
    },
    {
      "teal": 44,
      "source": 23,
      "disassembledTeal": 22
    },
    {
      "teal": 45,
      "source": 23,
      "disassembledTeal": 23
    },
    {
      "teal": 49,
      "source": 23,
      "disassembledTeal": 25
    },
    {
      "teal": 54,
      "source": 24,
      "disassembledTeal": 26
    },
    {
      "teal": 55,
      "source": 24,
      "disassembledTeal": 27
    },
    {
      "teal": 56,
      "source": 24,
      "disassembledTeal": 28
    },
    {
      "teal": 57,
      "source": 24,
      "disassembledTeal": 29
    },
    {
      "teal": 58,
      "source": 24,
      "disassembledTeal": 30
    },
    {
      "teal": 59,
      "source": 24,
      "disassembledTeal": 31
    },
    {
      "teal": 60,
      "source": 24,
      "disassembledTeal": 32
    },
    {
      "teal": 61,
      "source": 24,
      "disassembledTeal": 33
    },
    {
      "teal": 65,
      "source": 24,
      "errorMessage": "subtract.a must be greater than subtract.b",
      "disassembledTeal": 34
    },
    {
      "teal": 70,
      "source": 26,
      "disassembledTeal": 36
    },
    {
      "teal": 71,
      "source": 26,
      "disassembledTeal": 37
    },
    {
      "teal": 72,
      "source": 26,
      "disassembledTeal": 38
    },
    {
      "teal": 76,
      "source": 27,
      "disassembledTeal": 39
    },
    {
      "teal": 77,
      "source": 27,
      "disassembledTeal": 40
    },
    {
      "teal": 78,
      "source": 27,
      "disassembledTeal": 41
    },
    {
      "teal": 85,
      "source": 30,
      "disassembledTeal": 42
    },
    {
      "teal": 86,
      "source": 30,
      "disassembledTeal": 43
    },
    {
      "teal": 87,
      "source": 30,
      "disassembledTeal": 44
    },
    {
      "teal": 88,
      "source": 30,
      "disassembledTeal": 45
    },
    {
      "teal": 89,
      "source": 30,
      "disassembledTeal": 46
    },
    {
      "teal": 90,
      "source": 30,
      "disassembledTeal": 47
    },
    {
      "teal": 91,
      "source": 30,
      "disassembledTeal": 48
    },
    {
      "teal": 92,
      "source": 30,
      "disassembledTeal": 49
    },
    {
      "teal": 93,
      "source": 31,
      "disassembledTeal": 50
    },
    {
      "teal": 94,
      "source": 31,
      "disassembledTeal": 51
    },
    {
      "teal": 95,
      "source": 31,
      "disassembledTeal": 52
    },
    {
      "teal": 96,
      "source": 31,
      "disassembledTeal": 53
    },
    {
      "teal": 97,
      "source": 31,
      "disassembledTeal": 54
    },
    {
      "teal": 98,
      "source": 31,
      "disassembledTeal": 55
    },
    {
      "teal": 99,
      "source": 31,
      "disassembledTeal": 56
    },
    {
      "teal": 100,
      "source": 31,
      "disassembledTeal": 57
    },
    {
      "teal": 101,
      "source": 31,
      "disassembledTeal": 58
    },
    {
      "teal": 102,
      "source": 23,
      "disassembledTeal": 59
    },
    {
      "teal": 107,
      "source": 35,
      "disassembledTeal": 61
    },
    {
      "teal": 108,
      "source": 35,
      "disassembledTeal": 62
    },
    {
      "teal": 109,
      "source": 35,
      "disassembledTeal": 63
    },
    {
      "teal": 113,
      "source": 35,
      "disassembledTeal": 65
    },
    {
      "teal": 117,
      "source": 36,
      "disassembledTeal": 66
    },
    {
      "teal": 118,
      "source": 36,
      "disassembledTeal": 67
    },
    {
      "teal": 119,
      "source": 36,
      "disassembledTeal": 68
    },
    {
      "teal": 120,
      "source": 36,
      "disassembledTeal": 69
    },
    {
      "teal": 124,
      "source": 37,
      "disassembledTeal": 70
    },
    {
      "teal": 125,
      "source": 37,
      "disassembledTeal": 71
    },
    {
      "teal": 126,
      "source": 37,
      "disassembledTeal": 72
    },
    {
      "teal": 127,
      "source": 37,
      "disassembledTeal": 73
    },
    {
      "teal": 131,
      "source": 38,
      "disassembledTeal": 74
    },
    {
      "teal": 132,
      "source": 38,
      "disassembledTeal": 75
    },
    {
      "teal": 133,
      "source": 38,
      "disassembledTeal": 76
    },
    {
      "teal": 134,
      "source": 38,
      "disassembledTeal": 77
    },
    {
      "teal": 135,
      "source": 38,
      "disassembledTeal": 78
    },
    {
      "teal": 136,
      "source": 38,
      "disassembledTeal": 79
    },
    {
      "teal": 140,
      "source": 39,
      "disassembledTeal": 80
    },
    {
      "teal": 141,
      "source": 39,
      "disassembledTeal": 81
    },
    {
      "teal": 142,
      "source": 39,
      "disassembledTeal": 82
    },
    {
      "teal": 143,
      "source": 35,
      "disassembledTeal": 83
    },
    {
      "teal": 146,
      "source": 6,
      "disassembledTeal": 85
    },
    {
      "teal": 147,
      "source": 6,
      "disassembledTeal": 86
    },
    {
      "teal": 150,
      "source": 6,
      "disassembledTeal": 88
    },
    {
      "teal": 151,
      "source": 6,
      "disassembledTeal": 89
    },
    {
      "teal": 152,
      "source": 6,
      "disassembledTeal": 90
    },
    {
      "teal": 155,
      "source": 6,
      "errorMessage": "this contract does not implement the given ABI method for create NoOp",
      "disassembledTeal": 91
    },
    {
      "teal": 158,
      "source": 6,
      "disassembledTeal": 93
    },
    {
      "teal": 159,
      "source": 6,
      "disassembledTeal": 94
    },
    {
      "teal": 160,
      "source": 6,
      "disassembledTeal": 95
    },
    {
      "teal": 163,
      "source": 6,
      "errorMessage": "this contract does not implement the given ABI method for call NoOp",
      "disassembledTeal": 96
    },
    {
      "teal": 166,
      "source": 6,
      "disassembledTeal": 98
    },
    {
      "teal": 167,
      "source": 6,
      "disassembledTeal": 99
    },
    {
      "teal": 168,
      "source": 6,
      "disassembledTeal": 100
    },
    {
      "teal": 171,
      "source": 6,
      "errorMessage": "this contract does not implement the given ABI method for call OptIn",
      "disassembledTeal": 101
    }
  ],
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjk5LjAKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCmludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpjYWxsX09wdEluICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyBmb28oKCh1aW50NjQsdWludDY0KSwodWludDY0LHVpbnQ2NCkpKSh1aW50NjQsdWludDY0KQoqYWJpX3JvdXRlX2ZvbzoKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJYnl0ZSAweDE1MWY3Yzc1CgoJLy8gaW5wdXRzOiAoKHVpbnQ2NCx1aW50NjQpLCh1aW50NjQsdWludDY0KSkKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnQgMzIKCT09CgoJLy8gYXJndW1lbnQgMCAoaW5wdXRzKSBmb3IgZm9vIG11c3QgYmUgYSAoKHVpbnQ2NCx1aW50NjQpLCh1aW50NjQsdWludDY0KSkKCWFzc2VydAoKCS8vIGV4ZWN1dGUgZm9vKCgodWludDY0LHVpbnQ2NCksKHVpbnQ2NCx1aW50NjQpKSkodWludDY0LHVpbnQ2NCkKCWNhbGxzdWIgZm9vCgljb25jYXQKCWxvZwoJaW50IDEKCXJldHVybgoKLy8gZm9vKGlucHV0czogSW5wdXRzKTogT3V0cHV0cwpmb286Cglwcm90byAxIDEKCgkvLyAqaWYwX2NvbmRpdGlvbgoJLy8gdGVzdHMvY29udHJhY3RzL2FyYzU2LmFsZ28udHM6MjQKCS8vIGlucHV0cy5zdWJ0cmFjdC5hIDwgaW5wdXRzLnN1YnRyYWN0LmIKCWZyYW1lX2RpZyAtMSAvLyBpbnB1dHM6IElucHV0cwoJZXh0cmFjdCAxNiA4CglidG9pCglmcmFtZV9kaWcgLTEgLy8gaW5wdXRzOiBJbnB1dHMKCWV4dHJhY3QgMjQgOAoJYnRvaQoJPAoJYnogKmlmMF9lbmQKCgkvLyAqaWYwX2NvbnNlcXVlbnQKCS8vIHN1YnRyYWN0LmEgbXVzdCBiZSBncmVhdGVyIHRoYW4gc3VidHJhY3QuYgoJZXJyCgoqaWYwX2VuZDoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hcmM1Ni5hbGdvLnRzOjI2CgkvLyB0aGlzLmdsb2JhbEtleS52YWx1ZSA9IHRoaXMuc29tZU51bWJlcgoJYnl0ZSAweDY3NmM2ZjYyNjE2YzRiNjU3OSAvLyAiZ2xvYmFsS2V5IgoJcHVzaGludCBUTVBMX3NvbWVOdW1iZXIKCWFwcF9nbG9iYWxfcHV0CgoJLy8gdGVzdHMvY29udHJhY3RzL2FyYzU2LmFsZ28udHM6MjcKCS8vIHRoaXMuZ2xvYmFsTWFwKCdmb28nKS52YWx1ZSA9IHsgZm9vOiAxMywgYmFyOiAzNyB9CglieXRlIDB4NzAwMDAzNjY2ZjZmCglieXRlIDB4MDAwZDAwMjUKCWFwcF9nbG9iYWxfcHV0CgoJLy8gdGVzdHMvY29udHJhY3RzL2FyYzU2LmFsZ28udHM6MjkKCS8vIHJldHVybiB7CgkvLyAgICAgICBzdW06IGlucHV0cy5hZGQuYSArIGlucHV0cy5hZGQuYiwKCS8vICAgICAgIGRpZmZlcmVuY2U6IGlucHV0cy5zdWJ0cmFjdC5hIC0gaW5wdXRzLnN1YnRyYWN0LmIsCgkvLyAgICAgfTsKCWZyYW1lX2RpZyAtMSAvLyBpbnB1dHM6IElucHV0cwoJZXh0cmFjdCAwIDgKCWJ0b2kKCWZyYW1lX2RpZyAtMSAvLyBpbnB1dHM6IElucHV0cwoJZXh0cmFjdCA4IDgKCWJ0b2kKCSsKCWl0b2IKCWZyYW1lX2RpZyAtMSAvLyBpbnB1dHM6IElucHV0cwoJZXh0cmFjdCAxNiA4CglidG9pCglmcmFtZV9kaWcgLTEgLy8gaW5wdXRzOiBJbnB1dHMKCWV4dHJhY3QgMjQgOAoJYnRvaQoJLQoJaXRvYgoJY29uY2F0CglyZXRzdWIKCi8vIG9wdEluVG9BcHBsaWNhdGlvbigpdm9pZAoqYWJpX3JvdXRlX29wdEluVG9BcHBsaWNhdGlvbjoKCS8vIGV4ZWN1dGUgb3B0SW5Ub0FwcGxpY2F0aW9uKCl2b2lkCgljYWxsc3ViIG9wdEluVG9BcHBsaWNhdGlvbgoJaW50IDEKCXJldHVybgoKLy8gb3B0SW5Ub0FwcGxpY2F0aW9uKCk6IHZvaWQKb3B0SW5Ub0FwcGxpY2F0aW9uOgoJcHJvdG8gMCAwCgoJLy8gdGVzdHMvY29udHJhY3RzL2FyYzU2LmFsZ28udHM6MzYKCS8vIHRoaXMubG9jYWxLZXkodGhpcy50eG4uc2VuZGVyKS52YWx1ZSA9IHRoaXMuc29tZU51bWJlcgoJdHhuIFNlbmRlcgoJYnl0ZSAweDZjNmY2MzYxNmM0YjY1NzkgLy8gImxvY2FsS2V5IgoJcHVzaGludCBUTVBMX3NvbWVOdW1iZXIKCWFwcF9sb2NhbF9wdXQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYXJjNTYuYWxnby50czozNwoJLy8gdGhpcy5sb2NhbE1hcCh0aGlzLnR4bi5zZW5kZXIsICdmb28nKS52YWx1ZSA9ICdiYXInCgl0eG4gU2VuZGVyCglieXRlIDB4NzA2NjZmNmYKCWJ5dGUgMHgwMDAzNjI2MTcyCglhcHBfbG9jYWxfcHV0CgoJLy8gdGVzdHMvY29udHJhY3RzL2FyYzU2LmFsZ28udHM6MzgKCS8vIHRoaXMuYm94S2V5LnZhbHVlID0gJ2JheicKCWJ5dGUgMHg2MjZmNzg0YjY1NzkgLy8gImJveEtleSIKCWR1cAoJYm94X2RlbAoJcG9wCglieXRlIDB4MDAwMzYyNjE3YQoJYm94X3B1dAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hcmM1Ni5hbGdvLnRzOjM5CgkvLyB0aGlzLmJveE1hcCh7IGFkZDogeyBhOiAxLCBiOiAyIH0sIHN1YnRyYWN0OiB7IGE6IDQsIGI6IDMgfSB9KS52YWx1ZSA9IHsgc3VtOiAzLCBkaWZmZXJlbmNlOiAxIH0KCWJ5dGUgMHg3MDAwMDAwMDAwMDAwMDAwMDEwMDAwMDAwMDAwMDAwMDAyMDAwMDAwMDAwMDAwMDAwNDAwMDAwMDAwMDAwMDAwMDMKCWJ5dGUgMHgwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMQoJYm94X3B1dAoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJaW50IDEKCXJldHVybgoKKmNyZWF0ZV9Ob09wOgoJbWV0aG9kICJjcmVhdGVBcHBsaWNhdGlvbigpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb24KCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY3JlYXRlIE5vT3AKCWVycgoKKmNhbGxfTm9PcDoKCW1ldGhvZCAiZm9vKCgodWludDY0LHVpbnQ2NCksKHVpbnQ2NCx1aW50NjQpKSkodWludDY0LHVpbnQ2NCkiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2ZvbwoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycgoKKmNhbGxfT3B0SW46CgltZXRob2QgIm9wdEluVG9BcHBsaWNhdGlvbigpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfb3B0SW5Ub0FwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgT3B0SW4KCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "templateVariables": {
    "someNumber": {
      "type": "uint64"
    }
  },
  "scratchVariables": {
    "someScratch": {
      "type": "string",
      "slot": 77
    }
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 25,
      "patch": 0,
      "commitHash": "9855f57c"
    }
  }
}