{
  "name": "ARC56Test",
  "desc": "",
  "methods": [
    {
      "name": "customStructMethod",
      "args": [
        {
          "name": "input",
          "type": "(uint64)",
          "struct": "AnotherCustomStruct"
        }
      ],
      "returns": {
        "type": "(uint64)",
        "struct": "AnotherCustomStruct"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "foo",
      "args": [
        {
          "name": "inputs",
          "type": "((uint64,uint64),(uint64,uint64))",
          "struct": "Inputs"
        }
      ],
      "returns": {
        "type": "(uint64,uint64)",
        "struct": "Outputs"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "optInToApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "OptIn"
        ]
      }
    },
    {
      "name": "customType",
      "args": [
        {
          "name": "input",
          "type": "(uint64)",
          "struct": "CustomStructAsName"
        }
      ],
      "returns": {
        "type": "(uint64)",
        "struct": "CustomStructAsName"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "{ foo: uint16; bar: uint16 }": [
      {
        "name": "foo",
        "type": "uint16"
      },
      {
        "name": "bar",
        "type": "uint16"
      }
    ],
    "Outputs": [
      {
        "name": "sum",
        "type": "uint64"
      },
      {
        "name": "difference",
        "type": "uint64"
      }
    ],
    "Inputs": [
      {
        "name": "add",
        "type": [
          {
            "name": "a",
            "type": "uint64"
          },
          {
            "name": "b",
            "type": "uint64"
          }
        ]
      },
      {
        "name": "subtract",
        "type": [
          {
            "name": "a",
            "type": "uint64"
          },
          {
            "name": "b",
            "type": "uint64"
          }
        ]
      }
    ],
    "AnotherCustomStruct": [
      {
        "name": "b",
        "type": "uint64"
      }
    ],
    "CustomStructAsName": [
      {
        "name": "a",
        "type": "uint64"
      }
    ]
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 37,
        "ints": 1
      },
      "local": {
        "bytes": 13,
        "ints": 1
      }
    },
    "keys": {
      "global": {
        "globalKey": {
          "key": "Z2xvYmFsS2V5",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        }
      },
      "local": {
        "localKey": {
          "key": "bG9jYWxLZXk=",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        }
      },
      "box": {
        "boxKey": {
          "key": "Ym94S2V5",
          "keyType": "AVMBytes",
          "valueType": "string"
        }
      }
    },
    "maps": {
      "global": {
        "globalMap": {
          "keyType": "string",
          "valueType": "{ foo: uint16; bar: uint16 }",
          "prefix": "p"
        }
      },
      "local": {
        "localMap": {
          "keyType": "AVMBytes",
          "valueType": "string",
          "prefix": "p"
        }
      },
      "box": {
        "boxMap": {
          "keyType": "Inputs",
          "valueType": "Outputs",
          "prefix": "p"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 11,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            1
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            2,
            3
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            4
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            5,
            6
          ]
        },
        {
          "teal": 21,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            7
          ]
        },
        {
          "teal": 22,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            8,
            9
          ]
        },
        {
          "teal": 23,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            10
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36
          ]
        },
        {
          "teal": 28,
          "source": "tests/contracts/arc56.algo.ts:7",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            37
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/inheritance-external.algo.ts:12",
          "pc": [
            38,
            39,
            40,
            41,
            42,
            43
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/inheritance-external.algo.ts:14",
          "pc": [
            44,
            45,
            46
          ]
        },
        {
          "teal": 37,
          "source": "tests/contracts/inheritance-external.algo.ts:14",
          "pc": [
            47
          ]
        },
        {
          "teal": 38,
          "source": "tests/contracts/inheritance-external.algo.ts:14",
          "pc": [
            48
          ]
        },
        {
          "teal": 39,
          "source": "tests/contracts/inheritance-external.algo.ts:14",
          "pc": [
            49,
            50
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/inheritance-external.algo.ts:14",
          "pc": [
            51
          ]
        },
        {
          "teal": 43,
          "source": "tests/contracts/inheritance-external.algo.ts:14",
          "errorMessage": "argument 0 (input) for customStructMethod must be a (uint64)",
          "pc": [
            52
          ]
        },
        {
          "teal": 46,
          "source": "tests/contracts/inheritance-external.algo.ts:12",
          "pc": [
            53,
            54,
            55
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/inheritance-external.algo.ts:12",
          "pc": [
            56
          ]
        },
        {
          "teal": 48,
          "source": "tests/contracts/inheritance-external.algo.ts:12",
          "pc": [
            57
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/inheritance-external.algo.ts:12",
          "pc": [
            58,
            59
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/inheritance-external.algo.ts:12",
          "pc": [
            60
          ]
        },
        {
          "teal": 54,
          "source": "tests/contracts/inheritance-external.algo.ts:12",
          "pc": [
            61,
            62,
            63
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/inheritance-external.algo.ts:16",
          "pc": [
            64,
            65
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/inheritance-external.algo.ts:12",
          "pc": [
            66
          ]
        },
        {
          "teal": 64,
          "source": "tests/contracts/arc56.algo.ts:24",
          "pc": [
            67,
            68,
            69,
            70,
            71,
            72
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/arc56.algo.ts:24",
          "pc": [
            73,
            74,
            75
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/arc56.algo.ts:24",
          "pc": [
            76
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/arc56.algo.ts:24",
          "pc": [
            77
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/arc56.algo.ts:24",
          "pc": [
            78,
            79
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/arc56.algo.ts:24",
          "pc": [
            80
          ]
        },
        {
          "teal": 74,
          "source": "tests/contracts/arc56.algo.ts:24",
          "errorMessage": "argument 0 (inputs) for foo must be a ((uint64,uint64),(uint64,uint64))",
          "pc": [
            81
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/arc56.algo.ts:24",
          "pc": [
            82,
            83,
            84
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/arc56.algo.ts:24",
          "pc": [
            85
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/arc56.algo.ts:24",
          "pc": [
            86
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/arc56.algo.ts:24",
          "pc": [
            87,
            88
          ]
        },
        {
          "teal": 81,
          "source": "tests/contracts/arc56.algo.ts:24",
          "pc": [
            89
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/arc56.algo.ts:24",
          "pc": [
            90,
            91,
            92
          ]
        },
        {
          "teal": 90,
          "source": "tests/contracts/arc56.algo.ts:25",
          "pc": [
            93,
            94
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/arc56.algo.ts:25",
          "pc": [
            95,
            96,
            97
          ]
        },
        {
          "teal": 92,
          "source": "tests/contracts/arc56.algo.ts:25",
          "pc": [
            98
          ]
        },
        {
          "teal": 93,
          "source": "tests/contracts/arc56.algo.ts:25",
          "pc": [
            99,
            100
          ]
        },
        {
          "teal": 94,
          "source": "tests/contracts/arc56.algo.ts:25",
          "pc": [
            101,
            102,
            103
          ]
        },
        {
          "teal": 95,
          "source": "tests/contracts/arc56.algo.ts:25",
          "pc": [
            104
          ]
        },
        {
          "teal": 96,
          "source": "tests/contracts/arc56.algo.ts:25",
          "pc": [
            105
          ]
        },
        {
          "teal": 97,
          "source": "tests/contracts/arc56.algo.ts:25",
          "pc": [
            106,
            107,
            108
          ]
        },
        {
          "teal": 101,
          "source": "tests/contracts/arc56.algo.ts:25",
          "errorMessage": "subtract.a must be greater than subtract.b",
          "pc": [
            109
          ]
        },
        {
          "teal": 106,
          "source": "tests/contracts/arc56.algo.ts:27",
          "pc": [
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120
          ]
        },
        {
          "teal": 107,
          "source": "tests/contracts/arc56.algo.ts:27",
          "pc": [
            121
          ]
        },
        {
          "teal": 108,
          "source": "tests/contracts/arc56.algo.ts:27",
          "pc": [
            122
          ]
        },
        {
          "teal": 112,
          "source": "tests/contracts/arc56.algo.ts:28",
          "pc": [
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130
          ]
        },
        {
          "teal": 113,
          "source": "tests/contracts/arc56.algo.ts:28",
          "pc": [
            131,
            132,
            133,
            134,
            135,
            136
          ]
        },
        {
          "teal": 114,
          "source": "tests/contracts/arc56.algo.ts:28",
          "pc": [
            137
          ]
        },
        {
          "teal": 121,
          "source": "tests/contracts/arc56.algo.ts:31",
          "pc": [
            138,
            139
          ]
        },
        {
          "teal": 122,
          "source": "tests/contracts/arc56.algo.ts:31",
          "pc": [
            140,
            141,
            142
          ]
        },
        {
          "teal": 123,
          "source": "tests/contracts/arc56.algo.ts:31",
          "pc": [
            143
          ]
        },
        {
          "teal": 124,
          "source": "tests/contracts/arc56.algo.ts:31",
          "pc": [
            144,
            145
          ]
        },
        {
          "teal": 125,
          "source": "tests/contracts/arc56.algo.ts:31",
          "pc": [
            146,
            147,
            148
          ]
        },
        {
          "teal": 126,
          "source": "tests/contracts/arc56.algo.ts:31",
          "pc": [
            149
          ]
        },
        {
          "teal": 127,
          "source": "tests/contracts/arc56.algo.ts:31",
          "pc": [
            150
          ]
        },
        {
          "teal": 128,
          "source": "tests/contracts/arc56.algo.ts:31",
          "pc": [
            151
          ]
        },
        {
          "teal": 129,
          "source": "tests/contracts/arc56.algo.ts:32",
          "pc": [
            152,
            153
          ]
        },
        {
          "teal": 130,
          "source": "tests/contracts/arc56.algo.ts:32",
          "pc": [
            154,
            155,
            156
          ]
        },
        {
          "teal": 131,
          "source": "tests/contracts/arc56.algo.ts:32",
          "pc": [
            157
          ]
        },
        {
          "teal": 132,
          "source": "tests/contracts/arc56.algo.ts:32",
          "pc": [
            158,
            159
          ]
        },
        {
          "teal": 133,
          "source": "tests/contracts/arc56.algo.ts:32",
          "pc": [
            160,
            161,
            162
          ]
        },
        {
          "teal": 134,
          "source": "tests/contracts/arc56.algo.ts:32",
          "pc": [
            163
          ]
        },
        {
          "teal": 135,
          "source": "tests/contracts/arc56.algo.ts:32",
          "pc": [
            164
          ]
        },
        {
          "teal": 136,
          "source": "tests/contracts/arc56.algo.ts:32",
          "pc": [
            165
          ]
        },
        {
          "teal": 137,
          "source": "tests/contracts/arc56.algo.ts:32",
          "pc": [
            166
          ]
        },
        {
          "teal": 138,
          "source": "tests/contracts/arc56.algo.ts:24",
          "pc": [
            167
          ]
        },
        {
          "teal": 143,
          "source": "tests/contracts/arc56.algo.ts:36",
          "pc": [
            168,
            169,
            170
          ]
        },
        {
          "teal": 144,
          "source": "tests/contracts/arc56.algo.ts:36",
          "pc": [
            171,
            172
          ]
        },
        {
          "teal": 145,
          "source": "tests/contracts/arc56.algo.ts:36",
          "pc": [
            173
          ]
        },
        {
          "teal": 149,
          "source": "tests/contracts/arc56.algo.ts:36",
          "pc": [
            174,
            175,
            176
          ]
        },
        {
          "teal": 153,
          "source": "tests/contracts/arc56.algo.ts:37",
          "pc": [
            177,
            178
          ]
        },
        {
          "teal": 154,
          "source": "tests/contracts/arc56.algo.ts:37",
          "pc": [
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188
          ]
        },
        {
          "teal": 155,
          "source": "tests/contracts/arc56.algo.ts:37",
          "pc": [
            189
          ]
        },
        {
          "teal": 156,
          "source": "tests/contracts/arc56.algo.ts:37",
          "pc": [
            190
          ]
        },
        {
          "teal": 160,
          "source": "tests/contracts/arc56.algo.ts:38",
          "pc": [
            191,
            192
          ]
        },
        {
          "teal": 161,
          "source": "tests/contracts/arc56.algo.ts:38",
          "pc": [
            193,
            194,
            195,
            196,
            197,
            198
          ]
        },
        {
          "teal": 162,
          "source": "tests/contracts/arc56.algo.ts:38",
          "pc": [
            199,
            200,
            201,
            202,
            203,
            204,
            205
          ]
        },
        {
          "teal": 163,
          "source": "tests/contracts/arc56.algo.ts:38",
          "pc": [
            206
          ]
        },
        {
          "teal": 167,
          "source": "tests/contracts/arc56.algo.ts:39",
          "pc": [
            207,
            208,
            209,
            210,
            211,
            212,
            213,
            214
          ]
        },
        {
          "teal": 168,
          "source": "tests/contracts/arc56.algo.ts:39",
          "pc": [
            215
          ]
        },
        {
          "teal": 169,
          "source": "tests/contracts/arc56.algo.ts:39",
          "pc": [
            216
          ]
        },
        {
          "teal": 170,
          "source": "tests/contracts/arc56.algo.ts:39",
          "pc": [
            217
          ]
        },
        {
          "teal": 171,
          "source": "tests/contracts/arc56.algo.ts:39",
          "pc": [
            218,
            219,
            220,
            221,
            222,
            223,
            224
          ]
        },
        {
          "teal": 172,
          "source": "tests/contracts/arc56.algo.ts:39",
          "pc": [
            225
          ]
        },
        {
          "teal": 176,
          "source": "tests/contracts/arc56.algo.ts:40",
          "pc": [
            226,
            227,
            228,
            229,
            230,
            231,
            232,
            233,
            234,
            235,
            236,
            237,
            238,
            239,
            240,
            241,
            242,
            243,
            244,
            245,
            246,
            247,
            248,
            249,
            250,
            251,
            252,
            253,
            254,
            255,
            256,
            257,
            258,
            259,
            260
          ]
        },
        {
          "teal": 177,
          "source": "tests/contracts/arc56.algo.ts:40",
          "pc": [
            261,
            262,
            263,
            264,
            265,
            266,
            267,
            268,
            269,
            270,
            271,
            272,
            273,
            274,
            275,
            276,
            277,
            278
          ]
        },
        {
          "teal": 178,
          "source": "tests/contracts/arc56.algo.ts:40",
          "pc": [
            279
          ]
        },
        {
          "teal": 179,
          "source": "tests/contracts/arc56.algo.ts:36",
          "pc": [
            280
          ]
        },
        {
          "teal": 184,
          "source": "tests/contracts/arc56.algo.ts:43",
          "pc": [
            281,
            282,
            283,
            284,
            285,
            286
          ]
        },
        {
          "teal": 187,
          "source": "tests/contracts/arc56.algo.ts:43",
          "pc": [
            287,
            288,
            289
          ]
        },
        {
          "teal": 188,
          "source": "tests/contracts/arc56.algo.ts:43",
          "pc": [
            290
          ]
        },
        {
          "teal": 189,
          "source": "tests/contracts/arc56.algo.ts:43",
          "pc": [
            291
          ]
        },
        {
          "teal": 190,
          "source": "tests/contracts/arc56.algo.ts:43",
          "pc": [
            292,
            293
          ]
        },
        {
          "teal": 191,
          "source": "tests/contracts/arc56.algo.ts:43",
          "pc": [
            294
          ]
        },
        {
          "teal": 194,
          "source": "tests/contracts/arc56.algo.ts:43",
          "errorMessage": "argument 0 (input) for customType must be a (uint64)",
          "pc": [
            295
          ]
        },
        {
          "teal": 197,
          "source": "tests/contracts/arc56.algo.ts:43",
          "pc": [
            296,
            297,
            298
          ]
        },
        {
          "teal": 198,
          "source": "tests/contracts/arc56.algo.ts:43",
          "pc": [
            299
          ]
        },
        {
          "teal": 199,
          "source": "tests/contracts/arc56.algo.ts:43",
          "pc": [
            300
          ]
        },
        {
          "teal": 200,
          "source": "tests/contracts/arc56.algo.ts:43",
          "pc": [
            301,
            302
          ]
        },
        {
          "teal": 201,
          "source": "tests/contracts/arc56.algo.ts:43",
          "pc": [
            303
          ]
        },
        {
          "teal": 205,
          "source": "tests/contracts/arc56.algo.ts:43",
          "pc": [
            304,
            305,
            306
          ]
        },
        {
          "teal": 209,
          "source": "tests/contracts/arc56.algo.ts:44",
          "pc": [
            307,
            308
          ]
        },
        {
          "teal": 210,
          "source": "tests/contracts/arc56.algo.ts:43",
          "pc": [
            309
          ]
        },
        {
          "teal": 213,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            310,
            311
          ]
        },
        {
          "teal": 214,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            312
          ]
        },
        {
          "teal": 217,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            313,
            314,
            315,
            316,
            317,
            318
          ]
        },
        {
          "teal": 218,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            319,
            320,
            321
          ]
        },
        {
          "teal": 219,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            322,
            323,
            324,
            325
          ]
        },
        {
          "teal": 222,
          "source": "tests/contracts/arc56.algo.ts:7",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            326
          ]
        },
        {
          "teal": 225,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            327,
            328,
            329,
            330,
            331,
            332
          ]
        },
        {
          "teal": 226,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            333,
            334,
            335,
            336,
            337,
            338
          ]
        },
        {
          "teal": 227,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            339,
            340,
            341,
            342,
            343,
            344
          ]
        },
        {
          "teal": 228,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            345,
            346,
            347
          ]
        },
        {
          "teal": 229,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            348,
            349,
            350,
            351,
            352,
            353,
            354,
            355
          ]
        },
        {
          "teal": 232,
          "source": "tests/contracts/arc56.algo.ts:7",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            356
          ]
        },
        {
          "teal": 235,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            357,
            358,
            359,
            360,
            361,
            362
          ]
        },
        {
          "teal": 236,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            363,
            364,
            365
          ]
        },
        {
          "teal": 237,
          "source": "tests/contracts/arc56.algo.ts:7",
          "pc": [
            366,
            367,
            368,
            369
          ]
        },
        {
          "teal": 240,
          "source": "tests/contracts/arc56.algo.ts:7",
          "errorMessage": "this contract does not implement the given ABI method for call OptIn",
          "pc": [
            370
          ]
        }
      ],
      "pcOffsetMethod": "cblocks"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayBUTVBMX3NvbWVOdW1iZXIKYnl0ZWNibG9jayAweDE1MWY3Yzc1IDB4NjI2Zjc4NGI2NTc5CgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwNS4wCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIGxpbmVzIG9mIFRFQUwgYXJlIHVzZWQgdG8gaW5pdGlhbGl6ZSB0ZW1wbGF0ZSB2YXJpYWJsZXMgaW4gc2NyYXRjaCBzbG90cwppbnRjIDAgLy8gVE1QTF9zb21lTnVtYmVyCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQpwdXNoaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKmNhbGxfT3B0SW4gKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIGN1c3RvbVN0cnVjdE1ldGhvZCgodWludDY0KSkodWludDY0KQoqYWJpX3JvdXRlX2N1c3RvbVN0cnVjdE1ldGhvZDoKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJYnl0ZSAweDE1MWY3Yzc1CgoJLy8gaW5wdXQ6ICh1aW50NjQpCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJcHVzaGludCA4Cgk9PQoKCS8vIGFyZ3VtZW50IDAgKGlucHV0KSBmb3IgY3VzdG9tU3RydWN0TWV0aG9kIG11c3QgYmUgYSAodWludDY0KQoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBjdXN0b21TdHJ1Y3RNZXRob2QoKHVpbnQ2NCkpKHVpbnQ2NCkKCWNhbGxzdWIgY3VzdG9tU3RydWN0TWV0aG9kCgljb25jYXQKCWxvZwoJcHVzaGludCAxCglyZXR1cm4KCi8vIGN1c3RvbVN0cnVjdE1ldGhvZChpbnB1dDogQW5vdGhlckN1c3RvbVN0cnVjdCk6IEFub3RoZXJDdXN0b21TdHJ1Y3QKY3VzdG9tU3RydWN0TWV0aG9kOgoJcHJvdG8gMSAxCgoJLy8gdGVzdHMvY29udHJhY3RzL2luaGVyaXRhbmNlLWV4dGVybmFsLmFsZ28udHM6MjEKCS8vIHJldHVybiBpbnB1dDsKCWZyYW1lX2RpZyAtMSAvLyBpbnB1dDogQW5vdGhlckN1c3RvbVN0cnVjdAoJcmV0c3ViCgovLyBmb28oKCh1aW50NjQsdWludDY0KSwodWludDY0LHVpbnQ2NCkpKSh1aW50NjQsdWludDY0KQoqYWJpX3JvdXRlX2ZvbzoKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJYnl0ZSAweDE1MWY3Yzc1CgoJLy8gaW5wdXRzOiAoKHVpbnQ2NCx1aW50NjQpLCh1aW50NjQsdWludDY0KSkKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglwdXNoaW50IDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGlucHV0cykgZm9yIGZvbyBtdXN0IGJlIGEgKCh1aW50NjQsdWludDY0KSwodWludDY0LHVpbnQ2NCkpCglhc3NlcnQKCgkvLyBleGVjdXRlIGZvbygoKHVpbnQ2NCx1aW50NjQpLCh1aW50NjQsdWludDY0KSkpKHVpbnQ2NCx1aW50NjQpCgljYWxsc3ViIGZvbwoJY29uY2F0Cglsb2cKCXB1c2hpbnQgMQoJcmV0dXJuCgovLyBmb28oaW5wdXRzOiBJbnB1dHMpOiBPdXRwdXRzCmZvbzoKCXByb3RvIDEgMQoKCS8vICppZjBfY29uZGl0aW9uCgkvLyB0ZXN0cy9jb250cmFjdHMvYXJjNTYuYWxnby50czoyNQoJLy8gaW5wdXRzLnN1YnRyYWN0LmEgPCBpbnB1dHMuc3VidHJhY3QuYgoJZnJhbWVfZGlnIC0xIC8vIGlucHV0czogSW5wdXRzCglleHRyYWN0IDE2IDgKCWJ0b2kKCWZyYW1lX2RpZyAtMSAvLyBpbnB1dHM6IElucHV0cwoJZXh0cmFjdCAyNCA4CglidG9pCgk8CglieiAqaWYwX2VuZAoKCS8vICppZjBfY29uc2VxdWVudAoJLy8gc3VidHJhY3QuYSBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBzdWJ0cmFjdC5iCgllcnIKCippZjBfZW5kOgoJLy8gdGVzdHMvY29udHJhY3RzL2FyYzU2LmFsZ28udHM6MjcKCS8vIHRoaXMuZ2xvYmFsS2V5LnZhbHVlID0gdGhpcy5zb21lTnVtYmVyCglwdXNoYnl0ZXMgMHg2NzZjNmY2MjYxNmM0YjY1NzkgLy8gImdsb2JhbEtleSIKCWludGMgMCAvLyBUTVBMX3NvbWVOdW1iZXIKCWFwcF9nbG9iYWxfcHV0CgoJLy8gdGVzdHMvY29udHJhY3RzL2FyYzU2LmFsZ28udHM6MjgKCS8vIHRoaXMuZ2xvYmFsTWFwKCdmb28nKS52YWx1ZSA9IHsgZm9vOiAxMywgYmFyOiAzNyB9CglwdXNoYnl0ZXMgMHg3MDAwMDM2NjZmNmYKCXB1c2hieXRlcyAweDAwMGQwMDI1CglhcHBfZ2xvYmFsX3B1dAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hcmM1Ni5hbGdvLnRzOjMwCgkvLyByZXR1cm4gewoJLy8gICAgICAgc3VtOiBpbnB1dHMuYWRkLmEgKyBpbnB1dHMuYWRkLmIsCgkvLyAgICAgICBkaWZmZXJlbmNlOiBpbnB1dHMuc3VidHJhY3QuYSAtIGlucHV0cy5zdWJ0cmFjdC5iLAoJLy8gICAgIH07CglmcmFtZV9kaWcgLTEgLy8gaW5wdXRzOiBJbnB1dHMKCWV4dHJhY3QgMCA4CglidG9pCglmcmFtZV9kaWcgLTEgLy8gaW5wdXRzOiBJbnB1dHMKCWV4dHJhY3QgOCA4CglidG9pCgkrCglpdG9iCglmcmFtZV9kaWcgLTEgLy8gaW5wdXRzOiBJbnB1dHMKCWV4dHJhY3QgMTYgOAoJYnRvaQoJZnJhbWVfZGlnIC0xIC8vIGlucHV0czogSW5wdXRzCglleHRyYWN0IDI0IDgKCWJ0b2kKCS0KCWl0b2IKCWNvbmNhdAoJcmV0c3ViCgovLyBvcHRJblRvQXBwbGljYXRpb24oKXZvaWQKKmFiaV9yb3V0ZV9vcHRJblRvQXBwbGljYXRpb246CgkvLyBleGVjdXRlIG9wdEluVG9BcHBsaWNhdGlvbigpdm9pZAoJY2FsbHN1YiBvcHRJblRvQXBwbGljYXRpb24KCXB1c2hpbnQgMQoJcmV0dXJuCgovLyBvcHRJblRvQXBwbGljYXRpb24oKTogdm9pZApvcHRJblRvQXBwbGljYXRpb246Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvYXJjNTYuYWxnby50czozNwoJLy8gdGhpcy5sb2NhbEtleSh0aGlzLnR4bi5zZW5kZXIpLnZhbHVlID0gdGhpcy5zb21lTnVtYmVyCgl0eG4gU2VuZGVyCglwdXNoYnl0ZXMgMHg2YzZmNjM2MTZjNGI2NTc5IC8vICJsb2NhbEtleSIKCWludGMgMCAvLyBUTVBMX3NvbWVOdW1iZXIKCWFwcF9sb2NhbF9wdXQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYXJjNTYuYWxnby50czozOAoJLy8gdGhpcy5sb2NhbE1hcCh0aGlzLnR4bi5zZW5kZXIsICdmb28nKS52YWx1ZSA9ICdiYXInCgl0eG4gU2VuZGVyCglwdXNoYnl0ZXMgMHg3MDY2NmY2ZgoJcHVzaGJ5dGVzIDB4MDAwMzYyNjE3MgoJYXBwX2xvY2FsX3B1dAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hcmM1Ni5hbGdvLnRzOjM5CgkvLyB0aGlzLmJveEtleS52YWx1ZSA9ICdiYXonCglieXRlIDB4NjI2Zjc4NGI2NTc5IC8vICJib3hLZXkiCglkdXAKCWJveF9kZWwKCXBvcAoJcHVzaGJ5dGVzIDB4MDAwMzYyNjE3YQoJYm94X3B1dAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hcmM1Ni5hbGdvLnRzOjQwCgkvLyB0aGlzLmJveE1hcCh7IGFkZDogeyBhOiAxLCBiOiAyIH0sIHN1YnRyYWN0OiB7IGE6IDQsIGI6IDMgfSB9KS52YWx1ZSA9IHsgc3VtOiAzLCBkaWZmZXJlbmNlOiAxIH0KCXB1c2hieXRlcyAweDcwMDAwMDAwMDAwMDAwMDAwMTAwMDAwMDAwMDAwMDAwMDIwMDAwMDAwMDAwMDAwMDA0MDAwMDAwMDAwMDAwMDAwMwoJcHVzaGJ5dGVzIDB4MDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDEKCWJveF9wdXQKCXJldHN1YgoKLy8gY3VzdG9tVHlwZSgodWludDY0KSkodWludDY0KQoqYWJpX3JvdXRlX2N1c3RvbVR5cGU6CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCWJ5dGUgMHgxNTFmN2M3NQoKCS8vIGlucHV0OiAodWludDY0KQoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCXB1c2hpbnQgOAoJPT0KCgkvLyBhcmd1bWVudCAwIChpbnB1dCkgZm9yIGN1c3RvbVR5cGUgbXVzdCBiZSBhICh1aW50NjQpCglhc3NlcnQKCgkvLyBleGVjdXRlIGN1c3RvbVR5cGUoKHVpbnQ2NCkpKHVpbnQ2NCkKCWNhbGxzdWIgY3VzdG9tVHlwZQoJY29uY2F0Cglsb2cKCXB1c2hpbnQgMQoJcmV0dXJuCgovLyBjdXN0b21UeXBlKGlucHV0OiBDdXN0b21TdHJ1Y3RBc05hbWUpOiBDdXN0b21TdHJ1Y3RBc05hbWUKY3VzdG9tVHlwZToKCXByb3RvIDEgMQoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hcmM1Ni5hbGdvLnRzOjQ0CgkvLyByZXR1cm4gaW5wdXQ7CglmcmFtZV9kaWcgLTEgLy8gaW5wdXQ6IEN1c3RvbVN0cnVjdEFzTmFtZQoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJcHVzaGludCAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCXB1c2hieXRlcyAweGI4NDQ3YjM2IC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglwdXNoYnl0ZXMgMHg4ZDIyNzM5YSAvLyBtZXRob2QgImN1c3RvbVN0cnVjdE1ldGhvZCgodWludDY0KSkodWludDY0KSIKCXB1c2hieXRlcyAweDM5NmQ1NTBlIC8vIG1ldGhvZCAiZm9vKCgodWludDY0LHVpbnQ2NCksKHVpbnQ2NCx1aW50NjQpKSkodWludDY0LHVpbnQ2NCkiCglwdXNoYnl0ZXMgMHgwZGJmMDJjNyAvLyBtZXRob2QgImN1c3RvbVR5cGUoKHVpbnQ2NCkpKHVpbnQ2NCkiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2N1c3RvbVN0cnVjdE1ldGhvZCAqYWJpX3JvdXRlX2ZvbyAqYWJpX3JvdXRlX2N1c3RvbVR5cGUKCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY2FsbCBOb09wCgllcnIKCipjYWxsX09wdEluOgoJcHVzaGJ5dGVzIDB4MDFhM2EzZmYgLy8gbWV0aG9kICJvcHRJblRvQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX29wdEluVG9BcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE9wdEluCgllcnI=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "templateVariables": {
    "someNumber": {
      "type": "uint64"
    }
  },
  "scratchVariables": {
    "someNumber": {
      "type": "uint64",
      "slot": 200
    },
    "someScratch": {
      "type": "string",
      "slot": 77
    }
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}