{
  "name": "ABITestStoragePropertyReferenceInBox",
  "desc": "",
  "methods": [
    {
      "name": "storagePropertyReferenceInBox",
      "args": [],
      "returns": {
        "type": "uint64"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "{ foo: Address; bar: { baz: uint64 } }": [
      {
        "name": "foo",
        "type": "address"
      },
      {
        "name": "bar",
        "type": [
          {
            "name": "baz",
            "type": "uint64"
          }
        ]
      }
    ]
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {
        "bMap": {
          "keyType": "string",
          "valueType": "{ foo: Address; bar: { baz: uint64 } }"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:1540",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:1540",
          "pc": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/abi.algo.ts:1540",
          "pc": [
            10,
            11
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:1540",
          "pc": [
            12
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:1540",
          "pc": [
            13,
            14
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:1540",
          "pc": [
            15
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:1540",
          "pc": [
            16,
            17
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:1540",
          "pc": [
            18
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:1540",
          "pc": [
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/abi.algo.ts:1540",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            45
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/abi.algo.ts:1543",
          "pc": [
            46,
            47,
            48,
            49,
            50,
            51
          ]
        },
        {
          "teal": 32,
          "source": "tests/contracts/abi.algo.ts:1543",
          "pc": [
            52,
            53,
            54
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/abi.algo.ts:1543",
          "pc": [
            55
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:1543",
          "pc": [
            56
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:1543",
          "pc": [
            57
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/abi.algo.ts:1543",
          "pc": [
            58,
            59
          ]
        },
        {
          "teal": 37,
          "source": "tests/contracts/abi.algo.ts:1543",
          "pc": [
            60
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/abi.algo.ts:1543",
          "pc": [
            61,
            62,
            63
          ]
        },
        {
          "teal": 44,
          "source": "tests/contracts/abi.algo.ts:1543",
          "pc": [
            64,
            65
          ]
        },
        {
          "teal": 48,
          "source": "tests/contracts/abi.algo.ts:1544",
          "pc": [
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/abi.algo.ts:1544",
          "pc": [
            74,
            75
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/abi.algo.ts:1544",
          "pc": [
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/abi.algo.ts:1544",
          "pc": [
            86
          ]
        },
        {
          "teal": 52,
          "source": "tests/contracts/abi.algo.ts:1544",
          "pc": [
            87
          ]
        },
        {
          "teal": 56,
          "source": "tests/contracts/abi.algo.ts:1545",
          "pc": [
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95
          ]
        },
        {
          "teal": 57,
          "source": "tests/contracts/abi.algo.ts:1545",
          "pc": [
            96,
            97
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/abi.algo.ts:1545",
          "pc": [
            98,
            99
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/abi.algo.ts:1545",
          "pc": [
            100
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/abi.algo.ts:1545",
          "pc": [
            101
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/abi.algo.ts:1545",
          "pc": [
            102,
            103
          ]
        },
        {
          "teal": 65,
          "source": "tests/contracts/abi.algo.ts:1546",
          "pc": [
            104,
            105
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/abi.algo.ts:1543",
          "pc": [
            106,
            107
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:1543",
          "pc": [
            108
          ]
        },
        {
          "teal": 72,
          "source": "tests/contracts/abi.algo.ts:1540",
          "pc": [
            109,
            110
          ]
        },
        {
          "teal": 73,
          "source": "tests/contracts/abi.algo.ts:1540",
          "pc": [
            111
          ]
        },
        {
          "teal": 76,
          "source": "tests/contracts/abi.algo.ts:1540",
          "pc": [
            112,
            113,
            114,
            115,
            116,
            117
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/abi.algo.ts:1540",
          "pc": [
            118,
            119,
            120
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/abi.algo.ts:1540",
          "pc": [
            121,
            122,
            123,
            124
          ]
        },
        {
          "teal": 81,
          "source": "tests/contracts/abi.algo.ts:1540",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            125
          ]
        },
        {
          "teal": 84,
          "source": "tests/contracts/abi.algo.ts:1540",
          "pc": [
            126,
            127,
            128,
            129,
            130,
            131
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/abi.algo.ts:1540",
          "pc": [
            132,
            133,
            134
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/abi.algo.ts:1540",
          "pc": [
            135,
            136,
            137,
            138
          ]
        },
        {
          "teal": 89,
          "source": "tests/contracts/abi.algo.ts:1540",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            139
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmJ5dGVjYmxvY2sgMHgwMDA0NjI0ZDYxNzAKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuMTA0LjEKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCnB1c2hpbnQgNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyBzdG9yYWdlUHJvcGVydHlSZWZlcmVuY2VJbkJveCgpdWludDY0CiphYmlfcm91dGVfc3RvcmFnZVByb3BlcnR5UmVmZXJlbmNlSW5Cb3g6CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCXB1c2hieXRlcyAweDE1MWY3Yzc1CgoJLy8gZXhlY3V0ZSBzdG9yYWdlUHJvcGVydHlSZWZlcmVuY2VJbkJveCgpdWludDY0CgljYWxsc3ViIHN0b3JhZ2VQcm9wZXJ0eVJlZmVyZW5jZUluQm94CglpdG9iCgljb25jYXQKCWxvZwoJcHVzaGludCAxCglyZXR1cm4KCi8vIHN0b3JhZ2VQcm9wZXJ0eVJlZmVyZW5jZUluQm94KCk6IHVpbnQ2NApzdG9yYWdlUHJvcGVydHlSZWZlcmVuY2VJbkJveDoKCXByb3RvIDAgMQoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglwdXNoYnl0ZXMgMHgKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTU0NAoJLy8gdGhpcy5iTWFwKCdiTWFwJykudmFsdWUgPSB7IGZvbzogdGhpcy50eG4uc2VuZGVyLCBiYXI6IHsgYmF6OiAxMzM3IH0gfQoJYnl0ZSAweDAwMDQ2MjRkNjE3MAoJdHhuIFNlbmRlcgoJcHVzaGJ5dGVzIDB4MDAwMDAwMDAwMDAwMDUzOQoJY29uY2F0Cglib3hfcHV0CgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjE1NDUKCS8vIHYgPSB0aGlzLmJNYXAoJ2JNYXAnKS52YWx1ZS5iYXIuYmF6CglieXRlIDB4MDAwNDYyNGQ2MTcwCglwdXNoaW50IDMyCglwdXNoaW50IDgKCWJveF9leHRyYWN0CglidG9pCglmcmFtZV9idXJ5IDAgLy8gdjogdWludDY0CgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjE1NDYKCS8vIHJldHVybiB2OwoJZnJhbWVfZGlnIDAgLy8gdjogdWludDY0CgoJLy8gc2V0IHRoZSBzdWJyb3V0aW5lIHJldHVybiB2YWx1ZQoJZnJhbWVfYnVyeSAwCglyZXRzdWIKCiphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CglwdXNoaW50IDEKCXJldHVybgoKKmNyZWF0ZV9Ob09wOgoJcHVzaGJ5dGVzIDB4Yjg0NDdiMzYgLy8gbWV0aG9kICJjcmVhdGVBcHBsaWNhdGlvbigpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb24KCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY3JlYXRlIE5vT3AKCWVycgoKKmNhbGxfTm9PcDoKCXB1c2hieXRlcyAweDU0YTg1OGViIC8vIG1ldGhvZCAic3RvcmFnZVByb3BlcnR5UmVmZXJlbmNlSW5Cb3goKXVpbnQ2NCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfc3RvcmFnZVByb3BlcnR5UmVmZXJlbmNlSW5Cb3gKCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY2FsbCBOb09wCgllcnI=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiYBBgAEYk1hcDEYFIEGCzEZCI0MAFEAAAAAAAAAAAAAAEMAAAAAAAAAAAAAAIAEFR98dYgABhZQsIEBQ4oAAYAAgAYABGJNYXAxAIAIAAAAAAAABTlQv4AGAARiTWFwgSCBCLoXjACLAIwAiYEBQ4AEuER7NjYaAI4B//AAgARUqFjrNhoAjgH/owA=",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}