{
  "name": "ABITestObjectArrayRef",
  "desc": "",
  "methods": [
    {
      "name": "objectArrayRef",
      "args": [],
      "returns": {
        "type": "(uint8[2][2])",
        "struct": "ObjectRefType"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "ObjectRefType": [
      {
        "name": "foo",
        "type": "uint8[2][2]"
      }
    ]
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:815",
          "pc": [
            0
          ]
        },
        {
          "teal": 13,
          "source": "tests/contracts/abi.algo.ts:815",
          "pc": [
            1,
            2
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/abi.algo.ts:815",
          "pc": [
            3
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:815",
          "pc": [
            4,
            5
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:815",
          "pc": [
            6
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:815",
          "pc": [
            7,
            8
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:815",
          "pc": [
            9
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:815",
          "pc": [
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35
          ]
        },
        {
          "teal": 23,
          "source": "tests/contracts/abi.algo.ts:815",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            36
          ]
        },
        {
          "teal": 28,
          "source": "tests/contracts/abi.algo.ts:816",
          "pc": [
            37,
            38,
            39,
            40,
            41,
            42
          ]
        },
        {
          "teal": 31,
          "source": "tests/contracts/abi.algo.ts:816",
          "pc": [
            43,
            44,
            45
          ]
        },
        {
          "teal": 32,
          "source": "tests/contracts/abi.algo.ts:816",
          "pc": [
            46
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/abi.algo.ts:816",
          "pc": [
            47
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:816",
          "pc": [
            48,
            49
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:816",
          "pc": [
            50
          ]
        },
        {
          "teal": 39,
          "source": "tests/contracts/abi.algo.ts:816",
          "pc": [
            51,
            52,
            53
          ]
        },
        {
          "teal": 42,
          "source": "tests/contracts/abi.algo.ts:816",
          "pc": [
            54,
            55
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/abi.algo.ts:818",
          "pc": [
            56,
            57,
            58,
            59,
            60,
            61
          ]
        },
        {
          "teal": 52,
          "source": "tests/contracts/abi.algo.ts:817",
          "pc": [
            62,
            63
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/abi.algo.ts:826",
          "pc": [
            64,
            65
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/abi.algo.ts:826",
          "pc": [
            66,
            67,
            68
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/abi.algo.ts:826",
          "pc": [
            69,
            70
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/abi.algo.ts:826",
          "pc": [
            71,
            72
          ]
        },
        {
          "teal": 65,
          "source": "tests/contracts/abi.algo.ts:828",
          "pc": [
            73,
            74
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/abi.algo.ts:816",
          "pc": [
            75,
            76
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:816",
          "pc": [
            77
          ]
        },
        {
          "teal": 72,
          "source": "tests/contracts/abi.algo.ts:815",
          "pc": [
            78,
            79
          ]
        },
        {
          "teal": 73,
          "source": "tests/contracts/abi.algo.ts:815",
          "pc": [
            80
          ]
        },
        {
          "teal": 76,
          "source": "tests/contracts/abi.algo.ts:815",
          "pc": [
            81,
            82,
            83,
            84,
            85,
            86
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/abi.algo.ts:815",
          "pc": [
            87,
            88,
            89
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/abi.algo.ts:815",
          "pc": [
            90,
            91,
            92,
            93
          ]
        },
        {
          "teal": 81,
          "source": "tests/contracts/abi.algo.ts:815",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            94
          ]
        },
        {
          "teal": 84,
          "source": "tests/contracts/abi.algo.ts:815",
          "pc": [
            95,
            96,
            97,
            98,
            99,
            100
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/abi.algo.ts:815",
          "pc": [
            101,
            102,
            103
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/abi.algo.ts:815",
          "pc": [
            104,
            105,
            106,
            107
          ]
        },
        {
          "teal": 89,
          "source": "tests/contracts/abi.algo.ts:815",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            108
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwNC4xCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQpwdXNoaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gb2JqZWN0QXJyYXlSZWYoKSh1aW50OFsyXVsyXSkKKmFiaV9yb3V0ZV9vYmplY3RBcnJheVJlZjoKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJcHVzaGJ5dGVzIDB4MTUxZjdjNzUKCgkvLyBleGVjdXRlIG9iamVjdEFycmF5UmVmKCkodWludDhbMl1bMl0pCgljYWxsc3ViIG9iamVjdEFycmF5UmVmCgljb25jYXQKCWxvZwoJcHVzaGludCAxCglyZXR1cm4KCi8vIG9iamVjdEFycmF5UmVmKCk6IE9iamVjdFJlZlR5cGUKb2JqZWN0QXJyYXlSZWY6Cglwcm90byAwIDEKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJcHVzaGJ5dGVzIDB4CgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjgxNwoJLy8gYTogT2JqZWN0UmVmVHlwZSA9IHsKCS8vICAgICAgIGZvbzogWwoJLy8gICAgICAgICBbMSwgMl0sCgkvLyAgICAgICAgIFszLCA0XSwKCS8vICAgICAgIF0sCgkvLyAgICAgfQoJcHVzaGJ5dGVzIDB4MDEwMjAzMDQKCWZyYW1lX2J1cnkgMCAvLyBhOiBPYmplY3RSZWZUeXBlCgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjgyNAoJLy8gYyA9IGJbMV0KCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czo4MjYKCS8vIGNbMV0gPSA1IGFzIHVpbnQ8OD4KCWZyYW1lX2RpZyAwIC8vIGE6IE9iamVjdFJlZlR5cGUKCXB1c2hieXRlcyAweDA1CglyZXBsYWNlMiAzCglmcmFtZV9idXJ5IDAgLy8gYzogT2JqZWN0UmVmVHlwZQoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czo4MjgKCS8vIHJldHVybiBhOwoJZnJhbWVfZGlnIDAgLy8gYTogT2JqZWN0UmVmVHlwZQoKCS8vIHNldCB0aGUgc3Vicm91dGluZSByZXR1cm4gdmFsdWUKCWZyYW1lX2J1cnkgMAoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJcHVzaGludCAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCXB1c2hieXRlcyAweGI4NDQ3YjM2IC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglwdXNoYnl0ZXMgMHg1NDViNDAxNiAvLyBtZXRob2QgIm9iamVjdEFycmF5UmVmKCkodWludDhbMl1bMl0pIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9vYmplY3RBcnJheVJlZgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CjEYFIEGCzEZCI0MADsAAAAAAAAAAAAAAC0AAAAAAAAAAAAAAIAEFR98dYgABVCwgQFDigABgACABAECAwSMAIsAgAEFXAOMAIsAjACJgQFDgAS4RHs2NhoAjgH/8ACABFRbQBY2GgCOAf+5AA==",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}