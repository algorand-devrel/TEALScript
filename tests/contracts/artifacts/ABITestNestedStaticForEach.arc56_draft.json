{
  "name": "ABITestNestedStaticForEach",
  "desc": "",
  "methods": [
    {
      "name": "nestedStaticForEach",
      "args": [],
      "returns": {
        "type": "uint64"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": [
      {
        "teal": 1,
        "source": 1318,
        "pc": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      },
      {
        "teal": 13,
        "source": 1318,
        "pc": [
          6,
          7
        ]
      },
      {
        "teal": 14,
        "source": 1318,
        "pc": [
          8
        ]
      },
      {
        "teal": 15,
        "source": 1318,
        "pc": [
          9,
          10
        ]
      },
      {
        "teal": 16,
        "source": 1318,
        "pc": [
          11
        ]
      },
      {
        "teal": 17,
        "source": 1318,
        "pc": [
          12,
          13
        ]
      },
      {
        "teal": 18,
        "source": 1318,
        "pc": [
          14
        ]
      },
      {
        "teal": 19,
        "source": 1318,
        "pc": [
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40
        ]
      },
      {
        "teal": 23,
        "source": 1318,
        "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
        "pc": [
          41
        ]
      },
      {
        "teal": 28,
        "source": 1319,
        "pc": [
          42,
          43,
          44,
          45,
          46,
          47
        ]
      },
      {
        "teal": 31,
        "source": 1319,
        "pc": [
          48,
          49,
          50
        ]
      },
      {
        "teal": 32,
        "source": 1319,
        "pc": [
          51
        ]
      },
      {
        "teal": 33,
        "source": 1319,
        "pc": [
          52
        ]
      },
      {
        "teal": 34,
        "source": 1319,
        "pc": [
          53
        ]
      },
      {
        "teal": 35,
        "source": 1319,
        "pc": [
          54
        ]
      },
      {
        "teal": 36,
        "source": 1319,
        "pc": [
          55
        ]
      },
      {
        "teal": 40,
        "source": 1319,
        "pc": [
          56,
          57,
          58
        ]
      },
      {
        "teal": 43,
        "source": 1319,
        "pc": [
          59,
          60
        ]
      },
      {
        "teal": 44,
        "source": 1319,
        "pc": [
          61,
          62
        ]
      },
      {
        "teal": 52,
        "source": 1320,
        "pc": [
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          91,
          92,
          93,
          94,
          95,
          96,
          97,
          98,
          99,
          100,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110,
          111,
          112,
          113,
          114,
          115,
          116,
          117,
          118,
          119,
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136
        ]
      },
      {
        "teal": 53,
        "source": 1320,
        "pc": [
          137,
          138
        ]
      },
      {
        "teal": 57,
        "source": 1325,
        "pc": [
          139
        ]
      },
      {
        "teal": 58,
        "source": 1325,
        "pc": [
          140,
          141
        ]
      },
      {
        "teal": 62,
        "source": 1327,
        "pc": [
          142,
          143
        ]
      },
      {
        "teal": 63,
        "source": 1327,
        "pc": [
          144,
          145,
          146
        ]
      },
      {
        "teal": 64,
        "source": 1327,
        "pc": [
          147
        ]
      },
      {
        "teal": 65,
        "source": 1327,
        "pc": [
          148,
          149
        ]
      },
      {
        "teal": 66,
        "source": 1327,
        "pc": [
          150,
          151,
          152
        ]
      },
      {
        "teal": 67,
        "source": 1327,
        "pc": [
          153
        ]
      },
      {
        "teal": 68,
        "source": 1327,
        "pc": [
          154,
          155
        ]
      },
      {
        "teal": 69,
        "source": 1327,
        "pc": [
          156
        ]
      },
      {
        "teal": 70,
        "source": 1327,
        "pc": [
          157,
          158
        ]
      },
      {
        "teal": 75,
        "source": 1328,
        "pc": [
          159,
          160
        ]
      },
      {
        "teal": 76,
        "source": 1328,
        "pc": [
          161,
          162
        ]
      },
      {
        "teal": 77,
        "source": 1328,
        "pc": [
          163
        ]
      },
      {
        "teal": 78,
        "source": 1328,
        "pc": [
          164,
          165
        ]
      },
      {
        "teal": 81,
        "source": 1327,
        "pc": [
          166,
          167
        ]
      },
      {
        "teal": 82,
        "source": 1327,
        "pc": [
          168
        ]
      },
      {
        "teal": 83,
        "source": 1327,
        "pc": [
          169
        ]
      },
      {
        "teal": 84,
        "source": 1327,
        "pc": [
          170
        ]
      },
      {
        "teal": 85,
        "source": 1327,
        "pc": [
          171,
          172
        ]
      },
      {
        "teal": 86,
        "source": 1327,
        "pc": [
          173
        ]
      },
      {
        "teal": 87,
        "source": 1327,
        "pc": [
          174,
          175,
          176
        ]
      },
      {
        "teal": 88,
        "source": 1327,
        "pc": [
          177,
          178
        ]
      },
      {
        "teal": 89,
        "source": 1327,
        "pc": [
          179,
          180
        ]
      },
      {
        "teal": 90,
        "source": 1327,
        "pc": [
          181,
          182
        ]
      },
      {
        "teal": 91,
        "source": 1327,
        "pc": [
          183
        ]
      },
      {
        "teal": 92,
        "source": 1327,
        "pc": [
          184
        ]
      },
      {
        "teal": 93,
        "source": 1327,
        "pc": [
          185
        ]
      },
      {
        "teal": 94,
        "source": 1327,
        "pc": [
          186,
          187
        ]
      },
      {
        "teal": 95,
        "source": 1327,
        "pc": [
          188,
          189,
          190
        ]
      },
      {
        "teal": 100,
        "source": 1331,
        "pc": [
          191,
          192
        ]
      },
      {
        "teal": 103,
        "source": 1319,
        "pc": [
          193,
          194
        ]
      },
      {
        "teal": 106,
        "source": 1319,
        "pc": [
          195,
          196
        ]
      },
      {
        "teal": 107,
        "source": 1319,
        "pc": [
          197
        ]
      },
      {
        "teal": 110,
        "source": 1318,
        "pc": [
          198
        ]
      },
      {
        "teal": 111,
        "source": 1318,
        "pc": [
          199
        ]
      },
      {
        "teal": 114,
        "source": 1318,
        "pc": [
          200,
          201,
          202,
          203,
          204,
          205
        ]
      },
      {
        "teal": 115,
        "source": 1318,
        "pc": [
          206,
          207,
          208
        ]
      },
      {
        "teal": 116,
        "source": 1318,
        "pc": [
          209,
          210,
          211,
          212
        ]
      },
      {
        "teal": 119,
        "source": 1318,
        "errorMessage": "this contract does not implement the given ABI method for create NoOp",
        "pc": [
          213
        ]
      },
      {
        "teal": 122,
        "source": 1318,
        "pc": [
          214,
          215,
          216,
          217,
          218,
          219
        ]
      },
      {
        "teal": 123,
        "source": 1318,
        "pc": [
          220,
          221,
          222
        ]
      },
      {
        "teal": 124,
        "source": 1318,
        "pc": [
          223,
          224,
          225,
          226
        ]
      },
      {
        "teal": 127,
        "source": 1318,
        "errorMessage": "this contract does not implement the given ABI method for call NoOp",
        "pc": [
          227
        ]
      }
    ],
    "clear": []
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwMy4xCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQppbnQgNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyBuZXN0ZWRTdGF0aWNGb3JFYWNoKCl1aW50NjQKKmFiaV9yb3V0ZV9uZXN0ZWRTdGF0aWNGb3JFYWNoOgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglieXRlIDB4MTUxZjdjNzUKCgkvLyBleGVjdXRlIG5lc3RlZFN0YXRpY0ZvckVhY2goKXVpbnQ2NAoJY2FsbHN1YiBuZXN0ZWRTdGF0aWNGb3JFYWNoCglpdG9iCgljb25jYXQKCWxvZwoJaW50IDEKCXJldHVybgoKLy8gbmVzdGVkU3RhdGljRm9yRWFjaCgpOiB1aW50NjQKbmVzdGVkU3RhdGljRm9yRWFjaDoKCXByb3RvIDAgMQoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlIDB4CglkdXBuIDQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTMyMAoJLy8gYTogU3RhdGljQXJyYXk8U3RhdGljQXJyYXk8dWludDY0LCAzPiwgMz4gPSBbCgkvLyAgICAgICBbMSwgMiwgM10sCgkvLyAgICAgICBbNCwgNSwgNl0sCgkvLyAgICAgICBbNywgOCwgOV0sCgkvLyAgICAgXQoJYnl0ZSAweDAwMDAwMDAwMDAwMDAwMDEwMDAwMDAwMDAwMDAwMDAyMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDQwMDAwMDAwMDAwMDAwMDA1MDAwMDAwMDAwMDAwMDAwNjAwMDAwMDAwMDAwMDAwMDcwMDAwMDAwMDAwMDAwMDA4MDAwMDAwMDAwMDAwMDAwOQoJZnJhbWVfYnVyeSAwIC8vIGE6IFN0YXRpY0FycmF5PFN0YXRpY0FycmF5PHVpbnQ2NCwgMz4sIDM+CgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjEzMjUKCS8vIHN1bSA9IDAKCWludCAwCglmcmFtZV9idXJ5IDEgLy8gc3VtOiB1aW50NjQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTMyNwoJLy8gYVsxXS5mb3JFYWNoCglmcmFtZV9kaWcgMCAvLyBhOiBTdGF0aWNBcnJheTxTdGF0aWNBcnJheTx1aW50NjQsIDM+LCAzPgoJZXh0cmFjdCAyNCAyNAoJZHVwCglmcmFtZV9idXJ5IDIgLy8gY29weSBvZiB0aGUgYXJyYXkgd2UgYXJlIGl0ZXJhdGluZyBvdmVyCglleHRyYWN0IDAgOAoJYnRvaQoJZnJhbWVfYnVyeSAzIC8vIHY6IHVpbnQ2NAoJaW50IDAKCWZyYW1lX2J1cnkgNCAvLyB0aGUgb2Zmc2V0IHdlIGFyZSBleHRyYWN0aW5nIHRoZSBuZXh0IGVsZW1lbnQgZnJvbQoKKmZvckVhY2hfMDoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czoxMzI4CgkvLyBzdW0gKz0gdgoJZnJhbWVfZGlnIDEgLy8gc3VtOiB1aW50NjQKCWZyYW1lX2RpZyAzIC8vIHY6IHVpbnQ2NAoJKwoJZnJhbWVfYnVyeSAxIC8vIHN1bTogdWludDY0CgoJLy8gaW5jcmVtZW50IG9mZnNldCBhbmQgbG9vcCBpZiBub3Qgb3V0IG9mIGJvdW5kcwoJZnJhbWVfZGlnIDQgLy8gdGhlIG9mZnNldCB3ZSBhcmUgZXh0cmFjdGluZyB0aGUgbmV4dCBlbGVtZW50IGZyb20KCWludCA4CgkrCglkdXAKCWludCAyNCAvLyBvZmZzZXQgb2YgbGFzdCBlbGVtZW50Cgk8CglieiAqZm9yRWFjaF8wX2VuZAoJZnJhbWVfYnVyeSA0IC8vIHRoZSBvZmZzZXQgd2UgYXJlIGV4dHJhY3RpbmcgdGhlIG5leHQgZWxlbWVudCBmcm9tCglmcmFtZV9kaWcgMiAvLyBjb3B5IG9mIHRoZSBhcnJheSB3ZSBhcmUgaXRlcmF0aW5nIG92ZXIKCWZyYW1lX2RpZyA0IC8vIHRoZSBvZmZzZXQgd2UgYXJlIGV4dHJhY3RpbmcgdGhlIG5leHQgZWxlbWVudCBmcm9tCglpbnQgOAoJZXh0cmFjdAoJYnRvaQoJZnJhbWVfYnVyeSAzIC8vIHY6IHVpbnQ2NAoJYiAqZm9yRWFjaF8wCgoqZm9yRWFjaF8wX2VuZDoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czoxMzMxCgkvLyByZXR1cm4gc3VtOwoJZnJhbWVfZGlnIDEgLy8gc3VtOiB1aW50NjQKCgkvLyBzZXQgdGhlIHN1YnJvdXRpbmUgcmV0dXJuIHZhbHVlCglmcmFtZV9idXJ5IDAKCgkvLyBwb3AgYWxsIGxvY2FsIHZhcmlhYmxlcyBmcm9tIHRoZSBzdGFjawoJcG9wbiA0CglyZXRzdWIKCiphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CglpbnQgMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CgltZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJbWV0aG9kICJuZXN0ZWRTdGF0aWNGb3JFYWNoKCl1aW50NjQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX25lc3RlZFN0YXRpY0ZvckVhY2gKCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY2FsbCBOb09wCgllcnI=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiADAQAIMRgUgQYLMRkIjQwArQAAAAAAAAAAAAAAnwAAAAAAAAAAAAAAgAQVH3x1iAAFFlCwIkOKAAGAAEcEgEgAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAmMACOMAYsAVxgYSYwCVwAIF4wDI4wEiwGLAwiMAYsEJAhJgRgMQQAOjASLAosEJFgXjANC/+CLAYwARgSJIkOABLhEezY2GgCOAf/xAIAEZbGSHTYaAI4B/0cA",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}