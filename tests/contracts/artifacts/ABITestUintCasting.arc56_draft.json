{
  "name": "ABITestUintCasting",
  "desc": "",
  "methods": [
    {
      "name": "uintCasting",
      "args": [
        {
          "name": "a",
          "type": "uint8"
        }
      ],
      "returns": {
        "type": "uint256"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": [
    {
      "teal": 1,
      "source": 1187,
      "pc": [
        0,
        1,
        2,
        3
      ]
    },
    {
      "teal": 13,
      "source": 1187,
      "pc": [
        4,
        5
      ]
    },
    {
      "teal": 14,
      "source": 1187,
      "pc": [
        6
      ]
    },
    {
      "teal": 15,
      "source": 1187,
      "pc": [
        7,
        8
      ]
    },
    {
      "teal": 16,
      "source": 1187,
      "pc": [
        9
      ]
    },
    {
      "teal": 17,
      "source": 1187,
      "pc": [
        10,
        11
      ]
    },
    {
      "teal": 18,
      "source": 1187,
      "pc": [
        12
      ]
    },
    {
      "teal": 19,
      "source": 1187,
      "pc": [
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38
      ]
    },
    {
      "teal": 23,
      "source": 1187,
      "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "pc": [
        39
      ]
    },
    {
      "teal": 28,
      "source": 1188,
      "pc": [
        40,
        41,
        42,
        43,
        44,
        45
      ]
    },
    {
      "teal": 31,
      "source": 1188,
      "pc": [
        46,
        47,
        48
      ]
    },
    {
      "teal": 32,
      "source": 1188,
      "pc": [
        49
      ]
    },
    {
      "teal": 33,
      "source": 1188,
      "pc": [
        50
      ]
    },
    {
      "teal": 34,
      "source": 1188,
      "pc": [
        51
      ]
    },
    {
      "teal": 35,
      "source": 1188,
      "pc": [
        52
      ]
    },
    {
      "teal": 38,
      "source": 1188,
      "errorMessage": "argument 0 (a) for uintCasting must be a uint8",
      "pc": [
        53
      ]
    },
    {
      "teal": 39,
      "source": 1188,
      "pc": [
        54
      ]
    },
    {
      "teal": 42,
      "source": 1188,
      "pc": [
        55,
        56,
        57
      ]
    },
    {
      "teal": 43,
      "source": 1188,
      "pc": [
        58
      ]
    },
    {
      "teal": 44,
      "source": 1188,
      "pc": [
        59
      ]
    },
    {
      "teal": 45,
      "source": 1188,
      "pc": [
        60,
        61,
        62
      ]
    },
    {
      "teal": 46,
      "source": 1188,
      "pc": [
        63
      ]
    },
    {
      "teal": 49,
      "source": 1188,
      "errorMessage": "uintCasting return value overflowed 256 bits",
      "pc": [
        64
      ]
    },
    {
      "teal": 50,
      "source": 1188,
      "pc": [
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98
      ]
    },
    {
      "teal": 51,
      "source": 1188,
      "pc": [
        99
      ]
    },
    {
      "teal": 52,
      "source": 1188,
      "pc": [
        100
      ]
    },
    {
      "teal": 53,
      "source": 1188,
      "pc": [
        101
      ]
    },
    {
      "teal": 54,
      "source": 1188,
      "pc": [
        102
      ]
    },
    {
      "teal": 55,
      "source": 1188,
      "pc": [
        103,
        104
      ]
    },
    {
      "teal": 56,
      "source": 1188,
      "pc": [
        105
      ]
    },
    {
      "teal": 57,
      "source": 1188,
      "pc": [
        106
      ]
    },
    {
      "teal": 58,
      "source": 1188,
      "pc": [
        107
      ]
    },
    {
      "teal": 59,
      "source": 1188,
      "pc": [
        108
      ]
    },
    {
      "teal": 60,
      "source": 1188,
      "pc": [
        109
      ]
    },
    {
      "teal": 61,
      "source": 1188,
      "pc": [
        110
      ]
    },
    {
      "teal": 62,
      "source": 1188,
      "pc": [
        111
      ]
    },
    {
      "teal": 66,
      "source": 1188,
      "pc": [
        112,
        113,
        114
      ]
    },
    {
      "teal": 70,
      "source": 1189,
      "pc": [
        115,
        116
      ]
    },
    {
      "teal": 71,
      "source": 1189,
      "pc": [
        117
      ]
    },
    {
      "teal": 72,
      "source": 1188,
      "pc": [
        118
      ]
    },
    {
      "teal": 75,
      "source": 1187,
      "pc": [
        119
      ]
    },
    {
      "teal": 76,
      "source": 1187,
      "pc": [
        120
      ]
    },
    {
      "teal": 79,
      "source": 1187,
      "pc": [
        121,
        122,
        123,
        124,
        125,
        126
      ]
    },
    {
      "teal": 80,
      "source": 1187,
      "pc": [
        127,
        128,
        129
      ]
    },
    {
      "teal": 81,
      "source": 1187,
      "pc": [
        130,
        131,
        132,
        133
      ]
    },
    {
      "teal": 84,
      "source": 1187,
      "errorMessage": "this contract does not implement the given ABI method for create NoOp",
      "pc": [
        134
      ]
    },
    {
      "teal": 87,
      "source": 1187,
      "pc": [
        135,
        136,
        137,
        138,
        139,
        140
      ]
    },
    {
      "teal": 88,
      "source": 1187,
      "pc": [
        141,
        142,
        143
      ]
    },
    {
      "teal": 89,
      "source": 1187,
      "pc": [
        144,
        145,
        146,
        147
      ]
    },
    {
      "teal": 92,
      "source": 1187,
      "errorMessage": "this contract does not implement the given ABI method for call NoOp",
      "pc": [
        148
      ]
    }
  ],
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwMC4yCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQppbnQgNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyB1aW50Q2FzdGluZyh1aW50OCl1aW50MjU2CiphYmlfcm91dGVfdWludENhc3Rpbmc6CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCWJ5dGUgMHgxNTFmN2M3NQoKCS8vIGE6IHVpbnQ4Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDEKCT09CgoJLy8gYXJndW1lbnQgMCAoYSkgZm9yIHVpbnRDYXN0aW5nIG11c3QgYmUgYSB1aW50OAoJYXNzZXJ0CglidG9pCgoJLy8gZXhlY3V0ZSB1aW50Q2FzdGluZyh1aW50OCl1aW50MjU2CgljYWxsc3ViIHVpbnRDYXN0aW5nCglkdXAKCWJpdGxlbgoJaW50IDI1NgoJPD0KCgkvLyB1aW50Q2FzdGluZyByZXR1cm4gdmFsdWUgb3ZlcmZsb3dlZCAyNTYgYml0cwoJYXNzZXJ0CglieXRlIDB4RkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRgoJYiYKCWR1cAoJbGVuCglkdXAKCWludCAzMgoJLQoJc3dhcAoJc3Vic3RyaW5nMwoJY29uY2F0Cglsb2cKCWludCAxCglyZXR1cm4KCi8vIHVpbnRDYXN0aW5nKGE6IHVpbnQ8OD4pOiB1aW50MjU2CnVpbnRDYXN0aW5nOgoJcHJvdG8gMSAxCgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjExODkKCS8vIHJldHVybiA8dWludDI1Nj5hOwoJZnJhbWVfZGlnIC0xIC8vIGE6IHVpbnQ8OD4KCWl0b2IKCXJldHN1YgoKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCWludCAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCW1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CgltZXRob2QgInVpbnRDYXN0aW5nKHVpbnQ4KXVpbnQyNTYiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX3VpbnRDYXN0aW5nCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoJZXJy",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiABATEYFIEGCzEZCI0MAGAAAAAAAAAAAAAAAFIAAAAAAAAAAAAAAIAEFR98dTYaAUkVIhJEF4gANkmTgYACDkSAIP//////////////////////////////////////////rEkVSYEgCUxSULAiQ4oBAYv/FokiQ4AEuER7NjYaAI4B//EAgAT1K/hmNhoAjgH/lAA=",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 25,
      "patch": 0,
      "commitHash": "9855f57c"
    }
  }
}