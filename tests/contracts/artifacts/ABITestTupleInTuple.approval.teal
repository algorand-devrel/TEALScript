#pragma version 9

// This TEAL was generated by TEALScript v0.44.0
// https://github.com/algorand-devrel/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its repsective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

// tupleInTuple()uint64
abi_route_tupleInTuple:
	byte 0x // push empty bytes to fill the stack frame for this subroutine's local variables

	// execute tupleInTuple()uint64
	callsub tupleInTuple
	int 1
	return

tupleInTuple:
	proto 1 0

	// tests/contracts/abi.algo.ts:274
	// a: [uint<16>, uint<16>, [uint64, uint<16>], [uint<16>, uint64]] = [
	//       11, 22, [33, 44], [55, 66],
	//     ]
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x0018 // initial head offset
	byte 0x000b
	callsub process_static_tuple_element
	byte 0x0016
	callsub process_static_tuple_element
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x000a // initial head offset
	int 33
	itob
	callsub process_static_tuple_element
	byte 0x002c
	callsub process_static_tuple_element
	pop // pop head offset
	concat // concat head and tail
	callsub process_static_tuple_element
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x000a // initial head offset
	byte 0x0037
	callsub process_static_tuple_element
	int 66
	itob
	callsub process_static_tuple_element
	pop // pop head offset
	concat // concat head and tail
	callsub process_static_tuple_element
	pop // pop head offset
	concat // concat head and tail
	frame_bury -1 // a: [uint16,uint16,[uint64,uint16],[uint16,uint64]]

	// tests/contracts/abi.algo.ts:278
	// return a[3][1];
	frame_dig -1 // a: [uint16,uint16,[uint64,uint16],[uint16,uint64]]
	store 0 // full array
	int 0 // initial offset
	int 14 // headOffset
	+
	int 2 // headOffset
	+
	load 0 // full array
	swap
	int 8
	extract3
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_createApplication:
	int 1
	return

create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "tupleInTuple()uint64"
	txna ApplicationArgs 0
	match abi_route_tupleInTuple
	err

process_static_tuple_element:
	proto 4 3
	frame_dig -4 // tuple head
	frame_dig -1 // element
	concat
	frame_dig -3 // tuple tail
	frame_dig -2 // head offset
	retsub