{
  "name": "ABITestAngularCasting",
  "desc": "",
  "methods": [
    {
      "name": "angularCasting",
      "args": [],
      "returns": {
        "type": "uint256"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": [
      {
        "teal": 1,
        "source": 1031,
        "pc": [
          0
        ]
      },
      {
        "teal": 2,
        "source": 1031,
        "pc": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ]
      },
      {
        "teal": 3,
        "source": 1031,
        "pc": [
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          91
        ]
      },
      {
        "teal": 15,
        "source": 1031,
        "pc": [
          92,
          93
        ]
      },
      {
        "teal": 16,
        "source": 1031,
        "pc": [
          94
        ]
      },
      {
        "teal": 17,
        "source": 1031,
        "pc": [
          95,
          96
        ]
      },
      {
        "teal": 18,
        "source": 1031,
        "pc": [
          97
        ]
      },
      {
        "teal": 19,
        "source": 1031,
        "pc": [
          98,
          99
        ]
      },
      {
        "teal": 20,
        "source": 1031,
        "pc": [
          100
        ]
      },
      {
        "teal": 21,
        "source": 1031,
        "pc": [
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110,
          111,
          112,
          113,
          114,
          115,
          116,
          117,
          118,
          119,
          120,
          121,
          122,
          123,
          124,
          125,
          126
        ]
      },
      {
        "teal": 25,
        "source": 1031,
        "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
        "pc": [
          127
        ]
      },
      {
        "teal": 30,
        "source": 1032,
        "pc": [
          128,
          129,
          130,
          131,
          132,
          133
        ]
      },
      {
        "teal": 33,
        "source": 1032,
        "pc": [
          134,
          135,
          136
        ]
      },
      {
        "teal": 34,
        "source": 1032,
        "pc": [
          137
        ]
      },
      {
        "teal": 35,
        "source": 1032,
        "pc": [
          138
        ]
      },
      {
        "teal": 36,
        "source": 1032,
        "pc": [
          139,
          140,
          141
        ]
      },
      {
        "teal": 37,
        "source": 1032,
        "pc": [
          142
        ]
      },
      {
        "teal": 40,
        "source": 1032,
        "errorMessage": "angularCasting return value overflowed 256 bits",
        "pc": [
          143
        ]
      },
      {
        "teal": 41,
        "source": 1032,
        "pc": [
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177
        ]
      },
      {
        "teal": 42,
        "source": 1032,
        "pc": [
          178
        ]
      },
      {
        "teal": 43,
        "source": 1032,
        "pc": [
          179
        ]
      },
      {
        "teal": 44,
        "source": 1032,
        "pc": [
          180
        ]
      },
      {
        "teal": 45,
        "source": 1032,
        "pc": [
          181
        ]
      },
      {
        "teal": 46,
        "source": 1032,
        "pc": [
          182,
          183
        ]
      },
      {
        "teal": 47,
        "source": 1032,
        "pc": [
          184
        ]
      },
      {
        "teal": 48,
        "source": 1032,
        "pc": [
          185
        ]
      },
      {
        "teal": 49,
        "source": 1032,
        "pc": [
          186
        ]
      },
      {
        "teal": 50,
        "source": 1032,
        "pc": [
          187
        ]
      },
      {
        "teal": 51,
        "source": 1032,
        "pc": [
          188
        ]
      },
      {
        "teal": 52,
        "source": 1032,
        "pc": [
          189,
          190
        ]
      },
      {
        "teal": 53,
        "source": 1032,
        "pc": [
          191
        ]
      },
      {
        "teal": 57,
        "source": 1032,
        "pc": [
          192,
          193,
          194
        ]
      },
      {
        "teal": 60,
        "source": 1032,
        "pc": [
          195,
          196
        ]
      },
      {
        "teal": 64,
        "source": 1033,
        "pc": [
          197,
          198,
          199,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          209,
          210,
          211,
          212,
          213,
          214,
          215,
          216,
          217,
          218,
          219,
          220,
          221,
          222,
          223,
          224,
          225,
          226,
          227,
          228,
          229,
          230
        ]
      },
      {
        "teal": 65,
        "source": 1033,
        "pc": [
          231,
          232
        ]
      },
      {
        "teal": 69,
        "source": 1035,
        "pc": [
          233,
          234
        ]
      },
      {
        "teal": 72,
        "source": 1032,
        "pc": [
          235,
          236
        ]
      },
      {
        "teal": 73,
        "source": 1032,
        "pc": [
          237
        ]
      },
      {
        "teal": 76,
        "source": 1031,
        "pc": [
          238,
          239
        ]
      },
      {
        "teal": 77,
        "source": 1031,
        "pc": [
          240
        ]
      },
      {
        "teal": 80,
        "source": 1031,
        "pc": [
          241,
          242,
          243,
          244,
          245,
          246
        ]
      },
      {
        "teal": 81,
        "source": 1031,
        "pc": [
          247,
          248,
          249
        ]
      },
      {
        "teal": 82,
        "source": 1031,
        "pc": [
          250,
          251,
          252,
          253
        ]
      },
      {
        "teal": 85,
        "source": 1031,
        "errorMessage": "this contract does not implement the given ABI method for create NoOp",
        "pc": [
          254
        ]
      },
      {
        "teal": 88,
        "source": 1031,
        "pc": [
          255,
          256,
          257,
          258,
          259,
          260
        ]
      },
      {
        "teal": 89,
        "source": 1031,
        "pc": [
          261,
          262,
          263
        ]
      },
      {
        "teal": 90,
        "source": 1031,
        "pc": [
          264,
          265,
          266,
          267
        ]
      },
      {
        "teal": 93,
        "source": 1031,
        "errorMessage": "this contract does not implement the given ABI method for call NoOp",
        "pc": [
          268
        ]
      }
    ],
    "clear": []
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxIDYgMzIgMjU2CmJ5dGVjYmxvY2sgMHggMHgxNzZlNTdkZiAweGI4NDQ3YjM2IDB4MTUxZjdjNzUgMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNTM5IDB4RkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRgoKLy8gVGhpcyBURUFMIHdhcyBnZW5lcmF0ZWQgYnkgVEVBTFNjcmlwdCB2MC4xMDIuMAovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGUgY29udHJhY3QsIGl0cyByZXNwZWN0aXZlIGJyYW5jaCB3aWxsIGJlICIqTk9UX0lNUExFTUVOVEVEIiB3aGljaCBqdXN0IGNvbnRhaW5zICJlcnIiCnR4biBBcHBsaWNhdGlvbklECiEKaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gYW5ndWxhckNhc3RpbmcoKXVpbnQyNTYKKmFiaV9yb3V0ZV9hbmd1bGFyQ2FzdGluZzoKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJYnl0ZSAweDE1MWY3Yzc1CgoJLy8gZXhlY3V0ZSBhbmd1bGFyQ2FzdGluZygpdWludDI1NgoJY2FsbHN1YiBhbmd1bGFyQ2FzdGluZwoJZHVwCgliaXRsZW4KCWludCAyNTYKCTw9CgoJLy8gYW5ndWxhckNhc3RpbmcgcmV0dXJuIHZhbHVlIG92ZXJmbG93ZWQgMjU2IGJpdHMKCWFzc2VydAoJYnl0ZSAweEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkYKCWImCglkdXAKCWxlbgoJZHVwCglpbnQgMzIKCS0KCXN3YXAKCXN1YnN0cmluZzMKCWNvbmNhdAoJbG9nCglpbnQgMQoJcmV0dXJuCgovLyBhbmd1bGFyQ2FzdGluZygpOiB1aW50MjU2CmFuZ3VsYXJDYXN0aW5nOgoJcHJvdG8gMCAxCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGUgMHgKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTAzMwoJLy8geCA9IDx1aW50MjU2PjEzMzcKCWJ5dGUgMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNTM5CglmcmFtZV9idXJ5IDAgLy8geDogdWludDI1NgoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czoxMDM1CgkvLyByZXR1cm4geDsKCWZyYW1lX2RpZyAwIC8vIHg6IHVpbnQyNTYKCgkvLyBzZXQgdGhlIHN1YnJvdXRpbmUgcmV0dXJuIHZhbHVlCglmcmFtZV9idXJ5IDAKCXJldHN1YgoKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCWludCAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCWJ5dGUgMHhiODQ0N2IzNiAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJYnl0ZSAweDE3NmU1N2RmIC8vIG1ldGhvZCAiYW5ndWxhckNhc3RpbmcoKXVpbnQyNTYiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2FuZ3VsYXJDYXN0aW5nCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoJZXJy",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiAEAQYggAImBgAEF25X3wS4RHs2BBUffHUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTkg//////////////////////////////////////////8xGBSBBgsxGQiNDACAAAAAAAAAAAAAAAByAAAAAAAAAAAAAACABBUffHWIADdJk4GAAg5EgCD//////////////////////////////////////////6xJFUmBIAlMUlCwgQFDigABgACAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU5jACLAIwAiYEBQ4AEuER7NjYaAI4B//AAgAQXblffNhoAjgH/dAA=",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 25,
      "patch": 0,
      "commitHash": "9855f57c"
    }
  }
}