{
  "name": "ABITestAngularCasting",
  "desc": "",
  "methods": [
    {
      "name": "angularCasting",
      "args": [],
      "returns": {
        "type": "uint256"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:1031",
          "pc": [
            0
          ]
        },
        {
          "teal": 13,
          "source": "tests/contracts/abi.algo.ts:1031",
          "pc": [
            1,
            2
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/abi.algo.ts:1031",
          "pc": [
            3
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:1031",
          "pc": [
            4,
            5
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:1031",
          "pc": [
            6
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:1031",
          "pc": [
            7,
            8
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:1031",
          "pc": [
            9
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:1031",
          "pc": [
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35
          ]
        },
        {
          "teal": 23,
          "source": "tests/contracts/abi.algo.ts:1031",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            36
          ]
        },
        {
          "teal": 28,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            37,
            38,
            39,
            40,
            41,
            42
          ]
        },
        {
          "teal": 31,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            43,
            44,
            45
          ]
        },
        {
          "teal": 32,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            46
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            47
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            48,
            49,
            50
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            51
          ]
        },
        {
          "teal": 38,
          "source": "tests/contracts/abi.algo.ts:1032",
          "errorMessage": "angularCasting return value overflowed 256 bits",
          "pc": [
            52
          ]
        },
        {
          "teal": 39,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            87
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            88
          ]
        },
        {
          "teal": 42,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            89
          ]
        },
        {
          "teal": 43,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            90
          ]
        },
        {
          "teal": 44,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            91,
            92
          ]
        },
        {
          "teal": 45,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            93
          ]
        },
        {
          "teal": 46,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            94
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            95
          ]
        },
        {
          "teal": 48,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            96
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            97
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            98,
            99
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            100
          ]
        },
        {
          "teal": 55,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            101,
            102,
            103
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            104,
            105
          ]
        },
        {
          "teal": 62,
          "source": "tests/contracts/abi.algo.ts:1033",
          "pc": [
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139
          ]
        },
        {
          "teal": 63,
          "source": "tests/contracts/abi.algo.ts:1033",
          "pc": [
            140,
            141
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/abi.algo.ts:1035",
          "pc": [
            142,
            143
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            144,
            145
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/abi.algo.ts:1032",
          "pc": [
            146
          ]
        },
        {
          "teal": 74,
          "source": "tests/contracts/abi.algo.ts:1031",
          "pc": [
            147,
            148
          ]
        },
        {
          "teal": 75,
          "source": "tests/contracts/abi.algo.ts:1031",
          "pc": [
            149
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/abi.algo.ts:1031",
          "pc": [
            150,
            151,
            152,
            153,
            154,
            155
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/abi.algo.ts:1031",
          "pc": [
            156,
            157,
            158
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/abi.algo.ts:1031",
          "pc": [
            159,
            160,
            161,
            162
          ]
        },
        {
          "teal": 83,
          "source": "tests/contracts/abi.algo.ts:1031",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            163
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/abi.algo.ts:1031",
          "pc": [
            164,
            165,
            166,
            167,
            168,
            169
          ]
        },
        {
          "teal": 87,
          "source": "tests/contracts/abi.algo.ts:1031",
          "pc": [
            170,
            171,
            172
          ]
        },
        {
          "teal": 88,
          "source": "tests/contracts/abi.algo.ts:1031",
          "pc": [
            173,
            174,
            175,
            176
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/abi.algo.ts:1031",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            177
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwNS4wCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQpwdXNoaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gYW5ndWxhckNhc3RpbmcoKXVpbnQyNTYKKmFiaV9yb3V0ZV9hbmd1bGFyQ2FzdGluZzoKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJcHVzaGJ5dGVzIDB4MTUxZjdjNzUKCgkvLyBleGVjdXRlIGFuZ3VsYXJDYXN0aW5nKCl1aW50MjU2CgljYWxsc3ViIGFuZ3VsYXJDYXN0aW5nCglkdXAKCWJpdGxlbgoJcHVzaGludCAyNTYKCTw9CgoJLy8gYW5ndWxhckNhc3RpbmcgcmV0dXJuIHZhbHVlIG92ZXJmbG93ZWQgMjU2IGJpdHMKCWFzc2VydAoJcHVzaGJ5dGVzIDB4RkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRgoJYiYKCWR1cAoJbGVuCglkdXAKCXB1c2hpbnQgMzIKCS0KCXN3YXAKCXN1YnN0cmluZzMKCWNvbmNhdAoJbG9nCglwdXNoaW50IDEKCXJldHVybgoKLy8gYW5ndWxhckNhc3RpbmcoKTogdWludDI1Ngphbmd1bGFyQ2FzdGluZzoKCXByb3RvIDAgMQoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglwdXNoYnl0ZXMgMHgKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTAzMwoJLy8geCA9IDx1aW50MjU2PjEzMzcKCXB1c2hieXRlcyAweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA1MzkKCWZyYW1lX2J1cnkgMCAvLyB4OiB1aW50MjU2CgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjEwMzUKCS8vIHJldHVybiB4OwoJZnJhbWVfZGlnIDAgLy8geDogdWludDI1NgoKCS8vIHNldCB0aGUgc3Vicm91dGluZSByZXR1cm4gdmFsdWUKCWZyYW1lX2J1cnkgMAoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJcHVzaGludCAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCXB1c2hieXRlcyAweGI4NDQ3YjM2IC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglwdXNoYnl0ZXMgMHgxNzZlNTdkZiAvLyBtZXRob2QgImFuZ3VsYXJDYXN0aW5nKCl1aW50MjU2IgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9hbmd1bGFyQ2FzdGluZwoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CjEYFIEGCzEZCI0MAIAAAAAAAAAAAAAAAHIAAAAAAAAAAAAAAIAEFR98dYgAN0mTgYACDkSAIP//////////////////////////////////////////rEkVSYEgCUxSULCBAUOKAAGAAIAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTmMAIsAjACJgQFDgAS4RHs2NhoAjgH/8ACABBduV982GgCOAf90AA==",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}