{
  "name": "Templates",
  "desc": "",
  "methods": [
    {
      "name": "tmpl",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "specificLengthTemplateVar",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "throwError",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "itobTemplateVar",
      "args": [],
      "returns": {
        "type": "byte[]"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 11,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            1
          ]
        },
        {
          "teal": 12,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            2
          ]
        },
        {
          "teal": 13,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            3
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            4
          ]
        },
        {
          "teal": 21,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            5,
            6
          ]
        },
        {
          "teal": 22,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            7
          ]
        },
        {
          "teal": 23,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            8,
            9
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            10
          ]
        },
        {
          "teal": 25,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            11,
            12
          ]
        },
        {
          "teal": 26,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            13
          ]
        },
        {
          "teal": 27,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39
          ]
        },
        {
          "teal": 31,
          "source": "tests/contracts/general.algo.ts:24",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            40
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/general.algo.ts:33",
          "pc": [
            41,
            42,
            43
          ]
        },
        {
          "teal": 37,
          "source": "tests/contracts/general.algo.ts:33",
          "pc": [
            44
          ]
        },
        {
          "teal": 38,
          "source": "tests/contracts/general.algo.ts:33",
          "pc": [
            45
          ]
        },
        {
          "teal": 42,
          "source": "tests/contracts/general.algo.ts:33",
          "pc": [
            46,
            47,
            48
          ]
        },
        {
          "teal": 46,
          "source": "tests/contracts/general.algo.ts:34",
          "pc": [
            49
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/general.algo.ts:34",
          "pc": [
            50
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/general.algo.ts:35",
          "pc": [
            51
          ]
        },
        {
          "teal": 52,
          "source": "tests/contracts/general.algo.ts:35",
          "pc": [
            52
          ]
        },
        {
          "teal": 53,
          "source": "tests/contracts/general.algo.ts:33",
          "pc": [
            53
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/general.algo.ts:38",
          "pc": [
            54,
            55,
            56
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/general.algo.ts:38",
          "pc": [
            57
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/general.algo.ts:38",
          "pc": [
            58
          ]
        },
        {
          "teal": 64,
          "source": "tests/contracts/general.algo.ts:38",
          "pc": [
            59,
            60,
            61
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/general.algo.ts:39",
          "pc": [
            62
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/general.algo.ts:39",
          "pc": [
            63
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/general.algo.ts:39",
          "pc": [
            64
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/general.algo.ts:39",
          "pc": [
            65
          ]
        },
        {
          "teal": 72,
          "source": "tests/contracts/general.algo.ts:38",
          "pc": [
            66
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/general.algo.ts:42",
          "pc": [
            67,
            68,
            69
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/general.algo.ts:42",
          "pc": [
            70
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/general.algo.ts:42",
          "pc": [
            71
          ]
        },
        {
          "teal": 83,
          "source": "tests/contracts/general.algo.ts:42",
          "pc": [
            72,
            73,
            74
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/general.algo.ts:43",
          "errorMessage": "this is an error",
          "pc": [
            75
          ]
        },
        {
          "teal": 87,
          "source": "tests/contracts/general.algo.ts:42",
          "pc": [
            76
          ]
        },
        {
          "teal": 92,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            77,
            78,
            79,
            80,
            81,
            82
          ]
        },
        {
          "teal": 95,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            83,
            84,
            85
          ]
        },
        {
          "teal": 96,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            86
          ]
        },
        {
          "teal": 97,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            87
          ]
        },
        {
          "teal": 98,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            88
          ]
        },
        {
          "teal": 99,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            89,
            90,
            91
          ]
        },
        {
          "teal": 100,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            92
          ]
        },
        {
          "teal": 101,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            93
          ]
        },
        {
          "teal": 102,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            94
          ]
        },
        {
          "teal": 103,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            95
          ]
        },
        {
          "teal": 104,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            96
          ]
        },
        {
          "teal": 105,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            97
          ]
        },
        {
          "teal": 109,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            98,
            99,
            100
          ]
        },
        {
          "teal": 113,
          "source": "tests/contracts/general.algo.ts:47",
          "pc": [
            101
          ]
        },
        {
          "teal": 114,
          "source": "tests/contracts/general.algo.ts:47",
          "pc": [
            102
          ]
        },
        {
          "teal": 115,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            103
          ]
        },
        {
          "teal": 118,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            104
          ]
        },
        {
          "teal": 119,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            105
          ]
        },
        {
          "teal": 122,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            106,
            107,
            108,
            109,
            110,
            111
          ]
        },
        {
          "teal": 123,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            112,
            113,
            114
          ]
        },
        {
          "teal": 124,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            115,
            116,
            117,
            118
          ]
        },
        {
          "teal": 127,
          "source": "tests/contracts/general.algo.ts:24",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            119
          ]
        },
        {
          "teal": 130,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            120,
            121,
            122,
            123,
            124,
            125
          ]
        },
        {
          "teal": 131,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            126,
            127,
            128,
            129,
            130,
            131
          ]
        },
        {
          "teal": 132,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            132,
            133,
            134,
            135,
            136,
            137
          ]
        },
        {
          "teal": 133,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            138,
            139,
            140,
            141,
            142,
            143
          ]
        },
        {
          "teal": 134,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            144,
            145,
            146
          ]
        },
        {
          "teal": 135,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156
          ]
        },
        {
          "teal": 138,
          "source": "tests/contracts/general.algo.ts:24",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            157
          ]
        }
      ],
      "pcOffsetMethod": "cblocks"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayBUTVBMX3VpbnQ2NFRtcGxWYXIgMQpieXRlY2Jsb2NrIFRNUExfYnl0ZXM2NFRtcGxWYXIgVE1QTF9ieXRlczMyVG1wbFZhciBUTVBMX2J5dGVzVG1wbFZhcgoKLy8gVGhpcyBURUFMIHdhcyBnZW5lcmF0ZWQgYnkgVEVBTFNjcmlwdCB2MC4xMDUuMAovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyBsaW5lcyBvZiBURUFMIGFyZSB1c2VkIHRvIGluaXRpYWxpemUgdGVtcGxhdGUgdmFyaWFibGVzIGluIHNjcmF0Y2ggc2xvdHMKYnl0ZWMgMCAvLyBUTVBMX2J5dGVzNjRUbXBsVmFyCmJ5dGVjIDEgLy8gVE1QTF9ieXRlczMyVG1wbFZhcgppbnRjIDAgLy8gVE1QTF91aW50NjRUbXBsVmFyCmJ5dGVjIDIgLy8gVE1QTF9ieXRlc1RtcGxWYXIKCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCnB1c2hpbnQgNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyB0bXBsKCl2b2lkCiphYmlfcm91dGVfdG1wbDoKCS8vIGV4ZWN1dGUgdG1wbCgpdm9pZAoJY2FsbHN1YiB0bXBsCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyB0bXBsKCk6IHZvaWQKdG1wbDoKCXByb3RvIDAgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9nZW5lcmFsLmFsZ28udHM6MzQKCS8vIGxvZyh0aGlzLmJ5dGVzVG1wbFZhcikKCWJ5dGVjIDIgLy8gVE1QTF9ieXRlc1RtcGxWYXIKCWxvZwoKCS8vIHRlc3RzL2NvbnRyYWN0cy9nZW5lcmFsLmFsZ28udHM6MzUKCS8vIGFzc2VydCh0aGlzLnVpbnQ2NFRtcGxWYXIpCglpbnRjIDAgLy8gVE1QTF91aW50NjRUbXBsVmFyCglhc3NlcnQKCXJldHN1YgoKLy8gc3BlY2lmaWNMZW5ndGhUZW1wbGF0ZVZhcigpdm9pZAoqYWJpX3JvdXRlX3NwZWNpZmljTGVuZ3RoVGVtcGxhdGVWYXI6CgkvLyBleGVjdXRlIHNwZWNpZmljTGVuZ3RoVGVtcGxhdGVWYXIoKXZvaWQKCWNhbGxzdWIgc3BlY2lmaWNMZW5ndGhUZW1wbGF0ZVZhcgoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gc3BlY2lmaWNMZW5ndGhUZW1wbGF0ZVZhcigpOiB2b2lkCnNwZWNpZmljTGVuZ3RoVGVtcGxhdGVWYXI6Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvZ2VuZXJhbC5hbGdvLnRzOjM5CgkvLyBlZDI1NTE5VmVyaWZ5QmFyZSh0aGlzLmJ5dGVzVG1wbFZhciwgdGhpcy5ieXRlczY0VG1wbFZhciwgdGhpcy5ieXRlczMyVG1wbFZhcikKCWJ5dGVjIDIgLy8gVE1QTF9ieXRlc1RtcGxWYXIKCWJ5dGVjIDAgLy8gVE1QTF9ieXRlczY0VG1wbFZhcgoJYnl0ZWMgMSAvLyBUTVBMX2J5dGVzMzJUbXBsVmFyCgllZDI1NTE5dmVyaWZ5X2JhcmUKCXJldHN1YgoKLy8gdGhyb3dFcnJvcigpdm9pZAoqYWJpX3JvdXRlX3Rocm93RXJyb3I6CgkvLyBleGVjdXRlIHRocm93RXJyb3IoKXZvaWQKCWNhbGxzdWIgdGhyb3dFcnJvcgoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gdGhyb3dFcnJvcigpOiB2b2lkCnRocm93RXJyb3I6Cglwcm90byAwIDAKCgkvLyB0aGlzIGlzIGFuIGVycm9yCgllcnIKCXJldHN1YgoKLy8gaXRvYlRlbXBsYXRlVmFyKClieXRlW10KKmFiaV9yb3V0ZV9pdG9iVGVtcGxhdGVWYXI6CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCXB1c2hieXRlcyAweDE1MWY3Yzc1CgoJLy8gZXhlY3V0ZSBpdG9iVGVtcGxhdGVWYXIoKWJ5dGVbXQoJY2FsbHN1YiBpdG9iVGVtcGxhdGVWYXIKCWR1cAoJbGVuCglpdG9iCglleHRyYWN0IDYgMgoJc3dhcAoJY29uY2F0Cgljb25jYXQKCWxvZwoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gaXRvYlRlbXBsYXRlVmFyKCk6IGJ5dGVzCml0b2JUZW1wbGF0ZVZhcjoKCXByb3RvIDAgMQoKCS8vIHRlc3RzL2NvbnRyYWN0cy9nZW5lcmFsLmFsZ28udHM6NDcKCS8vIHJldHVybiBpdG9iKHRoaXMudWludDY0VG1wbFZhcik7CglpbnRjIDAgLy8gVE1QTF91aW50NjRUbXBsVmFyCglpdG9iCglyZXRzdWIKCiphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CglpbnRjIDEgLy8gMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CglwdXNoYnl0ZXMgMHhiODQ0N2IzNiAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJcHVzaGJ5dGVzIDB4OWE3MWQyYjQgLy8gbWV0aG9kICJ0bXBsKCl2b2lkIgoJcHVzaGJ5dGVzIDB4ZGY0ZDVjM2IgLy8gbWV0aG9kICJzcGVjaWZpY0xlbmd0aFRlbXBsYXRlVmFyKCl2b2lkIgoJcHVzaGJ5dGVzIDB4M2Q4NzBkODcgLy8gbWV0aG9kICJ0aHJvd0Vycm9yKCl2b2lkIgoJcHVzaGJ5dGVzIDB4YmMwYjE3MDYgLy8gbWV0aG9kICJpdG9iVGVtcGxhdGVWYXIoKWJ5dGVbXSIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfdG1wbCAqYWJpX3JvdXRlX3NwZWNpZmljTGVuZ3RoVGVtcGxhdGVWYXIgKmFiaV9yb3V0ZV90aHJvd0Vycm9yICphYmlfcm91dGVfaXRvYlRlbXBsYXRlVmFyCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoJZXJy",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "templateVariables": {
    "bytesTmplVar": {
      "type": "byte[]"
    },
    "uint64TmplVar": {
      "type": "uint64"
    },
    "bytes32TmplVar": {
      "type": "byte[32]"
    },
    "bytes64TmplVar": {
      "type": "byte[64]"
    }
  },
  "scratchVariables": {
    "bytesTmplVar": {
      "type": "byte[]",
      "slot": 200
    },
    "uint64TmplVar": {
      "type": "uint64",
      "slot": 201
    },
    "bytes32TmplVar": {
      "type": "byte[32]",
      "slot": 202
    },
    "bytes64TmplVar": {
      "type": "byte[64]",
      "slot": 203
    }
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}