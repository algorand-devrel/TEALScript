{
  "name": "G",
  "desc": "",
  "methods": [
    {
      "name": "publicMethod",
      "args": [],
      "returns": {
        "type": "string"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "g",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            20,
            21
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            22
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            23,
            24
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            25
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            26,
            27
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            28
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            55
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/inheritance.algo.ts:66",
          "pc": [
            56,
            57,
            58,
            59,
            60,
            61
          ]
        },
        {
          "teal": 32,
          "source": "tests/contracts/inheritance.algo.ts:66",
          "pc": [
            62,
            63,
            64
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/inheritance.algo.ts:66",
          "pc": [
            65
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/inheritance.algo.ts:66",
          "pc": [
            66
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/inheritance.algo.ts:66",
          "pc": [
            67
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/inheritance.algo.ts:66",
          "pc": [
            68,
            69,
            70
          ]
        },
        {
          "teal": 37,
          "source": "tests/contracts/inheritance.algo.ts:66",
          "pc": [
            71
          ]
        },
        {
          "teal": 38,
          "source": "tests/contracts/inheritance.algo.ts:66",
          "pc": [
            72
          ]
        },
        {
          "teal": 39,
          "source": "tests/contracts/inheritance.algo.ts:66",
          "pc": [
            73
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/inheritance.algo.ts:66",
          "pc": [
            74
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/inheritance.algo.ts:66",
          "pc": [
            75,
            76
          ]
        },
        {
          "teal": 42,
          "source": "tests/contracts/inheritance.algo.ts:66",
          "pc": [
            77
          ]
        },
        {
          "teal": 46,
          "source": "tests/contracts/inheritance.algo.ts:66",
          "pc": [
            78,
            79,
            80
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/inheritance.algo.ts:67",
          "pc": [
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/inheritance.algo.ts:66",
          "pc": [
            89
          ]
        },
        {
          "teal": 55,
          "source": "tests/contracts/inheritance.algo.ts:70",
          "pc": [
            90,
            91,
            92
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/inheritance.algo.ts:71",
          "pc": [
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/inheritance.algo.ts:70",
          "pc": [
            102
          ]
        },
        {
          "teal": 64,
          "source": "tests/contracts/inheritance.algo.ts:74",
          "pc": [
            103,
            104,
            105
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/inheritance.algo.ts:75",
          "pc": [
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/inheritance.algo.ts:74",
          "pc": [
            117
          ]
        },
        {
          "teal": 74,
          "source": "tests/contracts/inheritance.algo.ts:80",
          "pc": [
            118,
            119,
            120
          ]
        },
        {
          "teal": 75,
          "source": "tests/contracts/inheritance.algo.ts:80",
          "pc": [
            121,
            122
          ]
        },
        {
          "teal": 76,
          "source": "tests/contracts/inheritance.algo.ts:80",
          "pc": [
            123
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/inheritance.algo.ts:80",
          "pc": [
            124,
            125,
            126
          ]
        },
        {
          "teal": 84,
          "source": "tests/contracts/inheritance.algo.ts:81",
          "pc": [
            127,
            128,
            129
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/inheritance.algo.ts:81",
          "pc": [
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/inheritance.algo.ts:81",
          "pc": [
            141
          ]
        },
        {
          "teal": 87,
          "source": "tests/contracts/inheritance.algo.ts:81",
          "pc": [
            142
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/inheritance.algo.ts:82",
          "pc": [
            143,
            144,
            145
          ]
        },
        {
          "teal": 92,
          "source": "tests/contracts/inheritance.algo.ts:82",
          "pc": [
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153
          ]
        },
        {
          "teal": 93,
          "source": "tests/contracts/inheritance.algo.ts:82",
          "pc": [
            154
          ]
        },
        {
          "teal": 94,
          "source": "tests/contracts/inheritance.algo.ts:82",
          "pc": [
            155
          ]
        },
        {
          "teal": 95,
          "source": "tests/contracts/inheritance.algo.ts:80",
          "pc": [
            156
          ]
        },
        {
          "teal": 98,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            157,
            158
          ]
        },
        {
          "teal": 99,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            159
          ]
        },
        {
          "teal": 102,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            160,
            161,
            162,
            163,
            164,
            165
          ]
        },
        {
          "teal": 103,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            166,
            167,
            168
          ]
        },
        {
          "teal": 104,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            169,
            170,
            171,
            172
          ]
        },
        {
          "teal": 107,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            173
          ]
        },
        {
          "teal": 110,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            174,
            175,
            176,
            177,
            178,
            179
          ]
        },
        {
          "teal": 111,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            180,
            181,
            182,
            183,
            184,
            185
          ]
        },
        {
          "teal": 112,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            186,
            187,
            188
          ]
        },
        {
          "teal": 113,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "pc": [
            189,
            190,
            191,
            192,
            193,
            194
          ]
        },
        {
          "teal": 116,
          "source": "tests/contracts/inheritance.algo.ts:79",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            195
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmJ5dGVjYmxvY2sgMHg3MDcyNmY3NDY1NjM3NDY1NjQgMHg3MDc1NjI2YzY5NjMKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuMTA0LjEKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCnB1c2hpbnQgNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyBwdWJsaWNNZXRob2QoKXN0cmluZwoqYWJpX3JvdXRlX3B1YmxpY01ldGhvZDoKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJcHVzaGJ5dGVzIDB4MTUxZjdjNzUKCgkvLyBleGVjdXRlIHB1YmxpY01ldGhvZCgpc3RyaW5nCgljYWxsc3ViIHB1YmxpY01ldGhvZAoJZHVwCglsZW4KCWl0b2IKCWV4dHJhY3QgNiAyCglzd2FwCgljb25jYXQKCWNvbmNhdAoJbG9nCglwdXNoaW50IDEKCXJldHVybgoKLy8gcHVibGljTWV0aG9kKCk6IHN0cmluZwpwdWJsaWNNZXRob2Q6Cglwcm90byAwIDEKCgkvLyB0ZXN0cy9jb250cmFjdHMvaW5oZXJpdGFuY2UuYWxnby50czo2NwoJLy8gcmV0dXJuICdwdWJsaWMnOwoJYnl0ZSAweDcwNzU2MjZjNjk2MyAvLyAicHVibGljIgoJcmV0c3ViCgovLyBwcml2YXRlTWV0aG9kKCk6IHN0cmluZwpwcml2YXRlTWV0aG9kOgoJcHJvdG8gMCAxCgoJLy8gdGVzdHMvY29udHJhY3RzL2luaGVyaXRhbmNlLmFsZ28udHM6NzEKCS8vIHJldHVybiAncHJpdmF0ZSc7CglwdXNoYnl0ZXMgMHg3MDcyNjk3NjYxNzQ2NSAvLyAicHJpdmF0ZSIKCXJldHN1YgoKLy8gcHJvdGVjdGVkTWV0aG9kKCk6IHN0cmluZwpwcm90ZWN0ZWRNZXRob2Q6Cglwcm90byAwIDEKCgkvLyB0ZXN0cy9jb250cmFjdHMvaW5oZXJpdGFuY2UuYWxnby50czo3NQoJLy8gcmV0dXJuICdwcm90ZWN0ZWQnOwoJYnl0ZSAweDcwNzI2Zjc0NjU2Mzc0NjU2NCAvLyAicHJvdGVjdGVkIgoJcmV0c3ViCgovLyBnKCl2b2lkCiphYmlfcm91dGVfZzoKCS8vIGV4ZWN1dGUgZygpdm9pZAoJY2FsbHN1YiBnCglwdXNoaW50IDEKCXJldHVybgoKLy8gZygpOiB2b2lkCmc6Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvaW5oZXJpdGFuY2UuYWxnby50czo4MQoJLy8gYXNzZXJ0KHRoaXMucHJvdGVjdGVkTWV0aG9kKCkgPT09ICdwcm90ZWN0ZWQnKQoJY2FsbHN1YiBwcm90ZWN0ZWRNZXRob2QKCWJ5dGUgMHg3MDcyNmY3NDY1NjM3NDY1NjQgLy8gInByb3RlY3RlZCIKCT09Cglhc3NlcnQKCgkvLyB0ZXN0cy9jb250cmFjdHMvaW5oZXJpdGFuY2UuYWxnby50czo4MgoJLy8gYXNzZXJ0KHRoaXMucHVibGljTWV0aG9kKCkgPT09ICdwdWJsaWMnKQoJY2FsbHN1YiBwdWJsaWNNZXRob2QKCWJ5dGUgMHg3MDc1NjI2YzY5NjMgLy8gInB1YmxpYyIKCT09Cglhc3NlcnQKCXJldHN1YgoKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCXB1c2hpbnQgMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CglwdXNoYnl0ZXMgMHhiODQ0N2IzNiAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJcHVzaGJ5dGVzIDB4ZTA0MThjNTQgLy8gbWV0aG9kICJwdWJsaWNNZXRob2QoKXN0cmluZyIKCXB1c2hieXRlcyAweGYyYjY1ZjI3IC8vIG1ldGhvZCAiZygpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfcHVibGljTWV0aG9kICphYmlfcm91dGVfZwoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiYCCXByb3RlY3RlZAZwdWJsaWMxGBSBBgsxGQiNDAB3AAAAAAAAAAAAAABpAAAAAAAAAAAAAACABBUffHWIAA1JFRZXBgJMUFCwgQFDigABgAZwdWJsaWOJigABgAdwcml2YXRliYoAAYAJcHJvdGVjdGVkiYgAA4EBQ4oAAIj/5YAJcHJvdGVjdGVkEkSI/7yABnB1YmxpYxJEiYEBQ4AEuER7NjYaAI4B//AAgATgQYxUgATytl8nNhoAjgL/df+zAA==",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}