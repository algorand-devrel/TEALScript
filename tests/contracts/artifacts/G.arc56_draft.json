{
  "name": "G",
  "desc": "",
  "methods": [
    {
      "name": "publicMethod",
      "args": [],
      "returns": {
        "type": "string"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "g",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": [
      {
        "teal": 1,
        "source": 79,
        "pc": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22
        ]
      },
      {
        "teal": 13,
        "source": 79,
        "pc": [
          23,
          24
        ]
      },
      {
        "teal": 14,
        "source": 79,
        "pc": [
          25
        ]
      },
      {
        "teal": 15,
        "source": 79,
        "pc": [
          26,
          27
        ]
      },
      {
        "teal": 16,
        "source": 79,
        "pc": [
          28
        ]
      },
      {
        "teal": 17,
        "source": 79,
        "pc": [
          29,
          30
        ]
      },
      {
        "teal": 18,
        "source": 79,
        "pc": [
          31
        ]
      },
      {
        "teal": 19,
        "source": 79,
        "pc": [
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57
        ]
      },
      {
        "teal": 23,
        "source": 79,
        "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
        "pc": [
          58
        ]
      },
      {
        "teal": 28,
        "source": 66,
        "pc": [
          59,
          60,
          61,
          62,
          63,
          64
        ]
      },
      {
        "teal": 31,
        "source": 66,
        "pc": [
          65,
          66,
          67
        ]
      },
      {
        "teal": 32,
        "source": 66,
        "pc": [
          68
        ]
      },
      {
        "teal": 33,
        "source": 66,
        "pc": [
          69
        ]
      },
      {
        "teal": 34,
        "source": 66,
        "pc": [
          70
        ]
      },
      {
        "teal": 35,
        "source": 66,
        "pc": [
          71,
          72,
          73
        ]
      },
      {
        "teal": 36,
        "source": 66,
        "pc": [
          74
        ]
      },
      {
        "teal": 37,
        "source": 66,
        "pc": [
          75
        ]
      },
      {
        "teal": 38,
        "source": 66,
        "pc": [
          76
        ]
      },
      {
        "teal": 39,
        "source": 66,
        "pc": [
          77
        ]
      },
      {
        "teal": 40,
        "source": 66,
        "pc": [
          78
        ]
      },
      {
        "teal": 41,
        "source": 66,
        "pc": [
          79
        ]
      },
      {
        "teal": 45,
        "source": 66,
        "pc": [
          80,
          81,
          82
        ]
      },
      {
        "teal": 49,
        "source": 67,
        "pc": [
          83
        ]
      },
      {
        "teal": 50,
        "source": 66,
        "pc": [
          84
        ]
      },
      {
        "teal": 54,
        "source": 70,
        "pc": [
          85,
          86,
          87
        ]
      },
      {
        "teal": 58,
        "source": 71,
        "pc": [
          88,
          89,
          90,
          91,
          92,
          93,
          94,
          95,
          96
        ]
      },
      {
        "teal": 59,
        "source": 70,
        "pc": [
          97
        ]
      },
      {
        "teal": 63,
        "source": 74,
        "pc": [
          98,
          99,
          100
        ]
      },
      {
        "teal": 67,
        "source": 75,
        "pc": [
          101
        ]
      },
      {
        "teal": 68,
        "source": 74,
        "pc": [
          102
        ]
      },
      {
        "teal": 73,
        "source": 80,
        "pc": [
          103,
          104,
          105
        ]
      },
      {
        "teal": 74,
        "source": 80,
        "pc": [
          106
        ]
      },
      {
        "teal": 75,
        "source": 80,
        "pc": [
          107
        ]
      },
      {
        "teal": 79,
        "source": 80,
        "pc": [
          108,
          109,
          110
        ]
      },
      {
        "teal": 83,
        "source": 81,
        "pc": [
          111,
          112,
          113
        ]
      },
      {
        "teal": 84,
        "source": 81,
        "pc": [
          114
        ]
      },
      {
        "teal": 85,
        "source": 81,
        "pc": [
          115
        ]
      },
      {
        "teal": 86,
        "source": 81,
        "pc": [
          116
        ]
      },
      {
        "teal": 90,
        "source": 82,
        "pc": [
          117,
          118,
          119
        ]
      },
      {
        "teal": 91,
        "source": 82,
        "pc": [
          120
        ]
      },
      {
        "teal": 92,
        "source": 82,
        "pc": [
          121
        ]
      },
      {
        "teal": 93,
        "source": 82,
        "pc": [
          122
        ]
      },
      {
        "teal": 94,
        "source": 80,
        "pc": [
          123
        ]
      },
      {
        "teal": 97,
        "source": 79,
        "pc": [
          124
        ]
      },
      {
        "teal": 98,
        "source": 79,
        "pc": [
          125
        ]
      },
      {
        "teal": 101,
        "source": 79,
        "pc": [
          126,
          127,
          128,
          129,
          130,
          131
        ]
      },
      {
        "teal": 102,
        "source": 79,
        "pc": [
          132,
          133,
          134
        ]
      },
      {
        "teal": 103,
        "source": 79,
        "pc": [
          135,
          136,
          137,
          138
        ]
      },
      {
        "teal": 106,
        "source": 79,
        "errorMessage": "this contract does not implement the given ABI method for create NoOp",
        "pc": [
          139
        ]
      },
      {
        "teal": 109,
        "source": 79,
        "pc": [
          140,
          141,
          142,
          143,
          144,
          145
        ]
      },
      {
        "teal": 110,
        "source": 79,
        "pc": [
          146,
          147,
          148,
          149,
          150,
          151
        ]
      },
      {
        "teal": 111,
        "source": 79,
        "pc": [
          152,
          153,
          154
        ]
      },
      {
        "teal": 112,
        "source": 79,
        "pc": [
          155,
          156,
          157,
          158,
          159,
          160
        ]
      },
      {
        "teal": 115,
        "source": 79,
        "errorMessage": "this contract does not implement the given ABI method for call NoOp",
        "pc": [
          161
        ]
      }
    ],
    "clear": []
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwMy4wCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQppbnQgNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyBwdWJsaWNNZXRob2QoKXN0cmluZwoqYWJpX3JvdXRlX3B1YmxpY01ldGhvZDoKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJYnl0ZSAweDE1MWY3Yzc1CgoJLy8gZXhlY3V0ZSBwdWJsaWNNZXRob2QoKXN0cmluZwoJY2FsbHN1YiBwdWJsaWNNZXRob2QKCWR1cAoJbGVuCglpdG9iCglleHRyYWN0IDYgMgoJc3dhcAoJY29uY2F0Cgljb25jYXQKCWxvZwoJaW50IDEKCXJldHVybgoKLy8gcHVibGljTWV0aG9kKCk6IHN0cmluZwpwdWJsaWNNZXRob2Q6Cglwcm90byAwIDEKCgkvLyB0ZXN0cy9jb250cmFjdHMvaW5oZXJpdGFuY2UuYWxnby50czo2NwoJLy8gcmV0dXJuICdwdWJsaWMnOwoJYnl0ZSAweDcwNzU2MjZjNjk2MyAvLyAicHVibGljIgoJcmV0c3ViCgovLyBwcml2YXRlTWV0aG9kKCk6IHN0cmluZwpwcml2YXRlTWV0aG9kOgoJcHJvdG8gMCAxCgoJLy8gdGVzdHMvY29udHJhY3RzL2luaGVyaXRhbmNlLmFsZ28udHM6NzEKCS8vIHJldHVybiAncHJpdmF0ZSc7CglieXRlIDB4NzA3MjY5NzY2MTc0NjUgLy8gInByaXZhdGUiCglyZXRzdWIKCi8vIHByb3RlY3RlZE1ldGhvZCgpOiBzdHJpbmcKcHJvdGVjdGVkTWV0aG9kOgoJcHJvdG8gMCAxCgoJLy8gdGVzdHMvY29udHJhY3RzL2luaGVyaXRhbmNlLmFsZ28udHM6NzUKCS8vIHJldHVybiAncHJvdGVjdGVkJzsKCWJ5dGUgMHg3MDcyNmY3NDY1NjM3NDY1NjQgLy8gInByb3RlY3RlZCIKCXJldHN1YgoKLy8gZygpdm9pZAoqYWJpX3JvdXRlX2c6CgkvLyBleGVjdXRlIGcoKXZvaWQKCWNhbGxzdWIgZwoJaW50IDEKCXJldHVybgoKLy8gZygpOiB2b2lkCmc6Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvaW5oZXJpdGFuY2UuYWxnby50czo4MQoJLy8gYXNzZXJ0KHRoaXMucHJvdGVjdGVkTWV0aG9kKCkgPT09ICdwcm90ZWN0ZWQnKQoJY2FsbHN1YiBwcm90ZWN0ZWRNZXRob2QKCWJ5dGUgMHg3MDcyNmY3NDY1NjM3NDY1NjQgLy8gInByb3RlY3RlZCIKCT09Cglhc3NlcnQKCgkvLyB0ZXN0cy9jb250cmFjdHMvaW5oZXJpdGFuY2UuYWxnby50czo4MgoJLy8gYXNzZXJ0KHRoaXMucHVibGljTWV0aG9kKCkgPT09ICdwdWJsaWMnKQoJY2FsbHN1YiBwdWJsaWNNZXRob2QKCWJ5dGUgMHg3MDc1NjI2YzY5NjMgLy8gInB1YmxpYyIKCT09Cglhc3NlcnQKCXJldHN1YgoKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCWludCAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCW1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CgltZXRob2QgInB1YmxpY01ldGhvZCgpc3RyaW5nIgoJbWV0aG9kICJnKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9wdWJsaWNNZXRob2QgKmFiaV9yb3V0ZV9nCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoJZXJy",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiABASYCBnB1YmxpYwlwcm90ZWN0ZWQxGBSBBgsxGQiNDABSAAAAAAAAAAAAAABEAAAAAAAAAAAAAACABBUffHWIAAxJFRZXBgJMUFCwIkOKAAEoiYoAAYAHcHJpdmF0ZYmKAAEpiYgAAiJDigAAiP/wKRJEiP/YKBJEiSJDgAS4RHs2NhoAjgH/8QCABOBBjFSABPK2Xyc2GgCOAv+a/8YA",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 25,
      "patch": 0,
      "commitHash": "9855f57c"
    }
  }
}