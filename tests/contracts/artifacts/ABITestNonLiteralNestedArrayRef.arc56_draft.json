{
  "name": "ABITestNonLiteralNestedArrayRef",
  "desc": "",
  "methods": [
    {
      "name": "nonLiteralNestedArrayRef",
      "args": [],
      "returns": {
        "type": "uint8[2][2]"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:773",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:773",
          "pc": [
            1,
            2,
            3
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/abi.algo.ts:773",
          "pc": [
            4,
            5
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:773",
          "pc": [
            6
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:773",
          "pc": [
            7,
            8
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:773",
          "pc": [
            9
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:773",
          "pc": [
            10,
            11
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:773",
          "pc": [
            12
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:773",
          "pc": [
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/abi.algo.ts:773",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            39
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/abi.algo.ts:774",
          "pc": [
            40,
            41,
            42,
            43,
            44,
            45
          ]
        },
        {
          "teal": 32,
          "source": "tests/contracts/abi.algo.ts:774",
          "pc": [
            46,
            47,
            48
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/abi.algo.ts:774",
          "pc": [
            49
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:774",
          "pc": [
            50
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:774",
          "pc": [
            51,
            52
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/abi.algo.ts:774",
          "pc": [
            53
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/abi.algo.ts:774",
          "pc": [
            54,
            55,
            56
          ]
        },
        {
          "teal": 43,
          "source": "tests/contracts/abi.algo.ts:774",
          "pc": [
            57,
            58
          ]
        },
        {
          "teal": 44,
          "source": "tests/contracts/abi.algo.ts:774",
          "pc": [
            59,
            60
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/abi.algo.ts:775",
          "pc": [
            61,
            62,
            63,
            64,
            65,
            66
          ]
        },
        {
          "teal": 52,
          "source": "tests/contracts/abi.algo.ts:775",
          "pc": [
            67,
            68
          ]
        },
        {
          "teal": 56,
          "source": "tests/contracts/abi.algo.ts:780",
          "pc": [
            69,
            70
          ]
        },
        {
          "teal": 57,
          "source": "tests/contracts/abi.algo.ts:780",
          "pc": [
            71,
            72
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/abi.algo.ts:781",
          "pc": [
            73,
            74
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/abi.algo.ts:781",
          "pc": [
            75,
            76
          ]
        },
        {
          "teal": 63,
          "source": "tests/contracts/abi.algo.ts:783",
          "pc": [
            77,
            78,
            79
          ]
        },
        {
          "teal": 64,
          "source": "tests/contracts/abi.algo.ts:783",
          "pc": [
            80,
            81
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/abi.algo.ts:785",
          "pc": [
            82,
            83
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:785",
          "pc": [
            84,
            85
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/abi.algo.ts:785",
          "pc": [
            86,
            87
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/abi.algo.ts:785",
          "pc": [
            88
          ]
        },
        {
          "teal": 72,
          "source": "tests/contracts/abi.algo.ts:785",
          "pc": [
            89,
            90
          ]
        },
        {
          "teal": 73,
          "source": "tests/contracts/abi.algo.ts:785",
          "pc": [
            91
          ]
        },
        {
          "teal": 74,
          "source": "tests/contracts/abi.algo.ts:785",
          "pc": [
            92,
            93,
            94
          ]
        },
        {
          "teal": 75,
          "source": "tests/contracts/abi.algo.ts:785",
          "pc": [
            95
          ]
        },
        {
          "teal": 76,
          "source": "tests/contracts/abi.algo.ts:785",
          "pc": [
            96,
            97
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/abi.algo.ts:787",
          "pc": [
            98,
            99
          ]
        },
        {
          "teal": 83,
          "source": "tests/contracts/abi.algo.ts:774",
          "pc": [
            100,
            101
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/abi.algo.ts:774",
          "pc": [
            102,
            103
          ]
        },
        {
          "teal": 87,
          "source": "tests/contracts/abi.algo.ts:774",
          "pc": [
            104
          ]
        },
        {
          "teal": 90,
          "source": "tests/contracts/abi.algo.ts:773",
          "pc": [
            105,
            106
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/abi.algo.ts:773",
          "pc": [
            107
          ]
        },
        {
          "teal": 94,
          "source": "tests/contracts/abi.algo.ts:773",
          "pc": [
            108,
            109,
            110,
            111,
            112,
            113
          ]
        },
        {
          "teal": 95,
          "source": "tests/contracts/abi.algo.ts:773",
          "pc": [
            114,
            115,
            116
          ]
        },
        {
          "teal": 96,
          "source": "tests/contracts/abi.algo.ts:773",
          "pc": [
            117,
            118,
            119,
            120
          ]
        },
        {
          "teal": 99,
          "source": "tests/contracts/abi.algo.ts:773",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            121
          ]
        },
        {
          "teal": 102,
          "source": "tests/contracts/abi.algo.ts:773",
          "pc": [
            122,
            123,
            124,
            125,
            126,
            127
          ]
        },
        {
          "teal": 103,
          "source": "tests/contracts/abi.algo.ts:773",
          "pc": [
            128,
            129,
            130
          ]
        },
        {
          "teal": 104,
          "source": "tests/contracts/abi.algo.ts:773",
          "pc": [
            131,
            132,
            133,
            134
          ]
        },
        {
          "teal": 107,
          "source": "tests/contracts/abi.algo.ts:773",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            135
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmJ5dGVjYmxvY2sgMHgKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuMTA0LjEKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCnB1c2hpbnQgNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyBub25MaXRlcmFsTmVzdGVkQXJyYXlSZWYoKXVpbnQ4WzJdWzJdCiphYmlfcm91dGVfbm9uTGl0ZXJhbE5lc3RlZEFycmF5UmVmOgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglwdXNoYnl0ZXMgMHgxNTFmN2M3NQoKCS8vIGV4ZWN1dGUgbm9uTGl0ZXJhbE5lc3RlZEFycmF5UmVmKCl1aW50OFsyXVsyXQoJY2FsbHN1YiBub25MaXRlcmFsTmVzdGVkQXJyYXlSZWYKCWNvbmNhdAoJbG9nCglwdXNoaW50IDEKCXJldHVybgoKLy8gbm9uTGl0ZXJhbE5lc3RlZEFycmF5UmVmKCk6IFN0YXRpY0FycmF5PFN0YXRpY0FycmF5PHVpbnQ8OD4sIDI+LCAyPgpub25MaXRlcmFsTmVzdGVkQXJyYXlSZWY6Cglwcm90byAwIDEKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZSAweAoJZHVwbiAyCgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjc3NQoJLy8gYTogU3RhdGljQXJyYXk8U3RhdGljQXJyYXk8dWludDw4PiwgMj4sIDI+ID0gWwoJLy8gICAgICAgWzEsIDJdLAoJLy8gICAgICAgWzMsIDRdLAoJLy8gICAgIF0KCXB1c2hieXRlcyAweDAxMDIwMzA0CglmcmFtZV9idXJ5IDAgLy8gYTogU3RhdGljQXJyYXk8U3RhdGljQXJyYXk8dWludDw4PiwgMj4sIDI+CgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjc4MAoJLy8gaSA9IDEKCXB1c2hpbnQgMQoJZnJhbWVfYnVyeSAxIC8vIGk6IHVpbnQ2NAoJZnJhbWVfZGlnIDEgLy8gaTogdWludDY0CglmcmFtZV9idXJ5IDIgLy8gYWNjZXNzb3I6IGFjY2Vzc29yLy8wLy9iCgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjc4MwoJLy8gaSA9IDEzMzcKCXB1c2hpbnQgMTMzNwoJZnJhbWVfYnVyeSAxIC8vIGk6IHVpbnQ2NAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czo3ODUKCS8vIGJbMV0gPSA1IGFzIHVpbnQ8OD4KCWZyYW1lX2RpZyAwIC8vIGE6IFN0YXRpY0FycmF5PFN0YXRpY0FycmF5PHVpbnQ8OD4sIDI+LCAyPgoJZnJhbWVfZGlnIDIgLy8gc2F2ZWQgYWNjZXNzb3I6IGFjY2Vzc29yLy8wLy9iCglwdXNoaW50IDIKCSogLy8gYWNjICogdHlwZUxlbmd0aAoJcHVzaGludCAxCgkrCglwdXNoYnl0ZXMgMHgwNQoJcmVwbGFjZTMKCWZyYW1lX2J1cnkgMCAvLyBiOiBTdGF0aWNBcnJheTxTdGF0aWNBcnJheTx1aW50PDg+LCAyPiwgMj4KCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6Nzg3CgkvLyByZXR1cm4gYTsKCWZyYW1lX2RpZyAwIC8vIGE6IFN0YXRpY0FycmF5PFN0YXRpY0FycmF5PHVpbnQ8OD4sIDI+LCAyPgoKCS8vIHNldCB0aGUgc3Vicm91dGluZSByZXR1cm4gdmFsdWUKCWZyYW1lX2J1cnkgMAoKCS8vIHBvcCBhbGwgbG9jYWwgdmFyaWFibGVzIGZyb20gdGhlIHN0YWNrCglwb3BuIDIKCXJldHN1YgoKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCXB1c2hpbnQgMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CglwdXNoYnl0ZXMgMHhiODQ0N2IzNiAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJcHVzaGJ5dGVzIDB4ZTk0MGM2M2EgLy8gbWV0aG9kICJub25MaXRlcmFsTmVzdGVkQXJyYXlSZWYoKXVpbnQ4WzJdWzJdIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9ub25MaXRlcmFsTmVzdGVkQXJyYXlSZWYKCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY2FsbCBOb09wCgllcnI=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiYBADEYFIEGCzEZCI0MAFMAAAAAAAAAAAAAAEUAAAAAAAAAAAAAAIAEFR98dYgABVCwgQFDigABgABHAoAEAQIDBIwAgQGMAYsBjAKBuQqMAYsAiwKBAguBAQiAAQVdjACLAIwARgKJgQFDgAS4RHs2NhoAjgH/8ACABOlAxjo2GgCOAf+hAA==",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}