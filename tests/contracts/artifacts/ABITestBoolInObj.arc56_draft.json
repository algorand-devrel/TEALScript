{
  "name": "ABITestBoolInObj",
  "desc": "",
  "methods": [
    {
      "name": "boolInObj",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": [
      {
        "teal": 1,
        "source": 1223,
        "pc": [
          0
        ]
      },
      {
        "teal": 2,
        "source": 1223,
        "pc": [
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      {
        "teal": 3,
        "source": 1223,
        "pc": [
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21
        ]
      },
      {
        "teal": 15,
        "source": 1223,
        "pc": [
          22,
          23
        ]
      },
      {
        "teal": 16,
        "source": 1223,
        "pc": [
          24
        ]
      },
      {
        "teal": 17,
        "source": 1223,
        "pc": [
          25,
          26
        ]
      },
      {
        "teal": 18,
        "source": 1223,
        "pc": [
          27
        ]
      },
      {
        "teal": 19,
        "source": 1223,
        "pc": [
          28,
          29
        ]
      },
      {
        "teal": 20,
        "source": 1223,
        "pc": [
          30
        ]
      },
      {
        "teal": 21,
        "source": 1223,
        "pc": [
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56
        ]
      },
      {
        "teal": 25,
        "source": 1223,
        "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
        "pc": [
          57
        ]
      },
      {
        "teal": 30,
        "source": 1224,
        "pc": [
          58,
          59,
          60
        ]
      },
      {
        "teal": 31,
        "source": 1224,
        "pc": [
          61,
          62
        ]
      },
      {
        "teal": 32,
        "source": 1224,
        "pc": [
          63
        ]
      },
      {
        "teal": 36,
        "source": 1224,
        "pc": [
          64,
          65,
          66
        ]
      },
      {
        "teal": 39,
        "source": 1224,
        "pc": [
          67,
          68
        ]
      },
      {
        "teal": 43,
        "source": 1225,
        "pc": [
          69,
          70,
          71
        ]
      },
      {
        "teal": 44,
        "source": 1225,
        "pc": [
          72,
          73
        ]
      },
      {
        "teal": 45,
        "source": 1225,
        "pc": [
          74,
          75
        ]
      },
      {
        "teal": 46,
        "source": 1225,
        "pc": [
          76
        ]
      },
      {
        "teal": 47,
        "source": 1225,
        "pc": [
          77,
          78
        ]
      },
      {
        "teal": 48,
        "source": 1225,
        "pc": [
          79
        ]
      },
      {
        "teal": 49,
        "source": 1225,
        "pc": [
          80
        ]
      },
      {
        "teal": 50,
        "source": 1225,
        "pc": [
          81,
          82
        ]
      },
      {
        "teal": 51,
        "source": 1225,
        "pc": [
          83,
          84
        ]
      },
      {
        "teal": 52,
        "source": 1225,
        "pc": [
          85
        ]
      },
      {
        "teal": 53,
        "source": 1225,
        "pc": [
          86,
          87
        ]
      },
      {
        "teal": 57,
        "source": 1226,
        "pc": [
          88,
          89
        ]
      },
      {
        "teal": 58,
        "source": 1226,
        "pc": [
          90,
          91
        ]
      },
      {
        "teal": 59,
        "source": 1226,
        "pc": [
          92,
          93
        ]
      },
      {
        "teal": 60,
        "source": 1226,
        "pc": [
          94,
          95
        ]
      },
      {
        "teal": 61,
        "source": 1226,
        "pc": [
          96,
          97
        ]
      },
      {
        "teal": 62,
        "source": 1226,
        "pc": [
          98
        ]
      },
      {
        "teal": 63,
        "source": 1226,
        "pc": [
          99,
          100
        ]
      },
      {
        "teal": 67,
        "source": 1227,
        "pc": [
          101,
          102
        ]
      },
      {
        "teal": 68,
        "source": 1227,
        "pc": [
          103,
          104
        ]
      },
      {
        "teal": 69,
        "source": 1227,
        "pc": [
          105,
          106
        ]
      },
      {
        "teal": 70,
        "source": 1227,
        "pc": [
          107,
          108
        ]
      },
      {
        "teal": 71,
        "source": 1227,
        "pc": [
          109
        ]
      },
      {
        "teal": 72,
        "source": 1227,
        "pc": [
          110,
          111
        ]
      },
      {
        "teal": 73,
        "source": 1227,
        "pc": [
          112
        ]
      },
      {
        "teal": 76,
        "source": 1227,
        "errorMessage": "asserts failed: asserts(x.foo === true, x.bar === false, x.baz === true)",
        "pc": [
          113
        ]
      },
      {
        "teal": 77,
        "source": 1227,
        "pc": [
          114,
          115
        ]
      },
      {
        "teal": 78,
        "source": 1227,
        "pc": [
          116,
          117
        ]
      },
      {
        "teal": 79,
        "source": 1227,
        "pc": [
          118,
          119
        ]
      },
      {
        "teal": 80,
        "source": 1227,
        "pc": [
          120,
          121
        ]
      },
      {
        "teal": 81,
        "source": 1227,
        "pc": [
          122
        ]
      },
      {
        "teal": 82,
        "source": 1227,
        "pc": [
          123,
          124
        ]
      },
      {
        "teal": 83,
        "source": 1227,
        "pc": [
          125
        ]
      },
      {
        "teal": 86,
        "source": 1227,
        "errorMessage": "asserts failed: asserts(x.foo === true, x.bar === false, x.baz === true)",
        "pc": [
          126
        ]
      },
      {
        "teal": 87,
        "source": 1227,
        "pc": [
          127,
          128
        ]
      },
      {
        "teal": 88,
        "source": 1227,
        "pc": [
          129,
          130
        ]
      },
      {
        "teal": 89,
        "source": 1227,
        "pc": [
          131,
          132
        ]
      },
      {
        "teal": 90,
        "source": 1227,
        "pc": [
          133,
          134
        ]
      },
      {
        "teal": 91,
        "source": 1227,
        "pc": [
          135
        ]
      },
      {
        "teal": 92,
        "source": 1227,
        "pc": [
          136,
          137
        ]
      },
      {
        "teal": 93,
        "source": 1227,
        "pc": [
          138
        ]
      },
      {
        "teal": 96,
        "source": 1227,
        "errorMessage": "asserts failed: asserts(x.foo === true, x.bar === false, x.baz === true)",
        "pc": [
          139
        ]
      },
      {
        "teal": 97,
        "source": 1224,
        "pc": [
          140
        ]
      },
      {
        "teal": 100,
        "source": 1223,
        "pc": [
          141,
          142
        ]
      },
      {
        "teal": 101,
        "source": 1223,
        "pc": [
          143
        ]
      },
      {
        "teal": 104,
        "source": 1223,
        "pc": [
          144,
          145,
          146,
          147,
          148,
          149
        ]
      },
      {
        "teal": 105,
        "source": 1223,
        "pc": [
          150,
          151,
          152
        ]
      },
      {
        "teal": 106,
        "source": 1223,
        "pc": [
          153,
          154,
          155,
          156
        ]
      },
      {
        "teal": 109,
        "source": 1223,
        "errorMessage": "this contract does not implement the given ABI method for create NoOp",
        "pc": [
          157
        ]
      },
      {
        "teal": 112,
        "source": 1223,
        "pc": [
          158,
          159,
          160,
          161,
          162,
          163
        ]
      },
      {
        "teal": 113,
        "source": 1223,
        "pc": [
          164,
          165,
          166
        ]
      },
      {
        "teal": 114,
        "source": 1223,
        "pc": [
          167,
          168,
          169,
          170
        ]
      },
      {
        "teal": 117,
        "source": 1223,
        "errorMessage": "this contract does not implement the given ABI method for call NoOp",
        "pc": [
          171
        ]
      }
    ],
    "clear": []
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxIDAgMiA2CmJ5dGVjYmxvY2sgMHhiODQ0N2IzNiAweGU2N2M4ZmNiIDB4MDAgMHgKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuMTAyLjAKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCmludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIGJvb2xJbk9iaigpdm9pZAoqYWJpX3JvdXRlX2Jvb2xJbk9iajoKCS8vIGV4ZWN1dGUgYm9vbEluT2JqKCl2b2lkCgljYWxsc3ViIGJvb2xJbk9iagoJaW50IDEKCXJldHVybgoKLy8gYm9vbEluT2JqKCk6IHZvaWQKYm9vbEluT2JqOgoJcHJvdG8gMCAwCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGUgMHgKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTIyNQoJLy8geDogeyBmb286IGJvb2xlYW47IGJhcjogYm9vbGVhbjsgYmF6OiBib29sZWFuIH0gPSB7IGZvbzogdHJ1ZSwgYmFyOiB0cnVlLCBiYXo6IHRydWUgfQoJYnl0ZSAweDAwCglpbnQgMAoJaW50IDEKCXNldGJpdAoJaW50IDEKCWR1cAoJc2V0Yml0CglpbnQgMgoJaW50IDEKCXNldGJpdAoJZnJhbWVfYnVyeSAwIC8vIHg6IHsgZm9vOiBib29sZWFuOyBiYXI6IGJvb2xlYW47IGJhejogYm9vbGVhbiB9CgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjEyMjYKCS8vIHguYmFyID0gZmFsc2UKCWZyYW1lX2RpZyAwIC8vIHg6IHsgZm9vOiBib29sZWFuOyBiYXI6IGJvb2xlYW47IGJhejogYm9vbGVhbiB9CglzdG9yZSAyNTUgLy8gZnVsbCBhcnJheQoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJaW50IDEKCWludCAwCglzZXRiaXQKCWZyYW1lX2J1cnkgMCAvLyB4OiB7IGZvbzogYm9vbGVhbjsgYmFyOiBib29sZWFuOyBiYXo6IGJvb2xlYW4gfQoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czoxMjI3CgkvLyBhc3NlcnRzKHguZm9vID09PSB0cnVlLCB4LmJhciA9PT0gZmFsc2UsIHguYmF6ID09PSB0cnVlKQoJZnJhbWVfZGlnIDAgLy8geDogeyBmb286IGJvb2xlYW47IGJhcjogYm9vbGVhbjsgYmF6OiBib29sZWFuIH0KCXN0b3JlIDI1NSAvLyBmdWxsIGFycmF5Cglsb2FkIDI1NSAvLyBmdWxsIGFycmF5CglpbnQgMAoJZ2V0Yml0CglpbnQgMQoJPT0KCgkvLyBhc3NlcnRzIGZhaWxlZDogYXNzZXJ0cyh4LmZvbyA9PT0gdHJ1ZSwgeC5iYXIgPT09IGZhbHNlLCB4LmJheiA9PT0gdHJ1ZSkKCWFzc2VydAoJZnJhbWVfZGlnIDAgLy8geDogeyBmb286IGJvb2xlYW47IGJhcjogYm9vbGVhbjsgYmF6OiBib29sZWFuIH0KCXN0b3JlIDI1NSAvLyBmdWxsIGFycmF5Cglsb2FkIDI1NSAvLyBmdWxsIGFycmF5CglpbnQgMQoJZ2V0Yml0CglpbnQgMAoJPT0KCgkvLyBhc3NlcnRzIGZhaWxlZDogYXNzZXJ0cyh4LmZvbyA9PT0gdHJ1ZSwgeC5iYXIgPT09IGZhbHNlLCB4LmJheiA9PT0gdHJ1ZSkKCWFzc2VydAoJZnJhbWVfZGlnIDAgLy8geDogeyBmb286IGJvb2xlYW47IGJhcjogYm9vbGVhbjsgYmF6OiBib29sZWFuIH0KCXN0b3JlIDI1NSAvLyBmdWxsIGFycmF5Cglsb2FkIDI1NSAvLyBmdWxsIGFycmF5CglpbnQgMgoJZ2V0Yml0CglpbnQgMQoJPT0KCgkvLyBhc3NlcnRzIGZhaWxlZDogYXNzZXJ0cyh4LmZvbyA9PT0gdHJ1ZSwgeC5iYXIgPT09IGZhbHNlLCB4LmJheiA9PT0gdHJ1ZSkKCWFzc2VydAoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJaW50IDEKCXJldHVybgoKKmNyZWF0ZV9Ob09wOgoJYnl0ZSAweGI4NDQ3YjM2IC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglieXRlIDB4ZTY3YzhmY2IgLy8gbWV0aG9kICJib29sSW5PYmooKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2Jvb2xJbk9iagoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiAEAQACBiYEBLhEezYE5nyPywEAADEYFIEGCzEZCI0MAGUAAAAAAAAAAAAAAFcAAAAAAAAAAAAAAIgAA4EBQ4oAAIAAgAEAgQCBAVSBAUlUgQKBAVSMAIsANf80/4EBgQBUjACLADX/NP+BAFOBARJEiwA1/zT/gQFTgQASRIsANf80/4ECU4EBEkSJgQFDgAS4RHs2NhoAjgH/8ACABOZ8j8s2GgCOAf+PAA==",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 25,
      "patch": 0,
      "commitHash": "9855f57c"
    }
  }
}