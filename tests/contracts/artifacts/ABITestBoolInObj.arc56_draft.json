{
  "name": "ABITestBoolInObj",
  "desc": "",
  "methods": [
    {
      "name": "boolInObj",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            1,
            2,
            3
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            4,
            5
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            6
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            7,
            8
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            9
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            10,
            11
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            12
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/abi.algo.ts:1223",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            39
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/abi.algo.ts:1224",
          "pc": [
            40,
            41,
            42
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/abi.algo.ts:1224",
          "pc": [
            43,
            44
          ]
        },
        {
          "teal": 31,
          "source": "tests/contracts/abi.algo.ts:1224",
          "pc": [
            45
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:1224",
          "pc": [
            46,
            47,
            48
          ]
        },
        {
          "teal": 38,
          "source": "tests/contracts/abi.algo.ts:1224",
          "pc": [
            49,
            50
          ]
        },
        {
          "teal": 42,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            51,
            52,
            53
          ]
        },
        {
          "teal": 43,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            54,
            55
          ]
        },
        {
          "teal": 44,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            56,
            57
          ]
        },
        {
          "teal": 45,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            58
          ]
        },
        {
          "teal": 46,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            59,
            60
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            61
          ]
        },
        {
          "teal": 48,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            62
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            63,
            64
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            65,
            66
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            67
          ]
        },
        {
          "teal": 52,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            68,
            69
          ]
        },
        {
          "teal": 56,
          "source": "tests/contracts/abi.algo.ts:1226",
          "pc": [
            70,
            71
          ]
        },
        {
          "teal": 57,
          "source": "tests/contracts/abi.algo.ts:1226",
          "pc": [
            72,
            73
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/abi.algo.ts:1226",
          "pc": [
            74,
            75
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/abi.algo.ts:1226",
          "pc": [
            76,
            77
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/abi.algo.ts:1226",
          "pc": [
            78,
            79
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/abi.algo.ts:1226",
          "pc": [
            80
          ]
        },
        {
          "teal": 62,
          "source": "tests/contracts/abi.algo.ts:1226",
          "pc": [
            81,
            82
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            83,
            84
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            85,
            86
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            87,
            88
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            89,
            90
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            91
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            92,
            93
          ]
        },
        {
          "teal": 72,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            94
          ]
        },
        {
          "teal": 75,
          "source": "tests/contracts/abi.algo.ts:1227",
          "errorMessage": "asserts failed: asserts(x.foo === true, x.bar === false, x.baz === true)",
          "pc": [
            95
          ]
        },
        {
          "teal": 76,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            96,
            97
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            98,
            99
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            100,
            101
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            102,
            103
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            104
          ]
        },
        {
          "teal": 81,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            105,
            106
          ]
        },
        {
          "teal": 82,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            107
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/abi.algo.ts:1227",
          "errorMessage": "asserts failed: asserts(x.foo === true, x.bar === false, x.baz === true)",
          "pc": [
            108
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            109,
            110
          ]
        },
        {
          "teal": 87,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            111,
            112
          ]
        },
        {
          "teal": 88,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            113,
            114
          ]
        },
        {
          "teal": 89,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            115,
            116
          ]
        },
        {
          "teal": 90,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            117
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            118,
            119
          ]
        },
        {
          "teal": 92,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            120
          ]
        },
        {
          "teal": 95,
          "source": "tests/contracts/abi.algo.ts:1227",
          "errorMessage": "asserts failed: asserts(x.foo === true, x.bar === false, x.baz === true)",
          "pc": [
            121
          ]
        },
        {
          "teal": 96,
          "source": "tests/contracts/abi.algo.ts:1224",
          "pc": [
            122
          ]
        },
        {
          "teal": 99,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            123,
            124
          ]
        },
        {
          "teal": 100,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            125
          ]
        },
        {
          "teal": 103,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            126,
            127,
            128,
            129,
            130,
            131
          ]
        },
        {
          "teal": 104,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            132,
            133,
            134
          ]
        },
        {
          "teal": 105,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            135,
            136,
            137,
            138
          ]
        },
        {
          "teal": 108,
          "source": "tests/contracts/abi.algo.ts:1223",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            139
          ]
        },
        {
          "teal": 111,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            140,
            141,
            142,
            143,
            144,
            145
          ]
        },
        {
          "teal": 112,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            146,
            147,
            148
          ]
        },
        {
          "teal": 113,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            149,
            150,
            151,
            152
          ]
        },
        {
          "teal": 116,
          "source": "tests/contracts/abi.algo.ts:1223",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            153
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwNS4wCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQpwdXNoaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gYm9vbEluT2JqKCl2b2lkCiphYmlfcm91dGVfYm9vbEluT2JqOgoJLy8gZXhlY3V0ZSBib29sSW5PYmooKXZvaWQKCWNhbGxzdWIgYm9vbEluT2JqCglpbnQgMQoJcmV0dXJuCgovLyBib29sSW5PYmooKTogdm9pZApib29sSW5PYmo6Cglwcm90byAwIDAKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJcHVzaGJ5dGVzIDB4CgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjEyMjUKCS8vIHg6IHsgZm9vOiBib29sZWFuOyBiYXI6IGJvb2xlYW47IGJhejogYm9vbGVhbiB9ID0geyBmb286IHRydWUsIGJhcjogdHJ1ZSwgYmF6OiB0cnVlIH0KCXB1c2hieXRlcyAweDAwCglwdXNoaW50IDAKCWludCAxCglzZXRiaXQKCWludCAxCglkdXAKCXNldGJpdAoJcHVzaGludCAyCglpbnQgMQoJc2V0Yml0CglmcmFtZV9idXJ5IDAgLy8geDogeyBmb286IGJvb2xlYW47IGJhcjogYm9vbGVhbjsgYmF6OiBib29sZWFuIH0KCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTIyNgoJLy8geC5iYXIgPSBmYWxzZQoJZnJhbWVfZGlnIDAgLy8geDogeyBmb286IGJvb2xlYW47IGJhcjogYm9vbGVhbjsgYmF6OiBib29sZWFuIH0KCXN0b3JlIDI1NSAvLyBmdWxsIGFycmF5Cglsb2FkIDI1NSAvLyBmdWxsIGFycmF5CglpbnQgMQoJcHVzaGludCAwCglzZXRiaXQKCWZyYW1lX2J1cnkgMCAvLyB4OiB7IGZvbzogYm9vbGVhbjsgYmFyOiBib29sZWFuOyBiYXo6IGJvb2xlYW4gfQoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czoxMjI3CgkvLyBhc3NlcnRzKHguZm9vID09PSB0cnVlLCB4LmJhciA9PT0gZmFsc2UsIHguYmF6ID09PSB0cnVlKQoJZnJhbWVfZGlnIDAgLy8geDogeyBmb286IGJvb2xlYW47IGJhcjogYm9vbGVhbjsgYmF6OiBib29sZWFuIH0KCXN0b3JlIDI1NSAvLyBmdWxsIGFycmF5Cglsb2FkIDI1NSAvLyBmdWxsIGFycmF5CglwdXNoaW50IDAKCWdldGJpdAoJaW50IDEKCT09CgoJLy8gYXNzZXJ0cyBmYWlsZWQ6IGFzc2VydHMoeC5mb28gPT09IHRydWUsIHguYmFyID09PSBmYWxzZSwgeC5iYXogPT09IHRydWUpCglhc3NlcnQKCWZyYW1lX2RpZyAwIC8vIHg6IHsgZm9vOiBib29sZWFuOyBiYXI6IGJvb2xlYW47IGJhejogYm9vbGVhbiB9CglzdG9yZSAyNTUgLy8gZnVsbCBhcnJheQoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJaW50IDEKCWdldGJpdAoJcHVzaGludCAwCgk9PQoKCS8vIGFzc2VydHMgZmFpbGVkOiBhc3NlcnRzKHguZm9vID09PSB0cnVlLCB4LmJhciA9PT0gZmFsc2UsIHguYmF6ID09PSB0cnVlKQoJYXNzZXJ0CglmcmFtZV9kaWcgMCAvLyB4OiB7IGZvbzogYm9vbGVhbjsgYmFyOiBib29sZWFuOyBiYXo6IGJvb2xlYW4gfQoJc3RvcmUgMjU1IC8vIGZ1bGwgYXJyYXkKCWxvYWQgMjU1IC8vIGZ1bGwgYXJyYXkKCXB1c2hpbnQgMgoJZ2V0Yml0CglpbnQgMQoJPT0KCgkvLyBhc3NlcnRzIGZhaWxlZDogYXNzZXJ0cyh4LmZvbyA9PT0gdHJ1ZSwgeC5iYXIgPT09IGZhbHNlLCB4LmJheiA9PT0gdHJ1ZSkKCWFzc2VydAoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJaW50IDEKCXJldHVybgoKKmNyZWF0ZV9Ob09wOgoJcHVzaGJ5dGVzIDB4Yjg0NDdiMzYgLy8gbWV0aG9kICJjcmVhdGVBcHBsaWNhdGlvbigpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb24KCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY3JlYXRlIE5vT3AKCWVycgoKKmNhbGxfTm9PcDoKCXB1c2hieXRlcyAweGU2N2M4ZmNiIC8vIG1ldGhvZCAiYm9vbEluT2JqKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9ib29sSW5PYmoKCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY2FsbCBOb09wCgllcnI=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiABATEYFIEGCzEZCI0MAGUAAAAAAAAAAAAAAFcAAAAAAAAAAAAAAIgAA4EBQ4oAAIAAgAEAgQCBAVSBAUlUgQKBAVSMAIsANf80/4EBgQBUjACLADX/NP+BAFOBARJEiwA1/zT/gQFTgQASRIsANf80/4ECU4EBEkSJgQFDgAS4RHs2NhoAjgH/8ACABOZ8j8s2GgCOAf+PAA==",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}