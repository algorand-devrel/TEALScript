{
  "name": "ABITestBoolInObj",
  "desc": "",
  "methods": [
    {
      "name": "boolInObj",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": [
      {
        "teal": 1,
        "source": 1223,
        "pc": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      },
      {
        "teal": 13,
        "source": 1223,
        "pc": [
          6,
          7
        ]
      },
      {
        "teal": 14,
        "source": 1223,
        "pc": [
          8
        ]
      },
      {
        "teal": 15,
        "source": 1223,
        "pc": [
          9,
          10
        ]
      },
      {
        "teal": 16,
        "source": 1223,
        "pc": [
          11
        ]
      },
      {
        "teal": 17,
        "source": 1223,
        "pc": [
          12,
          13
        ]
      },
      {
        "teal": 18,
        "source": 1223,
        "pc": [
          14
        ]
      },
      {
        "teal": 19,
        "source": 1223,
        "pc": [
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40
        ]
      },
      {
        "teal": 23,
        "source": 1223,
        "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
        "pc": [
          41
        ]
      },
      {
        "teal": 28,
        "source": 1224,
        "pc": [
          42,
          43,
          44
        ]
      },
      {
        "teal": 29,
        "source": 1224,
        "pc": [
          45
        ]
      },
      {
        "teal": 30,
        "source": 1224,
        "pc": [
          46
        ]
      },
      {
        "teal": 34,
        "source": 1224,
        "pc": [
          47,
          48,
          49
        ]
      },
      {
        "teal": 37,
        "source": 1224,
        "pc": [
          50,
          51
        ]
      },
      {
        "teal": 41,
        "source": 1225,
        "pc": [
          52,
          53,
          54
        ]
      },
      {
        "teal": 42,
        "source": 1225,
        "pc": [
          55
        ]
      },
      {
        "teal": 43,
        "source": 1225,
        "pc": [
          56
        ]
      },
      {
        "teal": 44,
        "source": 1225,
        "pc": [
          57
        ]
      },
      {
        "teal": 45,
        "source": 1225,
        "pc": [
          58
        ]
      },
      {
        "teal": 46,
        "source": 1225,
        "pc": [
          59
        ]
      },
      {
        "teal": 47,
        "source": 1225,
        "pc": [
          60
        ]
      },
      {
        "teal": 48,
        "source": 1225,
        "pc": [
          61
        ]
      },
      {
        "teal": 49,
        "source": 1225,
        "pc": [
          62
        ]
      },
      {
        "teal": 50,
        "source": 1225,
        "pc": [
          63
        ]
      },
      {
        "teal": 51,
        "source": 1225,
        "pc": [
          64,
          65
        ]
      },
      {
        "teal": 55,
        "source": 1226,
        "pc": [
          66,
          67
        ]
      },
      {
        "teal": 56,
        "source": 1226,
        "pc": [
          68,
          69
        ]
      },
      {
        "teal": 57,
        "source": 1226,
        "pc": [
          70,
          71
        ]
      },
      {
        "teal": 58,
        "source": 1226,
        "pc": [
          72
        ]
      },
      {
        "teal": 59,
        "source": 1226,
        "pc": [
          73
        ]
      },
      {
        "teal": 60,
        "source": 1226,
        "pc": [
          74
        ]
      },
      {
        "teal": 61,
        "source": 1226,
        "pc": [
          75,
          76
        ]
      },
      {
        "teal": 65,
        "source": 1227,
        "pc": [
          77,
          78
        ]
      },
      {
        "teal": 66,
        "source": 1227,
        "pc": [
          79,
          80
        ]
      },
      {
        "teal": 67,
        "source": 1227,
        "pc": [
          81,
          82
        ]
      },
      {
        "teal": 68,
        "source": 1227,
        "pc": [
          83
        ]
      },
      {
        "teal": 69,
        "source": 1227,
        "pc": [
          84
        ]
      },
      {
        "teal": 70,
        "source": 1227,
        "pc": [
          85
        ]
      },
      {
        "teal": 71,
        "source": 1227,
        "pc": [
          86
        ]
      },
      {
        "teal": 74,
        "source": 1227,
        "errorMessage": "asserts failed: asserts(x.foo === true, x.bar === false, x.baz === true)",
        "pc": [
          87
        ]
      },
      {
        "teal": 75,
        "source": 1227,
        "pc": [
          88,
          89
        ]
      },
      {
        "teal": 76,
        "source": 1227,
        "pc": [
          90,
          91
        ]
      },
      {
        "teal": 77,
        "source": 1227,
        "pc": [
          92,
          93
        ]
      },
      {
        "teal": 78,
        "source": 1227,
        "pc": [
          94
        ]
      },
      {
        "teal": 79,
        "source": 1227,
        "pc": [
          95
        ]
      },
      {
        "teal": 80,
        "source": 1227,
        "pc": [
          96
        ]
      },
      {
        "teal": 81,
        "source": 1227,
        "pc": [
          97
        ]
      },
      {
        "teal": 84,
        "source": 1227,
        "errorMessage": "asserts failed: asserts(x.foo === true, x.bar === false, x.baz === true)",
        "pc": [
          98
        ]
      },
      {
        "teal": 85,
        "source": 1227,
        "pc": [
          99,
          100
        ]
      },
      {
        "teal": 86,
        "source": 1227,
        "pc": [
          101,
          102
        ]
      },
      {
        "teal": 87,
        "source": 1227,
        "pc": [
          103,
          104
        ]
      },
      {
        "teal": 88,
        "source": 1227,
        "pc": [
          105
        ]
      },
      {
        "teal": 89,
        "source": 1227,
        "pc": [
          106
        ]
      },
      {
        "teal": 90,
        "source": 1227,
        "pc": [
          107
        ]
      },
      {
        "teal": 91,
        "source": 1227,
        "pc": [
          108
        ]
      },
      {
        "teal": 94,
        "source": 1227,
        "errorMessage": "asserts failed: asserts(x.foo === true, x.bar === false, x.baz === true)",
        "pc": [
          109
        ]
      },
      {
        "teal": 95,
        "source": 1224,
        "pc": [
          110
        ]
      },
      {
        "teal": 98,
        "source": 1223,
        "pc": [
          111
        ]
      },
      {
        "teal": 99,
        "source": 1223,
        "pc": [
          112
        ]
      },
      {
        "teal": 102,
        "source": 1223,
        "pc": [
          113,
          114,
          115,
          116,
          117,
          118
        ]
      },
      {
        "teal": 103,
        "source": 1223,
        "pc": [
          119,
          120,
          121
        ]
      },
      {
        "teal": 104,
        "source": 1223,
        "pc": [
          122,
          123,
          124,
          125
        ]
      },
      {
        "teal": 107,
        "source": 1223,
        "errorMessage": "this contract does not implement the given ABI method for create NoOp",
        "pc": [
          126
        ]
      },
      {
        "teal": 110,
        "source": 1223,
        "pc": [
          127,
          128,
          129,
          130,
          131,
          132
        ]
      },
      {
        "teal": 111,
        "source": 1223,
        "pc": [
          133,
          134,
          135
        ]
      },
      {
        "teal": 112,
        "source": 1223,
        "pc": [
          136,
          137,
          138,
          139
        ]
      },
      {
        "teal": 115,
        "source": 1223,
        "errorMessage": "this contract does not implement the given ABI method for call NoOp",
        "pc": [
          140
        ]
      }
    ],
    "clear": []
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwMy4yCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQppbnQgNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyBib29sSW5PYmooKXZvaWQKKmFiaV9yb3V0ZV9ib29sSW5PYmo6CgkvLyBleGVjdXRlIGJvb2xJbk9iaigpdm9pZAoJY2FsbHN1YiBib29sSW5PYmoKCWludCAxCglyZXR1cm4KCi8vIGJvb2xJbk9iaigpOiB2b2lkCmJvb2xJbk9iajoKCXByb3RvIDAgMAoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlIDB4CgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjEyMjUKCS8vIHg6IHsgZm9vOiBib29sZWFuOyBiYXI6IGJvb2xlYW47IGJhejogYm9vbGVhbiB9ID0geyBmb286IHRydWUsIGJhcjogdHJ1ZSwgYmF6OiB0cnVlIH0KCWJ5dGUgMHgwMAoJaW50IDAKCWludCAxCglzZXRiaXQKCWludCAxCglkdXAKCXNldGJpdAoJaW50IDIKCWludCAxCglzZXRiaXQKCWZyYW1lX2J1cnkgMCAvLyB4OiB7IGZvbzogYm9vbGVhbjsgYmFyOiBib29sZWFuOyBiYXo6IGJvb2xlYW4gfQoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czoxMjI2CgkvLyB4LmJhciA9IGZhbHNlCglmcmFtZV9kaWcgMCAvLyB4OiB7IGZvbzogYm9vbGVhbjsgYmFyOiBib29sZWFuOyBiYXo6IGJvb2xlYW4gfQoJc3RvcmUgMjU1IC8vIGZ1bGwgYXJyYXkKCWxvYWQgMjU1IC8vIGZ1bGwgYXJyYXkKCWludCAxCglpbnQgMAoJc2V0Yml0CglmcmFtZV9idXJ5IDAgLy8geDogeyBmb286IGJvb2xlYW47IGJhcjogYm9vbGVhbjsgYmF6OiBib29sZWFuIH0KCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTIyNwoJLy8gYXNzZXJ0cyh4LmZvbyA9PT0gdHJ1ZSwgeC5iYXIgPT09IGZhbHNlLCB4LmJheiA9PT0gdHJ1ZSkKCWZyYW1lX2RpZyAwIC8vIHg6IHsgZm9vOiBib29sZWFuOyBiYXI6IGJvb2xlYW47IGJhejogYm9vbGVhbiB9CglzdG9yZSAyNTUgLy8gZnVsbCBhcnJheQoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJaW50IDAKCWdldGJpdAoJaW50IDEKCT09CgoJLy8gYXNzZXJ0cyBmYWlsZWQ6IGFzc2VydHMoeC5mb28gPT09IHRydWUsIHguYmFyID09PSBmYWxzZSwgeC5iYXogPT09IHRydWUpCglhc3NlcnQKCWZyYW1lX2RpZyAwIC8vIHg6IHsgZm9vOiBib29sZWFuOyBiYXI6IGJvb2xlYW47IGJhejogYm9vbGVhbiB9CglzdG9yZSAyNTUgLy8gZnVsbCBhcnJheQoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJaW50IDEKCWdldGJpdAoJaW50IDAKCT09CgoJLy8gYXNzZXJ0cyBmYWlsZWQ6IGFzc2VydHMoeC5mb28gPT09IHRydWUsIHguYmFyID09PSBmYWxzZSwgeC5iYXogPT09IHRydWUpCglhc3NlcnQKCWZyYW1lX2RpZyAwIC8vIHg6IHsgZm9vOiBib29sZWFuOyBiYXI6IGJvb2xlYW47IGJhejogYm9vbGVhbiB9CglzdG9yZSAyNTUgLy8gZnVsbCBhcnJheQoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJaW50IDIKCWdldGJpdAoJaW50IDEKCT09CgoJLy8gYXNzZXJ0cyBmYWlsZWQ6IGFzc2VydHMoeC5mb28gPT09IHRydWUsIHguYmFyID09PSBmYWxzZSwgeC5iYXogPT09IHRydWUpCglhc3NlcnQKCXJldHN1YgoKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCWludCAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCW1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CgltZXRob2QgImJvb2xJbk9iaigpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfYm9vbEluT2JqCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoJZXJy",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiADAQACMRgUgQYLMRkIjQwAVgAAAAAAAAAAAAAASAAAAAAAAAAAAAAAiAACIkOKAACAAIABACMiVCJJVCQiVIwAiwA1/zT/IiNUjACLADX/NP8jUyISRIsANf80/yJTIxJEiwA1/zT/JFMiEkSJIkOABLhEezY2GgCOAf/xAIAE5nyPyzYaAI4B/54A",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}