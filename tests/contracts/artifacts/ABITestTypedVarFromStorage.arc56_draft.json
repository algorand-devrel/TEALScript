{
  "name": "ABITestTypedVarFromStorage",
  "desc": "",
  "methods": [
    {
      "name": "typedVarFromStorage",
      "args": [
        {
          "name": "key",
          "type": "uint32"
        }
      ],
      "returns": {
        "type": "byte[32]"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {
        "boxMapTest": {
          "keyType": "uint32",
          "valueType": "byte[32]"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": [
      {
        "teal": 1,
        "source": 1296,
        "pc": [
          0
        ]
      },
      {
        "teal": 2,
        "source": 1296,
        "pc": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      {
        "teal": 3,
        "source": 1296,
        "pc": [
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23
        ]
      },
      {
        "teal": 15,
        "source": 1296,
        "pc": [
          24,
          25
        ]
      },
      {
        "teal": 16,
        "source": 1296,
        "pc": [
          26
        ]
      },
      {
        "teal": 17,
        "source": 1296,
        "pc": [
          27,
          28
        ]
      },
      {
        "teal": 18,
        "source": 1296,
        "pc": [
          29
        ]
      },
      {
        "teal": 19,
        "source": 1296,
        "pc": [
          30,
          31
        ]
      },
      {
        "teal": 20,
        "source": 1296,
        "pc": [
          32
        ]
      },
      {
        "teal": 21,
        "source": 1296,
        "pc": [
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58
        ]
      },
      {
        "teal": 25,
        "source": 1296,
        "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
        "pc": [
          59
        ]
      },
      {
        "teal": 30,
        "source": 1299,
        "pc": [
          60,
          61,
          62,
          63,
          64,
          65
        ]
      },
      {
        "teal": 33,
        "source": 1299,
        "pc": [
          66,
          67,
          68
        ]
      },
      {
        "teal": 34,
        "source": 1299,
        "pc": [
          69
        ]
      },
      {
        "teal": 35,
        "source": 1299,
        "pc": [
          70
        ]
      },
      {
        "teal": 36,
        "source": 1299,
        "pc": [
          71,
          72
        ]
      },
      {
        "teal": 37,
        "source": 1299,
        "pc": [
          73
        ]
      },
      {
        "teal": 40,
        "source": 1299,
        "errorMessage": "argument 0 (key) for typedVarFromStorage must be a uint32",
        "pc": [
          74
        ]
      },
      {
        "teal": 41,
        "source": 1299,
        "pc": [
          75
        ]
      },
      {
        "teal": 44,
        "source": 1299,
        "pc": [
          76,
          77,
          78
        ]
      },
      {
        "teal": 45,
        "source": 1299,
        "pc": [
          79
        ]
      },
      {
        "teal": 46,
        "source": 1299,
        "pc": [
          80
        ]
      },
      {
        "teal": 47,
        "source": 1299,
        "pc": [
          81,
          82
        ]
      },
      {
        "teal": 48,
        "source": 1299,
        "pc": [
          83
        ]
      },
      {
        "teal": 52,
        "source": 1299,
        "pc": [
          84,
          85,
          86
        ]
      },
      {
        "teal": 55,
        "source": 1299,
        "pc": [
          87,
          88
        ]
      },
      {
        "teal": 59,
        "source": 1300,
        "pc": [
          89,
          90
        ]
      },
      {
        "teal": 60,
        "source": 1300,
        "pc": [
          91
        ]
      },
      {
        "teal": 61,
        "source": 1300,
        "pc": [
          92,
          93,
          94
        ]
      },
      {
        "teal": 62,
        "source": 1300,
        "pc": [
          95,
          96
        ]
      },
      {
        "teal": 66,
        "source": 1300,
        "pc": [
          97,
          98
        ]
      },
      {
        "teal": 67,
        "source": 1300,
        "pc": [
          99
        ]
      },
      {
        "teal": 70,
        "source": 1300,
        "errorMessage": "box value does not exist: this.boxMapTest(key).value",
        "pc": [
          100
        ]
      },
      {
        "teal": 73,
        "source": 1299,
        "pc": [
          101,
          102
        ]
      },
      {
        "teal": 74,
        "source": 1299,
        "pc": [
          103
        ]
      },
      {
        "teal": 77,
        "source": 1296,
        "pc": [
          104,
          105
        ]
      },
      {
        "teal": 78,
        "source": 1296,
        "pc": [
          106
        ]
      },
      {
        "teal": 81,
        "source": 1296,
        "pc": [
          107,
          108,
          109,
          110,
          111,
          112
        ]
      },
      {
        "teal": 82,
        "source": 1296,
        "pc": [
          113,
          114,
          115
        ]
      },
      {
        "teal": 83,
        "source": 1296,
        "pc": [
          116,
          117,
          118,
          119
        ]
      },
      {
        "teal": 86,
        "source": 1296,
        "errorMessage": "this contract does not implement the given ABI method for create NoOp",
        "pc": [
          120
        ]
      },
      {
        "teal": 89,
        "source": 1296,
        "pc": [
          121,
          122,
          123,
          124,
          125,
          126
        ]
      },
      {
        "teal": 90,
        "source": 1296,
        "pc": [
          127,
          128,
          129
        ]
      },
      {
        "teal": 91,
        "source": 1296,
        "pc": [
          130,
          131,
          132,
          133
        ]
      },
      {
        "teal": 94,
        "source": 1296,
        "errorMessage": "this contract does not implement the given ABI method for call NoOp",
        "pc": [
          134
        ]
      }
    ],
    "clear": []
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxIDQgNgpieXRlY2Jsb2NrIDB4MTUxZjdjNzUgMHhiODQ0N2IzNiAweDRjNTI5ZjU1IDB4CgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwMi4wCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQppbnQgNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyB0eXBlZFZhckZyb21TdG9yYWdlKHVpbnQzMilieXRlWzMyXQoqYWJpX3JvdXRlX3R5cGVkVmFyRnJvbVN0b3JhZ2U6CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCWJ5dGUgMHgxNTFmN2M3NQoKCS8vIGtleTogdWludDMyCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDQKCT09CgoJLy8gYXJndW1lbnQgMCAoa2V5KSBmb3IgdHlwZWRWYXJGcm9tU3RvcmFnZSBtdXN0IGJlIGEgdWludDMyCglhc3NlcnQKCWJ0b2kKCgkvLyBleGVjdXRlIHR5cGVkVmFyRnJvbVN0b3JhZ2UodWludDMyKWJ5dGVbMzJdCgljYWxsc3ViIHR5cGVkVmFyRnJvbVN0b3JhZ2UKCWNvbmNhdAoJbG9nCglpbnQgMQoJcmV0dXJuCgovLyB0eXBlZFZhckZyb21TdG9yYWdlKGtleTogdWludDwzMj4pOiBieXRlczMyCnR5cGVkVmFyRnJvbVN0b3JhZ2U6Cglwcm90byAxIDEKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZSAweAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czoxMzAwCgkvLyB2YWx1ZTogYnl0ZXMzMiA9IHRoaXMuYm94TWFwVGVzdChrZXkpLnZhbHVlCglmcmFtZV9kaWcgLTEgLy8ga2V5OiB1aW50PDMyPgoJaXRvYgoJZXh0cmFjdCA0IDQKCWZyYW1lX2J1cnkgMCAvLyBzdG9yYWdlIGtleS8vdmFsdWUKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTMwMgoJLy8gcmV0dXJuIHZhbHVlOwoJZnJhbWVfZGlnIDAgLy8gc3RvcmFnZSBrZXkvL3ZhbHVlCglib3hfZ2V0CgoJLy8gYm94IHZhbHVlIGRvZXMgbm90IGV4aXN0OiB0aGlzLmJveE1hcFRlc3Qoa2V5KS52YWx1ZQoJYXNzZXJ0CgoJLy8gc2V0IHRoZSBzdWJyb3V0aW5lIHJldHVybiB2YWx1ZQoJZnJhbWVfYnVyeSAwCglyZXRzdWIKCiphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CglpbnQgMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CglieXRlIDB4Yjg0NDdiMzYgLy8gbWV0aG9kICJjcmVhdGVBcHBsaWNhdGlvbigpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb24KCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY3JlYXRlIE5vT3AKCWVycgoKKmNhbGxfTm9PcDoKCWJ5dGUgMHg0YzUyOWY1NSAvLyBtZXRob2QgInR5cGVkVmFyRnJvbVN0b3JhZ2UodWludDMyKWJ5dGVbMzJdIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV90eXBlZFZhckZyb21TdG9yYWdlCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoJZXJy",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiADAQQGJgQEFR98dQS4RHs2BExSn1UAMRgUgQYLMRkIjQwAPgAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAgAQVH3x1NhoBSRWBBBJEF4gABVCwgQFDigEBgACL/xZXBASMAIsAvkSMAImBAUOABLhEezY2GgCOAf/wAIAETFKfVTYaAI4B/7YA",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 25,
      "patch": 0,
      "commitHash": "9855f57c"
    }
  }
}