{
  "name": "ABITestTypedVarFromStorage",
  "desc": "",
  "methods": [
    {
      "name": "typedVarFromStorage",
      "args": [
        {
          "name": "key",
          "type": "uint32"
        }
      ],
      "returns": {
        "type": "byte[32]"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {
        "boxMapTest": {
          "keyType": "uint32",
          "valueType": "byte[32]"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": [
    {
      "teal": 1,
      "source": 1296,
      "pc": [
        0,
        1,
        2,
        3
      ]
    },
    {
      "teal": 13,
      "source": 1296,
      "pc": [
        4,
        5
      ]
    },
    {
      "teal": 14,
      "source": 1296,
      "pc": [
        6
      ]
    },
    {
      "teal": 15,
      "source": 1296,
      "pc": [
        7,
        8
      ]
    },
    {
      "teal": 16,
      "source": 1296,
      "pc": [
        9
      ]
    },
    {
      "teal": 17,
      "source": 1296,
      "pc": [
        10,
        11
      ]
    },
    {
      "teal": 18,
      "source": 1296,
      "pc": [
        12
      ]
    },
    {
      "teal": 19,
      "source": 1296,
      "pc": [
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38
      ]
    },
    {
      "teal": 23,
      "source": 1296,
      "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "pc": [
        39
      ]
    },
    {
      "teal": 28,
      "source": 1299,
      "pc": [
        40,
        41,
        42,
        43,
        44,
        45
      ]
    },
    {
      "teal": 31,
      "source": 1299,
      "pc": [
        46,
        47,
        48
      ]
    },
    {
      "teal": 32,
      "source": 1299,
      "pc": [
        49
      ]
    },
    {
      "teal": 33,
      "source": 1299,
      "pc": [
        50
      ]
    },
    {
      "teal": 34,
      "source": 1299,
      "pc": [
        51,
        52
      ]
    },
    {
      "teal": 35,
      "source": 1299,
      "pc": [
        53
      ]
    },
    {
      "teal": 38,
      "source": 1299,
      "errorMessage": "argument 0 (key) for typedVarFromStorage must be a uint32",
      "pc": [
        54
      ]
    },
    {
      "teal": 39,
      "source": 1299,
      "pc": [
        55
      ]
    },
    {
      "teal": 42,
      "source": 1299,
      "pc": [
        56,
        57,
        58
      ]
    },
    {
      "teal": 43,
      "source": 1299,
      "pc": [
        59
      ]
    },
    {
      "teal": 44,
      "source": 1299,
      "pc": [
        60
      ]
    },
    {
      "teal": 45,
      "source": 1299,
      "pc": [
        61
      ]
    },
    {
      "teal": 46,
      "source": 1299,
      "pc": [
        62
      ]
    },
    {
      "teal": 50,
      "source": 1299,
      "pc": [
        63,
        64,
        65
      ]
    },
    {
      "teal": 53,
      "source": 1299,
      "pc": [
        66,
        67
      ]
    },
    {
      "teal": 57,
      "source": 1300,
      "pc": [
        68,
        69
      ]
    },
    {
      "teal": 58,
      "source": 1300,
      "pc": [
        70
      ]
    },
    {
      "teal": 59,
      "source": 1300,
      "pc": [
        71,
        72,
        73
      ]
    },
    {
      "teal": 60,
      "source": 1300,
      "pc": [
        74,
        75
      ]
    },
    {
      "teal": 64,
      "source": 1300,
      "pc": [
        76,
        77
      ]
    },
    {
      "teal": 65,
      "source": 1300,
      "pc": [
        78
      ]
    },
    {
      "teal": 68,
      "source": 1300,
      "errorMessage": "box value does not exist: this.boxMapTest(key).value",
      "pc": [
        79
      ]
    },
    {
      "teal": 71,
      "source": 1299,
      "pc": [
        80,
        81
      ]
    },
    {
      "teal": 72,
      "source": 1299,
      "pc": [
        82
      ]
    },
    {
      "teal": 75,
      "source": 1296,
      "pc": [
        83
      ]
    },
    {
      "teal": 76,
      "source": 1296,
      "pc": [
        84
      ]
    },
    {
      "teal": 79,
      "source": 1296,
      "pc": [
        85,
        86,
        87,
        88,
        89,
        90
      ]
    },
    {
      "teal": 80,
      "source": 1296,
      "pc": [
        91,
        92,
        93
      ]
    },
    {
      "teal": 81,
      "source": 1296,
      "pc": [
        94,
        95,
        96,
        97
      ]
    },
    {
      "teal": 84,
      "source": 1296,
      "errorMessage": "this contract does not implement the given ABI method for create NoOp",
      "pc": [
        98
      ]
    },
    {
      "teal": 87,
      "source": 1296,
      "pc": [
        99,
        100,
        101,
        102,
        103,
        104
      ]
    },
    {
      "teal": 88,
      "source": 1296,
      "pc": [
        105,
        106,
        107
      ]
    },
    {
      "teal": 89,
      "source": 1296,
      "pc": [
        108,
        109,
        110,
        111
      ]
    },
    {
      "teal": 92,
      "source": 1296,
      "errorMessage": "this contract does not implement the given ABI method for call NoOp",
      "pc": [
        112
      ]
    }
  ],
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjk2LjAKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCmludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIHR5cGVkVmFyRnJvbVN0b3JhZ2UodWludDMyKWJ5dGVbMzJdCiphYmlfcm91dGVfdHlwZWRWYXJGcm9tU3RvcmFnZToKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJYnl0ZSAweDE1MWY3Yzc1CgoJLy8ga2V5OiB1aW50MzIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnQgNAoJPT0KCgkvLyBhcmd1bWVudCAwIChrZXkpIGZvciB0eXBlZFZhckZyb21TdG9yYWdlIG11c3QgYmUgYSB1aW50MzIKCWFzc2VydAoJYnRvaQoKCS8vIGV4ZWN1dGUgdHlwZWRWYXJGcm9tU3RvcmFnZSh1aW50MzIpYnl0ZVszMl0KCWNhbGxzdWIgdHlwZWRWYXJGcm9tU3RvcmFnZQoJY29uY2F0Cglsb2cKCWludCAxCglyZXR1cm4KCi8vIHR5cGVkVmFyRnJvbVN0b3JhZ2Uoa2V5OiB1aW50PDMyPik6IGJ5dGVzMzIKdHlwZWRWYXJGcm9tU3RvcmFnZToKCXByb3RvIDEgMQoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlIDB4CgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjEzMDAKCS8vIHZhbHVlOiBieXRlczMyID0gdGhpcy5ib3hNYXBUZXN0KGtleSkudmFsdWUKCWZyYW1lX2RpZyAtMSAvLyBrZXk6IHVpbnQ8MzI+CglpdG9iCglleHRyYWN0IDQgNAoJZnJhbWVfYnVyeSAwIC8vIHN0b3JhZ2Uga2V5Ly92YWx1ZQoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czoxMzAyCgkvLyByZXR1cm4gdmFsdWU7CglmcmFtZV9kaWcgMCAvLyBzdG9yYWdlIGtleS8vdmFsdWUKCWJveF9nZXQKCgkvLyBib3ggdmFsdWUgZG9lcyBub3QgZXhpc3Q6IHRoaXMuYm94TWFwVGVzdChrZXkpLnZhbHVlCglhc3NlcnQKCgkvLyBzZXQgdGhlIHN1YnJvdXRpbmUgcmV0dXJuIHZhbHVlCglmcmFtZV9idXJ5IDAKCXJldHN1YgoKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCWludCAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCW1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CgltZXRob2QgInR5cGVkVmFyRnJvbVN0b3JhZ2UodWludDMyKWJ5dGVbMzJdIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV90eXBlZFZhckZyb21TdG9yYWdlCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoJZXJy",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiABATEYFIEGCzEZCI0MADwAAAAAAAAAAAAAAC4AAAAAAAAAAAAAAIAEFR98dTYaAUkVgQQSRBeIAARQsCJDigEBgACL/xZXBASMAIsAvkSMAIkiQ4AEuER7NjYaAI4B//EAgARMUp9VNhoAjgH/uAA=",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 24,
      "patch": 0,
      "commitHash": "5c2cf06d"
    }
  }
}