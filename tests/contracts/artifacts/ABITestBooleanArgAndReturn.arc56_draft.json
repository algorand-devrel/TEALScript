{
  "name": "ABITestBooleanArgAndReturn",
  "desc": "",
  "methods": [
    {
      "name": "booleanArgAndReturn",
      "args": [
        {
          "name": "a",
          "type": "bool"
        }
      ],
      "returns": {
        "type": "bool"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:871",
          "pc": [
            0
          ]
        },
        {
          "teal": 13,
          "source": "tests/contracts/abi.algo.ts:871",
          "pc": [
            1,
            2
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/abi.algo.ts:871",
          "pc": [
            3
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:871",
          "pc": [
            4,
            5
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:871",
          "pc": [
            6
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:871",
          "pc": [
            7,
            8
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:871",
          "pc": [
            9
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:871",
          "pc": [
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35
          ]
        },
        {
          "teal": 23,
          "source": "tests/contracts/abi.algo.ts:871",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            36
          ]
        },
        {
          "teal": 28,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            37,
            38,
            39,
            40,
            41,
            42
          ]
        },
        {
          "teal": 31,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            43,
            44,
            45
          ]
        },
        {
          "teal": 32,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            46
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            47
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            48,
            49
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            50
          ]
        },
        {
          "teal": 38,
          "source": "tests/contracts/abi.algo.ts:872",
          "errorMessage": "argument 0 (a) for booleanArgAndReturn must be a bool",
          "pc": [
            51
          ]
        },
        {
          "teal": 39,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            52,
            53
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            54
          ]
        },
        {
          "teal": 43,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            55,
            56,
            57
          ]
        },
        {
          "teal": 44,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            58,
            59,
            60
          ]
        },
        {
          "teal": 45,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            61,
            62
          ]
        },
        {
          "teal": 46,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            63,
            64
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            65
          ]
        },
        {
          "teal": 48,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            66
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            67
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            68,
            69
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            70
          ]
        },
        {
          "teal": 55,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            71,
            72,
            73
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/abi.algo.ts:873",
          "pc": [
            74,
            75
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/abi.algo.ts:872",
          "pc": [
            76
          ]
        },
        {
          "teal": 63,
          "source": "tests/contracts/abi.algo.ts:871",
          "pc": [
            77,
            78
          ]
        },
        {
          "teal": 64,
          "source": "tests/contracts/abi.algo.ts:871",
          "pc": [
            79
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/abi.algo.ts:871",
          "pc": [
            80,
            81,
            82,
            83,
            84,
            85
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/abi.algo.ts:871",
          "pc": [
            86,
            87,
            88
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:871",
          "pc": [
            89,
            90,
            91,
            92
          ]
        },
        {
          "teal": 72,
          "source": "tests/contracts/abi.algo.ts:871",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            93
          ]
        },
        {
          "teal": 75,
          "source": "tests/contracts/abi.algo.ts:871",
          "pc": [
            94,
            95,
            96,
            97,
            98,
            99
          ]
        },
        {
          "teal": 76,
          "source": "tests/contracts/abi.algo.ts:871",
          "pc": [
            100,
            101,
            102
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/abi.algo.ts:871",
          "pc": [
            103,
            104,
            105,
            106
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/abi.algo.ts:871",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            107
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwNS4wCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQpwdXNoaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gYm9vbGVhbkFyZ0FuZFJldHVybihib29sKWJvb2wKKmFiaV9yb3V0ZV9ib29sZWFuQXJnQW5kUmV0dXJuOgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglwdXNoYnl0ZXMgMHgxNTFmN2M3NQoKCS8vIGE6IGJvb2wKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglwdXNoaW50IDEKCT09CgoJLy8gYXJndW1lbnQgMCAoYSkgZm9yIGJvb2xlYW5BcmdBbmRSZXR1cm4gbXVzdCBiZSBhIGJvb2wKCWFzc2VydAoJcHVzaGludCAwCglnZXRiaXQKCgkvLyBleGVjdXRlIGJvb2xlYW5BcmdBbmRSZXR1cm4oYm9vbClib29sCgljYWxsc3ViIGJvb2xlYW5BcmdBbmRSZXR1cm4KCXB1c2hieXRlcyAweDAwCglwdXNoaW50IDAKCXVuY292ZXIgMgoJc2V0Yml0Cgljb25jYXQKCWxvZwoJcHVzaGludCAxCglyZXR1cm4KCi8vIGJvb2xlYW5BcmdBbmRSZXR1cm4oYTogYm9vbGVhbik6IGJvb2xlYW4KYm9vbGVhbkFyZ0FuZFJldHVybjoKCXByb3RvIDEgMQoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czo4NzMKCS8vIHJldHVybiBhOwoJZnJhbWVfZGlnIC0xIC8vIGE6IGJvb2xlYW4KCXJldHN1YgoKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCXB1c2hpbnQgMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CglwdXNoYnl0ZXMgMHhiODQ0N2IzNiAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJcHVzaGJ5dGVzIDB4ZjRkMGU1MmUgLy8gbWV0aG9kICJib29sZWFuQXJnQW5kUmV0dXJuKGJvb2wpYm9vbCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfYm9vbGVhbkFyZ0FuZFJldHVybgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CjEYFIEGCzEZCI0MADoAAAAAAAAAAAAAACwAAAAAAAAAAAAAAIAEFR98dTYaAUkVgQESRIEAU4gADYABAIEATwJUULCBAUOKAQGL/4mBAUOABLhEezY2GgCOAf/wAIAE9NDlLjYaAI4B/7oA",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}