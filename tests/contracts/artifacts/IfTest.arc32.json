{
  "hints": {
    "singleIf(bool)string": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "ifElse(bool)string": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "ifElseIf(bool,bool)string": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "ifElseIfElse(bool,bool)string": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "ifElseIfElseIf(bool,bool,bool)string": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "ifElseIfElseIfElse(bool,bool,bool)string": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "nestedIf(bool,bool)string": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "bracketlessIfElse(bool)string": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "nestedTernary(bool,bool)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "stringIf(string)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "stringTernary(string)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "smallUintConditional(uint16)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "smallUintComparisonConditional(uint16,uint16)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "uint256ComparsionConditional(uint256,uint256)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "nestedIfInElseIf(bool,bool)string": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {},
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 0
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "IfTest",
    "desc": "",
    "methods": [
      {
        "name": "singleIf",
        "args": [
          {
            "name": "arg0",
            "type": "bool"
          }
        ],
        "returns": {
          "type": "string"
        }
      },
      {
        "name": "ifElse",
        "args": [
          {
            "name": "arg0",
            "type": "bool"
          }
        ],
        "returns": {
          "type": "string"
        }
      },
      {
        "name": "ifElseIf",
        "args": [
          {
            "name": "arg0",
            "type": "bool"
          },
          {
            "name": "arg1",
            "type": "bool"
          }
        ],
        "returns": {
          "type": "string"
        }
      },
      {
        "name": "ifElseIfElse",
        "args": [
          {
            "name": "arg0",
            "type": "bool"
          },
          {
            "name": "arg1",
            "type": "bool"
          }
        ],
        "returns": {
          "type": "string"
        }
      },
      {
        "name": "ifElseIfElseIf",
        "args": [
          {
            "name": "arg0",
            "type": "bool"
          },
          {
            "name": "arg1",
            "type": "bool"
          },
          {
            "name": "arg2",
            "type": "bool"
          }
        ],
        "returns": {
          "type": "string"
        }
      },
      {
        "name": "ifElseIfElseIfElse",
        "args": [
          {
            "name": "arg0",
            "type": "bool"
          },
          {
            "name": "arg1",
            "type": "bool"
          },
          {
            "name": "arg2",
            "type": "bool"
          }
        ],
        "returns": {
          "type": "string"
        }
      },
      {
        "name": "nestedIf",
        "args": [
          {
            "name": "arg0",
            "type": "bool"
          },
          {
            "name": "arg1",
            "type": "bool"
          }
        ],
        "returns": {
          "type": "string"
        }
      },
      {
        "name": "bracketlessIfElse",
        "args": [
          {
            "name": "arg0",
            "type": "bool"
          }
        ],
        "returns": {
          "type": "string"
        }
      },
      {
        "name": "nestedTernary",
        "args": [
          {
            "name": "arg0",
            "type": "bool"
          },
          {
            "name": "arg1",
            "type": "bool"
          }
        ],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "stringIf",
        "args": [
          {
            "name": "arg0",
            "type": "string"
          }
        ],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "stringTernary",
        "args": [
          {
            "name": "arg0",
            "type": "string"
          }
        ],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "smallUintConditional",
        "args": [
          {
            "name": "a",
            "type": "uint16"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "smallUintComparisonConditional",
        "args": [
          {
            "name": "a",
            "type": "uint16"
          },
          {
            "name": "b",
            "type": "uint16"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "uint256ComparsionConditional",
        "args": [
          {
            "name": "a",
            "type": "uint256"
          },
          {
            "name": "b",
            "type": "uint256"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "nestedIfInElseIf",
        "args": [
          {
            "name": "a",
            "type": "bool"
          },
          {
            "name": "b",
            "type": "bool"
          }
        ],
        "returns": {
          "type": "string"
        }
      },
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}