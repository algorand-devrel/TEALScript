#pragma version 10

// This TEAL was generated by TEALScript v0.95.1
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// voterOpcodes()void
*abi_route_voterOpcodes:
	// execute voterOpcodes()void
	callsub voterOpcodes
	int 1
	return

// voterOpcodes(): void
voterOpcodes:
	proto 0 0

	// tests/contracts/avm11.algo.ts:5
	// assert(this.txn.sender.voterBalance)
	txn Sender
	voter_params_get VoterBalance
	assert

	// tests/contracts/avm11.algo.ts:6
	// assert(this.txn.sender.voterIncentiveEligible)
	txn Sender
	voter_params_get VoterIncentiveEligible
	assert
	retsub

// incentiveGlobals()void
*abi_route_incentiveGlobals:
	// execute incentiveGlobals()void
	callsub incentiveGlobals
	int 1
	return

// incentiveGlobals(): void
incentiveGlobals:
	proto 0 0

	// tests/contracts/avm11.algo.ts:10
	// assert(globals.payoutsEnabled)
	global PayoutsEnabled
	assert

	// tests/contracts/avm11.algo.ts:11
	// assert(globals.payoutsGoOnlineFee)
	global PayoutsGoOnlineFee
	assert

	// tests/contracts/avm11.algo.ts:12
	// assert(globals.payoutsPercent)
	global PayoutsPercent
	assert

	// tests/contracts/avm11.algo.ts:13
	// assert(globals.payoutsMinBalance)
	global PayoutsMinBalance
	assert

	// tests/contracts/avm11.algo.ts:14
	// assert(globals.payoutsMaxBalance)
	global PayoutsMaxBalance
	assert
	retsub

*abi_route_createApplication:
	int 1
	return

*create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	method "voterOpcodes()void"
	method "incentiveGlobals()void"
	txna ApplicationArgs 0
	match *abi_route_voterOpcodes *abi_route_incentiveGlobals

	// this contract does not implement the given ABI method for call NoOp
	err