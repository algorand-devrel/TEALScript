{
  "name": "ABITestSimpleTuple",
  "desc": "",
  "methods": [
    {
      "name": "simpleTuple",
      "args": [],
      "returns": {
        "type": "uint16"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": [
      {
        "teal": 1,
        "source": 255,
        "pc": [
          0
        ]
      },
      {
        "teal": 2,
        "source": 255,
        "pc": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      {
        "teal": 3,
        "source": 255,
        "pc": [
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44
        ]
      },
      {
        "teal": 15,
        "source": 255,
        "pc": [
          45,
          46
        ]
      },
      {
        "teal": 16,
        "source": 255,
        "pc": [
          47
        ]
      },
      {
        "teal": 17,
        "source": 255,
        "pc": [
          48,
          49
        ]
      },
      {
        "teal": 18,
        "source": 255,
        "pc": [
          50
        ]
      },
      {
        "teal": 19,
        "source": 255,
        "pc": [
          51,
          52
        ]
      },
      {
        "teal": 20,
        "source": 255,
        "pc": [
          53
        ]
      },
      {
        "teal": 21,
        "source": 255,
        "pc": [
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79
        ]
      },
      {
        "teal": 25,
        "source": 255,
        "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
        "pc": [
          80
        ]
      },
      {
        "teal": 30,
        "source": 256,
        "pc": [
          81,
          82,
          83,
          84,
          85,
          86
        ]
      },
      {
        "teal": 33,
        "source": 256,
        "pc": [
          87,
          88,
          89
        ]
      },
      {
        "teal": 34,
        "source": 256,
        "pc": [
          90
        ]
      },
      {
        "teal": 35,
        "source": 256,
        "pc": [
          91
        ]
      },
      {
        "teal": 36,
        "source": 256,
        "pc": [
          92
        ]
      },
      {
        "teal": 37,
        "source": 256,
        "pc": [
          93,
          94
        ]
      },
      {
        "teal": 38,
        "source": 256,
        "pc": [
          95
        ]
      },
      {
        "teal": 41,
        "source": 256,
        "errorMessage": "simpleTuple return value overflowed 16 bits",
        "pc": [
          96
        ]
      },
      {
        "teal": 42,
        "source": 256,
        "pc": [
          97,
          98,
          99
        ]
      },
      {
        "teal": 43,
        "source": 256,
        "pc": [
          100
        ]
      },
      {
        "teal": 44,
        "source": 256,
        "pc": [
          101
        ]
      },
      {
        "teal": 45,
        "source": 256,
        "pc": [
          102,
          103
        ]
      },
      {
        "teal": 46,
        "source": 256,
        "pc": [
          104
        ]
      },
      {
        "teal": 50,
        "source": 256,
        "pc": [
          105,
          106,
          107
        ]
      },
      {
        "teal": 53,
        "source": 256,
        "pc": [
          108,
          109
        ]
      },
      {
        "teal": 57,
        "source": 257,
        "pc": [
          110,
          111,
          112,
          113,
          114,
          115,
          116,
          117,
          118,
          119,
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131
        ]
      },
      {
        "teal": 58,
        "source": 257,
        "pc": [
          132,
          133
        ]
      },
      {
        "teal": 62,
        "source": 259,
        "pc": [
          134,
          135
        ]
      },
      {
        "teal": 63,
        "source": 259,
        "pc": [
          136,
          137,
          138
        ]
      },
      {
        "teal": 64,
        "source": 259,
        "pc": [
          139
        ]
      },
      {
        "teal": 67,
        "source": 256,
        "pc": [
          140,
          141
        ]
      },
      {
        "teal": 68,
        "source": 256,
        "pc": [
          142
        ]
      },
      {
        "teal": 71,
        "source": 255,
        "pc": [
          143,
          144
        ]
      },
      {
        "teal": 72,
        "source": 255,
        "pc": [
          145
        ]
      },
      {
        "teal": 75,
        "source": 255,
        "pc": [
          146,
          147,
          148,
          149,
          150,
          151
        ]
      },
      {
        "teal": 76,
        "source": 255,
        "pc": [
          152,
          153,
          154
        ]
      },
      {
        "teal": 77,
        "source": 255,
        "pc": [
          155,
          156,
          157,
          158
        ]
      },
      {
        "teal": 80,
        "source": 255,
        "errorMessage": "this contract does not implement the given ABI method for create NoOp",
        "pc": [
          159
        ]
      },
      {
        "teal": 83,
        "source": 255,
        "pc": [
          160,
          161,
          162,
          163,
          164,
          165
        ]
      },
      {
        "teal": 84,
        "source": 255,
        "pc": [
          166,
          167,
          168
        ]
      },
      {
        "teal": 85,
        "source": 255,
        "pc": [
          169,
          170,
          171,
          172
        ]
      },
      {
        "teal": 88,
        "source": 255,
        "errorMessage": "this contract does not implement the given ABI method for call NoOp",
        "pc": [
          173
        ]
      }
    ],
    "clear": []
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxIDYgMTYKYnl0ZWNibG9jayAweCAweDRmMGJhZGNhIDB4Yjg0NDdiMzYgMHgxNTFmN2M3NSAweDAwMDAwMDAwMDAwMDAwMGIwMDE2MDAwMDAwMDAwMDAwMDAyMTAwMmMKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuMTAyLjAKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCmludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIHNpbXBsZVR1cGxlKCl1aW50MTYKKmFiaV9yb3V0ZV9zaW1wbGVUdXBsZToKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJYnl0ZSAweDE1MWY3Yzc1CgoJLy8gZXhlY3V0ZSBzaW1wbGVUdXBsZSgpdWludDE2CgljYWxsc3ViIHNpbXBsZVR1cGxlCglpdG9iCglkdXAKCWJpdGxlbgoJaW50IDE2Cgk8PQoKCS8vIHNpbXBsZVR1cGxlIHJldHVybiB2YWx1ZSBvdmVyZmxvd2VkIDE2IGJpdHMKCWFzc2VydAoJZXh0cmFjdCA2IDIKCWNvbmNhdAoJbG9nCglpbnQgMQoJcmV0dXJuCgovLyBzaW1wbGVUdXBsZSgpOiB1aW50MTYKc2ltcGxlVHVwbGU6Cglwcm90byAwIDEKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZSAweAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czoyNTcKCS8vIGE6IFt1aW50NjQsIHVpbnQxNiwgdWludDY0LCB1aW50MTZdID0gWzExLCAyMiwgMzMsIDQ0XQoJYnl0ZSAweDAwMDAwMDAwMDAwMDAwMGIwMDE2MDAwMDAwMDAwMDAwMDAyMTAwMmMKCWZyYW1lX2J1cnkgMCAvLyBhOiBbdWludDY0LCB1aW50MTYsIHVpbnQ2NCwgdWludDE2XQoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czoyNTkKCS8vIHJldHVybiBhWzNdOwoJZnJhbWVfZGlnIDAgLy8gYTogW3VpbnQ2NCwgdWludDE2LCB1aW50NjQsIHVpbnQxNl0KCWV4dHJhY3QgMTggMgoJYnRvaQoKCS8vIHNldCB0aGUgc3Vicm91dGluZSByZXR1cm4gdmFsdWUKCWZyYW1lX2J1cnkgMAoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJaW50IDEKCXJldHVybgoKKmNyZWF0ZV9Ob09wOgoJYnl0ZSAweGI4NDQ3YjM2IC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglieXRlIDB4NGYwYmFkY2EgLy8gbWV0aG9kICJzaW1wbGVUdXBsZSgpdWludDE2IgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9zaW1wbGVUdXBsZQoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiADAQYQJgUABE8LrcoEuER7NgQVH3x1FAAAAAAAAAALABYAAAAAAAAAIQAsMRgUgQYLMRkIjQwAUAAAAAAAAAAAAAAAQgAAAAAAAAAAAAAAgAQVH3x1iAAPFkmTgRAORFcGAlCwgQFDigABgACAFAAAAAAAAAALABYAAAAAAAAAIQAsjACLAFcSAheMAImBAUOABLhEezY2GgCOAf/wAIAETwutyjYaAI4B/6QA",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 25,
      "patch": 0,
      "commitHash": "9855f57c"
    }
  }
}