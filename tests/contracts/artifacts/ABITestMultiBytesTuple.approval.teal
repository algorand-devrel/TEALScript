#pragma version 9

// This TEAL was generated by TEALScript v0.68.3
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its respective branch will be "NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch call_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED

NOT_IMPLEMENTED:
	err

abi_route_multiBytesTuple:
	// The ABI return prefix
	byte 0x151f7c75

	// execute multiBytesTuple()(byte[],byte[])
	callsub multiBytesTuple
	concat
	log
	int 1
	return

// multiBytesTuple()(byte[],byte[])
multiBytesTuple:
	proto 0 1

	// tests/contracts/abi.algo.ts:1228
	// return [hex('0x01'), hex('0x02')];
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x0004 // initial head offset
	byte 0x000101
	callsub process_dynamic_tuple_element
	byte 0x000102
	callsub process_dynamic_tuple_element
	pop // pop head offset
	concat // concat head and tail
	retsub

abi_route_createApplication:
	int 1
	return

create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "multiBytesTuple()(byte[],byte[])"
	txna ApplicationArgs 0
	match abi_route_multiBytesTuple
	err

process_dynamic_tuple_element:
	proto 4 3
	frame_dig -4 // tuple head
	frame_dig -2 // head offset
	concat
	frame_bury -4 // tuple head
	frame_dig -1 // element
	dup
	len
	frame_dig -2 // head offset
	btoi
	+
	itob
	extract 6 2
	frame_bury -2 // head offset
	frame_dig -3 // tuple tail
	swap
	concat
	frame_bury -3 // tuple tail
	frame_dig -4 // tuple head
	frame_dig -3 // tuple tail
	frame_dig -2 // head offset
	retsub