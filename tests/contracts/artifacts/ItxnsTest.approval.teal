#pragma version 10

// This TEAL was generated by TEALScript v0.92.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// payment()void
*abi_route_payment:
	// execute payment()void
	callsub payment
	int 1
	return

// payment(): void
payment:
	proto 0 0

	// tests/contracts/itxns.algo.ts:6
	// this.txnComposer.send(
	//       new PayTxn({
	//         amount: 100,
	//         receiver: this.app.address,
	//         closeRemainderTo: globals.zeroAddress,
	//         sender: this.app.address,
	//         rekeyTo: globals.zeroAddress,
	//         note: 'Hello World!',
	//       })
	//     )
	itxn_begin
	int pay
	itxn_field TypeEnum

	// tests/contracts/itxns.algo.ts:8
	// amount: 100
	int 100
	itxn_field Amount

	// tests/contracts/itxns.algo.ts:9
	// receiver: this.app.address
	global CurrentApplicationAddress
	itxn_field Receiver

	// tests/contracts/itxns.algo.ts:10
	// closeRemainderTo: globals.zeroAddress
	global ZeroAddress
	itxn_field CloseRemainderTo

	// tests/contracts/itxns.algo.ts:11
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// tests/contracts/itxns.algo.ts:12
	// rekeyTo: globals.zeroAddress
	global ZeroAddress
	itxn_field RekeyTo

	// tests/contracts/itxns.algo.ts:13
	// note: 'Hello World!'
	byte 0x48656c6c6f20576f726c6421 // "Hello World!"
	itxn_field Note

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// assetCreation()uint64
*abi_route_assetCreation:
	// The ABI return prefix
	byte 0x151f7c75

	// execute assetCreation()uint64
	callsub assetCreation
	itob
	concat
	log
	int 1
	return

// assetCreation(): AssetID
assetCreation:
	proto 0 1

	// tests/contracts/itxns.algo.ts:19
	// return this.txnComposer.send(
	//       new AssetCreateTxn({
	//         configAssetName: 'name',
	//         configAssetUnitName: 'unit',
	//         configAssetTotal: 1,
	//         configAssetManager: this.app.address,
	//         configAssetReserve: this.app.address,
	//         configAssetFreeze: this.app.address,
	//         configAssetClawback: this.app.address,
	//         configAssetDefaultFrozen: 0,
	//         configAssetURL: 'url',
	//         configAssetMetadataHash: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
	//       })
	//     );
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// tests/contracts/itxns.algo.ts:21
	// configAssetName: 'name'
	byte 0x6e616d65 // "name"
	itxn_field ConfigAssetName

	// tests/contracts/itxns.algo.ts:22
	// configAssetUnitName: 'unit'
	byte 0x756e6974 // "unit"
	itxn_field ConfigAssetUnitName

	// tests/contracts/itxns.algo.ts:23
	// configAssetTotal: 1
	int 1
	itxn_field ConfigAssetTotal

	// tests/contracts/itxns.algo.ts:24
	// configAssetManager: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetManager

	// tests/contracts/itxns.algo.ts:25
	// configAssetReserve: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetReserve

	// tests/contracts/itxns.algo.ts:26
	// configAssetFreeze: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetFreeze

	// tests/contracts/itxns.algo.ts:27
	// configAssetClawback: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetClawback

	// tests/contracts/itxns.algo.ts:28
	// configAssetDefaultFrozen: 0
	int 0
	itxn_field ConfigAssetDefaultFrozen

	// tests/contracts/itxns.algo.ts:29
	// configAssetURL: 'url'
	byte 0x75726c // "url"
	itxn_field ConfigAssetURL

	// tests/contracts/itxns.algo.ts:30
	// configAssetMetadataHash: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
	byte 0x6161616161616161616161616161616161616161616161616161616161616161 // "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
	itxn_field ConfigAssetMetadataHash

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn CreatedAssetID
	retsub

// appCall()void
*abi_route_appCall:
	// execute appCall()void
	callsub appCall
	int 1
	return

// appCall(): void
appCall:
	proto 0 0

	// tests/contracts/itxns.algo.ts:36
	// this.txnComposer.send(
	//       new AppCallTxn({
	//         accounts: [this.app.address],
	//         applicationArgs: ['arg1', 'arg2'],
	//         applicationID: this.app,
	//         applications: [this.app],
	//         approvalProgram: 'approval',
	//         assets: [AssetID.zeroIndex],
	//         clearStateProgram: 'clear',
	//         globalNumByteSlice: 1,
	//         globalNumUint: 1,
	//         localNumByteSlice: 1,
	//         localNumUint: 1,
	//         note: 'note',
	//       })
	//     )
	itxn_begin
	int appl
	itxn_field TypeEnum

	// tests/contracts/itxns.algo.ts:38
	// accounts: [this.app.address]
	global CurrentApplicationAddress
	itxn_field Accounts

	// tests/contracts/itxns.algo.ts:39
	// applicationArgs: ['arg1', 'arg2']
	byte 0x61726731 // "arg1"
	itxn_field ApplicationArgs
	byte 0x61726732 // "arg2"
	itxn_field ApplicationArgs

	// tests/contracts/itxns.algo.ts:40
	// applicationID: this.app
	txna Applications 0
	itxn_field ApplicationID

	// tests/contracts/itxns.algo.ts:41
	// applications: [this.app]
	txna Applications 0
	itxn_field Applications

	// tests/contracts/itxns.algo.ts:42
	// approvalProgram: 'approval'
	byte 0x617070726f76616c // "approval"
	itxn_field ApprovalProgram

	// tests/contracts/itxns.algo.ts:43
	// assets: [AssetID.zeroIndex]
	int 0
	itxn_field Assets

	// tests/contracts/itxns.algo.ts:44
	// clearStateProgram: 'clear'
	byte 0x636c656172 // "clear"
	itxn_field ClearStateProgram

	// tests/contracts/itxns.algo.ts:45
	// globalNumByteSlice: 1
	int 1
	itxn_field GlobalNumByteSlice

	// tests/contracts/itxns.algo.ts:46
	// globalNumUint: 1
	int 1
	itxn_field GlobalNumUint

	// tests/contracts/itxns.algo.ts:47
	// localNumByteSlice: 1
	int 1
	itxn_field LocalNumByteSlice

	// tests/contracts/itxns.algo.ts:48
	// localNumUint: 1
	int 1
	itxn_field LocalNumUint

	// tests/contracts/itxns.algo.ts:49
	// note: 'note'
	byte 0x6e6f7465 // "note"
	itxn_field Note

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// assetConfig()void
*abi_route_assetConfig:
	// execute assetConfig()void
	callsub assetConfig
	int 1
	return

// assetConfig(): void
assetConfig:
	proto 0 0

	// tests/contracts/itxns.algo.ts:55
	// this.txnComposer.send(
	//       new AssetConfigTxn({
	//         configAsset: AssetID.zeroIndex,
	//         configAssetManager: this.app.address,
	//         configAssetReserve: this.app.address,
	//         configAssetFreeze: this.app.address,
	//         configAssetClawback: this.app.address,
	//       })
	//     )
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// tests/contracts/itxns.algo.ts:57
	// configAsset: AssetID.zeroIndex
	int 0
	itxn_field ConfigAsset

	// tests/contracts/itxns.algo.ts:58
	// configAssetManager: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetManager

	// tests/contracts/itxns.algo.ts:59
	// configAssetReserve: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetReserve

	// tests/contracts/itxns.algo.ts:60
	// configAssetFreeze: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetFreeze

	// tests/contracts/itxns.algo.ts:61
	// configAssetClawback: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetClawback

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// assetFreeze()void
*abi_route_assetFreeze:
	// execute assetFreeze()void
	callsub assetFreeze
	int 1
	return

// assetFreeze(): void
assetFreeze:
	proto 0 0

	// tests/contracts/itxns.algo.ts:67
	// this.txnComposer.send(
	//       new AssetFreezeTxn({
	//         freezeAssetFrozen: true,
	//         freezeAssetAccount: this.app.address,
	//         freezeAsset: AssetID.zeroIndex,
	//       })
	//     )
	itxn_begin
	int afrz
	itxn_field TypeEnum

	// tests/contracts/itxns.algo.ts:69
	// freezeAssetFrozen: true
	int 1
	itxn_field FreezeAssetFrozen

	// tests/contracts/itxns.algo.ts:70
	// freezeAssetAccount: this.app.address
	global CurrentApplicationAddress
	itxn_field FreezeAssetAccount

	// tests/contracts/itxns.algo.ts:71
	// freezeAsset: AssetID.zeroIndex
	int 0
	itxn_field FreezeAsset

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// assetTransfer()void
*abi_route_assetTransfer:
	// execute assetTransfer()void
	callsub assetTransfer
	int 1
	return

// assetTransfer(): void
assetTransfer:
	proto 0 0

	// tests/contracts/itxns.algo.ts:77
	// this.txnComposer.send(
	//       new AssetTransferTxn({
	//         assetAmount: 1,
	//         assetCloseTo: this.app.address,
	//         assetReceiver: this.app.address,
	//         assetSender: this.app.address,
	//         xferAsset: AssetID.zeroIndex,
	//       })
	//     )
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// tests/contracts/itxns.algo.ts:79
	// assetAmount: 1
	int 1
	itxn_field AssetAmount

	// tests/contracts/itxns.algo.ts:80
	// assetCloseTo: this.app.address
	global CurrentApplicationAddress
	itxn_field AssetCloseTo

	// tests/contracts/itxns.algo.ts:81
	// assetReceiver: this.app.address
	global CurrentApplicationAddress
	itxn_field AssetReceiver

	// tests/contracts/itxns.algo.ts:82
	// assetSender: this.app.address
	global CurrentApplicationAddress
	itxn_field AssetSender

	// tests/contracts/itxns.algo.ts:83
	// xferAsset: AssetID.zeroIndex
	int 0
	itxn_field XferAsset

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// methodCall()uint64
*abi_route_methodCall:
	// The ABI return prefix
	byte 0x151f7c75

	// execute methodCall()uint64
	callsub methodCall
	itob
	concat
	log
	int 1
	return

// methodCall(): AssetID
methodCall:
	proto 0 1

	// tests/contracts/itxns.algo.ts:89
	// return sendMethodCall<[AppID, AssetID], AssetID>({
	//       name: 'method',
	//       methodArgs: [this.app, AssetID.zeroIndex],
	//     });
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "method(uint64,uint64)uint64"
	itxn_field ApplicationArgs

	// tests/contracts/itxns.algo.ts:91
	// methodArgs: [this.app, AssetID.zeroIndex]
	txna Applications 0
	itob
	itxn_field ApplicationArgs
	byte 0x0000000000000000
	itxn_field ApplicationArgs

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn NumLogs
	int 1
	-
	itxnas Logs
	extract 4 0
	btoi
	retsub

// onlineKeyRegistration()void
*abi_route_onlineKeyRegistration:
	// execute onlineKeyRegistration()void
	callsub onlineKeyRegistration
	int 1
	return

// onlineKeyRegistration(): void
onlineKeyRegistration:
	proto 0 0

	// tests/contracts/itxns.algo.ts:96
	// this.txnComposer.send(
	//       new KeyRegTxn({
	//         selectionPK: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
	//         stateProofPK: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
	//         voteFirst: 1,
	//         voteKeyDilution: 1,
	//         voteLast: 1,
	//         votePK: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
	//       })
	//     )
	itxn_begin
	int keyreg
	itxn_field TypeEnum

	// tests/contracts/itxns.algo.ts:98
	// selectionPK: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
	byte 0x6161616161616161616161616161616161616161616161616161616161616161 // "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
	itxn_field SelectionPK

	// tests/contracts/itxns.algo.ts:99
	// stateProofPK: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
	byte 0x6161616161616161616161616161616161616161616161616161616161616161 // "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
	itxn_field StateProofPK

	// tests/contracts/itxns.algo.ts:100
	// voteFirst: 1
	int 1
	itxn_field VoteFirst

	// tests/contracts/itxns.algo.ts:101
	// voteKeyDilution: 1
	int 1
	itxn_field VoteKeyDilution

	// tests/contracts/itxns.algo.ts:102
	// voteLast: 1
	int 1
	itxn_field VoteLast

	// tests/contracts/itxns.algo.ts:103
	// votePK: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
	byte 0x6161616161616161616161616161616161616161616161616161616161616161 // "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
	itxn_field VotePK

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// offlineKeyRegistration()void
*abi_route_offlineKeyRegistration:
	// execute offlineKeyRegistration()void
	callsub offlineKeyRegistration
	int 1
	return

// offlineKeyRegistration(): void
offlineKeyRegistration:
	proto 0 0

	// tests/contracts/itxns.algo.ts:109
	// this.txnComposer.send(new KeyRegTxn({}))
	itxn_begin
	int keyreg
	itxn_field TypeEnum

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// innerGeneric()void
*abi_route_innerGeneric:
	// execute innerGeneric()void
	callsub innerGeneric
	int 1
	return

// innerGeneric(): void
innerGeneric:
	proto 0 0

	// tests/contracts/itxns.algo.ts:113
	// sendMethodCall<[InnerTxn<InnerAssetCreation>], void>({
	//       name: 'foo',
	//       methodArgs: [{ configAssetTotal: 1 }],
	//     })
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// tests/contracts/itxns.algo.ts:115
	// configAssetTotal: 1
	int 1
	itxn_field ConfigAssetTotal

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee
	itxn_next
	int appl
	itxn_field TypeEnum
	method "foo(txn)void"
	itxn_field ApplicationArgs

	// tests/contracts/itxns.algo.ts:115
	// methodArgs: [{ configAssetTotal: 1 }]
	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

*abi_route_createApplication:
	int 1
	return

*create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	method "payment()void"
	method "assetCreation()uint64"
	method "appCall()void"
	method "assetConfig()void"
	method "assetFreeze()void"
	method "assetTransfer()void"
	method "methodCall()uint64"
	method "onlineKeyRegistration()void"
	method "offlineKeyRegistration()void"
	method "innerGeneric()void"
	txna ApplicationArgs 0
	match *abi_route_payment *abi_route_assetCreation *abi_route_appCall *abi_route_assetConfig *abi_route_assetFreeze *abi_route_assetTransfer *abi_route_methodCall *abi_route_onlineKeyRegistration *abi_route_offlineKeyRegistration *abi_route_innerGeneric

	// this contract does not implement the given ABI method for call NoOp
	err