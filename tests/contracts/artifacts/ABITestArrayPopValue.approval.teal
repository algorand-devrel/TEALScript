#pragma version 9

// This TEAL was generated by TEALScript v0.66.1
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its respective branch will be "NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

abi_route_arrayPopValue:
	// The ABI return prefix
	byte 0x151f7c75

	// execute arrayPopValue()uint16
	callsub arrayPopValue
	concat
	log
	int 1
	return

// arrayPopValue()uint16
arrayPopValue:
	proto 0 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x
	dup

	// tests/contracts/abi.algo.ts:449
	// a: uint<16>[] = [1, 2, 3]
	byte 0x000100020003
	frame_bury 0 // a: uint<16>[]

	// tests/contracts/abi.algo.ts:451
	// v = a.pop()!
	frame_dig 0 // a: uint<16>[]
	dup
	len
	int 2
	-
	int 0
	swap
	extract3
	dup
	len
	int 2
	frame_dig 0 // a: uint<16>[]
	cover 2
	extract3
	swap
	frame_bury 0 // a: uint<16>[]
	frame_bury 1 // v: uint16

	// tests/contracts/abi.algo.ts:453
	// return v;
	frame_dig 1 // v: uint16

	// set the subroutine return value
	frame_bury 0

	// pop all local variables from the stack
	popn 1
	retsub

abi_route_createApplication:
	int 1
	return

create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "arrayPopValue()uint16"
	txna ApplicationArgs 0
	match abi_route_arrayPopValue
	err