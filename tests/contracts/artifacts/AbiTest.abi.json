{
  "name": "AbiTest",
  "desc": "",
  "methods": [
    {
      "name": "staticArray",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64",
        "desc": ""
      }
    },
    {
      "name": "returnStaticArray",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64[3]",
        "desc": ""
      }
    },
    {
      "name": "staticArrayArg",
      "args": [
        {
          "name": "a",
          "type": "uint64[3]",
          "desc": ""
        }
      ],
      "desc": "",
      "returns": {
        "type": "uint64",
        "desc": ""
      }
    },
    {
      "name": "nonLiteralStaticArrayElements",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64",
        "desc": ""
      }
    },
    {
      "name": "mixedStaticArrayElements",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64",
        "desc": ""
      }
    },
    {
      "name": "nonLiteralStaticArrayAccess",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64",
        "desc": ""
      }
    },
    {
      "name": "setStaticArrayElement",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64",
        "desc": ""
      }
    },
    {
      "name": "staticArrayInStorageRef",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64[3]",
        "desc": ""
      }
    },
    {
      "name": "updateStaticArrayInStorageRef",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64[3]",
        "desc": ""
      }
    },
    {
      "name": "staticArrayInStorageMap",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64[3]",
        "desc": ""
      }
    },
    {
      "name": "updateStaticArrayInStorageMap",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64[3]",
        "desc": ""
      }
    },
    {
      "name": "nestedStaticArray",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64",
        "desc": ""
      }
    },
    {
      "name": "updateNestedStaticArrayElement",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64",
        "desc": ""
      }
    },
    {
      "name": "updateNestedStaticArray",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64",
        "desc": ""
      }
    },
    {
      "name": "threeDimensionalUint16Array",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint16",
        "desc": ""
      }
    },
    {
      "name": "simpleTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint16",
        "desc": ""
      }
    },
    {
      "name": "arrayInTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64",
        "desc": ""
      }
    },
    {
      "name": "tupleInArray",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint16",
        "desc": ""
      }
    },
    {
      "name": "tupleInTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64",
        "desc": ""
      }
    },
    {
      "name": "shortTypeNotation",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint16",
        "desc": ""
      }
    },
    {
      "name": "disgusting",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64",
        "desc": ""
      }
    },
    {
      "name": "returnTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "(uint64,uint16,uint64)",
        "desc": ""
      }
    },
    {
      "name": "tupleArg",
      "args": [
        {
          "name": "a",
          "type": "(uint64,uint16,uint64)",
          "desc": ""
        }
      ],
      "desc": "",
      "returns": {
        "type": "uint16",
        "desc": ""
      }
    },
    {
      "name": "dynamicArray",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64",
        "desc": ""
      }
    },
    {
      "name": "returnDynamicArray",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64[]",
        "desc": ""
      }
    },
    {
      "name": "dynamicArrayArg",
      "args": [
        {
          "name": "a",
          "type": "uint64[]",
          "desc": ""
        }
      ],
      "desc": "",
      "returns": {
        "type": "uint64",
        "desc": ""
      }
    },
    {
      "name": "updateDynamicArrayElement",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64",
        "desc": ""
      }
    },
    {
      "name": "dynamicTupleArray",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64",
        "desc": ""
      }
    },
    {
      "name": "returnTupleWithDyamicArray",
      "args": [],
      "desc": "",
      "returns": {
        "type": "(uint64,uint16,uint64[],uint16[])",
        "desc": ""
      }
    },
    {
      "name": "returnDynamicArrayFromTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint8[]",
        "desc": ""
      }
    },
    {
      "name": "updateDynamicArrayInTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "(uint8,uint16[],uint8[],uint16[],uint8[])",
        "desc": ""
      }
    },
    {
      "name": "nonLiteralDynamicElementInTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "(uint8,uint16,uint8[],uint16[],uint8[])",
        "desc": ""
      }
    },
    {
      "name": "arrayPush",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint16[]",
        "desc": ""
      }
    },
    {
      "name": "arrayPop",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint16[]",
        "desc": ""
      }
    },
    {
      "name": "arrayPopValue",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint16",
        "desc": ""
      }
    },
    {
      "name": "arraySplice",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint64[]",
        "desc": ""
      }
    },
    {
      "name": "arraySpliceValue",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint16[]",
        "desc": ""
      }
    },
    {
      "name": "dynamicArrayElements",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint16[]",
        "desc": ""
      }
    },
    {
      "name": "spliceLastElement",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint16[]",
        "desc": ""
      }
    },
    {
      "name": "spliceLastElementValue",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint16[]",
        "desc": ""
      }
    },
    {
      "name": "spliceFirstElement",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint16[]",
        "desc": ""
      }
    },
    {
      "name": "spliceFirstElementValue",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint16[]",
        "desc": ""
      }
    },
    {
      "name": "stringReturn",
      "args": [],
      "desc": "",
      "returns": {
        "type": "string",
        "desc": ""
      }
    },
    {
      "name": "stringArg",
      "args": [
        {
          "name": "s",
          "type": "string",
          "desc": ""
        }
      ],
      "desc": "",
      "returns": {
        "type": "void",
        "desc": ""
      }
    },
    {
      "name": "stringInTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "(uint16,uint8[],string,uint8[])",
        "desc": ""
      }
    },
    {
      "name": "accesStringInTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "string",
        "desc": ""
      }
    },
    {
      "name": "updateStringInTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "(uint8,uint16[],string,uint16[],uint8[])",
        "desc": ""
      }
    },
    {
      "name": "updateTupleWithOnlyDynamicTypes",
      "args": [],
      "desc": "",
      "returns": {
        "type": "(uint16[],uint16[],uint16[])",
        "desc": ""
      }
    },
    {
      "name": "shortenDynamicElementInTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "(uint16[],uint16[],uint16[])",
        "desc": ""
      }
    },
    {
      "name": "namedTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "string",
        "desc": ""
      }
    },
    {
      "name": "updateNamedTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "string",
        "desc": ""
      }
    },
    {
      "name": "customTypes",
      "args": [],
      "desc": "",
      "returns": {
        "type": "string",
        "desc": ""
      }
    },
    {
      "name": "staticStringArrayArg",
      "args": [
        {
          "name": "a",
          "type": "string[3]",
          "desc": ""
        }
      ],
      "desc": "",
      "returns": {
        "type": "string",
        "desc": ""
      }
    },
    {
      "name": "dynamicAccessOfDynamicElementInStaticArray",
      "args": [
        {
          "name": "a",
          "type": "string[3]",
          "desc": ""
        }
      ],
      "desc": "",
      "returns": {
        "type": "string",
        "desc": ""
      }
    },
    {
      "name": "dynamicArrayInMiddleOfTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "(uint16,uint8[],uint16)",
        "desc": ""
      }
    },
    {
      "name": "accessDynamicArrayInMiddleOfTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint8[]",
        "desc": ""
      }
    },
    {
      "name": "accessDynamicArrayElementInTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "uint32",
        "desc": ""
      }
    },
    {
      "name": "updateDynamicArrayInMiddleOfTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "(uint16,uint8[],uint16)",
        "desc": ""
      }
    },
    {
      "name": "nestedTuple",
      "args": [],
      "desc": "",
      "returns": {
        "type": "(uint16,(uint8,string),(uint16,string))",
        "desc": ""
      }
    },
    {
      "name": "updateDynamicElementInTupleWithSameLength",
      "args": [],
      "desc": "",
      "returns": {
        "type": "(uint16,uint8[],uint16,uint8[],uint16)",
        "desc": ""
      }
    },
    {
      "name": "accessDynamicStringArray",
      "args": [],
      "desc": "",
      "returns": {
        "type": "string",
        "desc": ""
      }
    }
  ]
}