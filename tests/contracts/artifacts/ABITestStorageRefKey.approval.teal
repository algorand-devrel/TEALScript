#pragma version 9

// This TEAL was generated by TEALScript v0.66.1
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its respective branch will be "NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

// storageRefKey()uint64
abi_route_storageRefKey:
	// The ABI return prefix
	byte 0x151f7c75

	// execute storageRefKey()uint64
	callsub storageRefKey
	itob
	concat
	log
	int 1
	return

storageRefKey:
	proto 0 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x
	dup

	// tests/contracts/abi.algo.ts:1009
	// this.gMap(0).value = [1, 2, 3]
	byte 0x0000000000000000
	byte 0x0003000000000000000100000000000000020000000000000003
	app_global_put

	// tests/contracts/abi.algo.ts:1011
	// i = 0
	int 0
	frame_bury 0 // i: uint64

	// tests/contracts/abi.algo.ts:1013
	// r = this.gMap(i).value
	frame_dig 0 // i: uint64
	itob
	frame_bury 1 // storage key//r

	// tests/contracts/abi.algo.ts:1015
	// i = 1
	int 1
	frame_bury 0 // i: uint64

	// tests/contracts/abi.algo.ts:1017
	// r[1] = 4
	frame_dig 1 // storage key//r
	app_global_get
	extract 2 0
	store 255 // full array
	load 255 // full array
	int 8
	byte 0x0000000000000004
	replace3
	frame_dig 1 // storage key//r
	swap
	dup
	len
	int 8
	/
	itob
	extract 6 2
	swap
	concat
	app_global_put

	// tests/contracts/abi.algo.ts:1019
	// return this.gMap(0).value[1];
	byte 0x0000000000000000
	app_global_get
	extract 2 0
	store 255 // full array
	load 255 // full array
	extract 8 8
	btoi

	// set the subroutine return value
	frame_bury 0

	// pop all local variables from the stack
	popn 1
	retsub

abi_route_createApplication:
	int 1
	return

create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "storageRefKey()uint64"
	txna ApplicationArgs 0
	match abi_route_storageRefKey
	err