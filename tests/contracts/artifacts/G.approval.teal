#pragma version 10
intcblock 1 6
bytecblock 0xf2b65f27 0xe0418c54 0xb8447b36 0x151f7c75 0x7075626c6963 0x70726976617465 0x70726f746563746564

// This TEAL was generated by TEALScript v0.102.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// publicMethod()string
*abi_route_publicMethod:
	// The ABI return prefix
	byte 0x151f7c75

	// execute publicMethod()string
	callsub publicMethod
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	log
	int 1
	return

// publicMethod(): string
publicMethod:
	proto 0 1

	// tests/contracts/inheritance.algo.ts:67
	// return 'public';
	byte 0x7075626c6963 // "public"
	retsub

// privateMethod(): string
privateMethod:
	proto 0 1

	// tests/contracts/inheritance.algo.ts:71
	// return 'private';
	byte 0x70726976617465 // "private"
	retsub

// protectedMethod(): string
protectedMethod:
	proto 0 1

	// tests/contracts/inheritance.algo.ts:75
	// return 'protected';
	byte 0x70726f746563746564 // "protected"
	retsub

// g()void
*abi_route_g:
	// execute g()void
	callsub g
	int 1
	return

// g(): void
g:
	proto 0 0

	// tests/contracts/inheritance.algo.ts:81
	// assert(this.protectedMethod() === 'protected')
	callsub protectedMethod
	byte 0x70726f746563746564 // "protected"
	==
	assert

	// tests/contracts/inheritance.algo.ts:82
	// assert(this.publicMethod() === 'public')
	callsub publicMethod
	byte 0x7075626c6963 // "public"
	==
	assert
	retsub

*abi_route_createApplication:
	int 1
	return

*create_NoOp:
	byte 0xb8447b36 // method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	byte 0xe0418c54 // method "publicMethod()string"
	byte 0xf2b65f27 // method "g()void"
	txna ApplicationArgs 0
	match *abi_route_publicMethod *abi_route_g

	// this contract does not implement the given ABI method for call NoOp
	err