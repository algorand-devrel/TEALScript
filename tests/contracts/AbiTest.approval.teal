#pragma version 8
	b main

bare_route_create:
	byte 0x
	dupn 1
	callsub create
	int 1
	return

create:
	proto 1 0
	retsub

bare_route_optIn:
	byte 0x
	dupn 1
	callsub optIn
	int 1
	return

optIn:
	proto 1 0
	retsub

abi_route_staticArray:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub staticArray
	int 1
	return

staticArray:
	proto 2 0

	// tests/contracts/abi.ts:30
	// a: StaticArray<uint64, 3> = [11, 22, 33]
	byte 0x000000000000000b00000000000000160000000000000021
	frame_bury -1 // a: uint64[3]

	// tests/contracts/abi.ts:32
	// return a[1];
	frame_dig -1 // a: uint64[3]
	int 8
	int 8
	extract3
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_returnStaticArray:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub returnStaticArray
	int 1
	return

returnStaticArray:
	proto 2 0

	// tests/contracts/abi.ts:36
	// a: StaticArray<uint64, 3> = [11, 22, 33]
	byte 0x000000000000000b00000000000000160000000000000021
	frame_bury -1 // a: uint64[3]

	// tests/contracts/abi.ts:38
	// return a;
	frame_dig -1 // a: uint64[3]
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_staticArrayArg:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 1
	txna ApplicationArgs 1
	callsub staticArrayArg
	int 1
	return

staticArrayArg:
	proto 2 0

	// tests/contracts/abi.ts:42
	// return a[1];
	frame_dig -1 // a: uint64[3]
	int 8
	int 8
	extract3
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_nonLiteralStaticArrayElements:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 5
	callsub nonLiteralStaticArrayElements
	int 1
	return

nonLiteralStaticArrayElements:
	proto 5 0

	// tests/contracts/abi.ts:46
	// n1 = 11
	int 11
	frame_bury -1 // n1: uint64

	// tests/contracts/abi.ts:47
	// n2 = 22
	int 22
	frame_bury -2 // n2: uint64

	// tests/contracts/abi.ts:48
	// n3 = 33
	int 33
	frame_bury -3 // n3: uint64

	// tests/contracts/abi.ts:49
	// a: StaticArray<uint64, 3> = [n1, n2, n3]
	frame_dig -1 // n1: uint64
	itob
	frame_dig -2 // n2: uint64
	itob
	concat
	frame_dig -3 // n3: uint64
	itob
	concat
	frame_bury -4 // a: uint64[3]

	// tests/contracts/abi.ts:51
	// return a[1];
	frame_dig -4 // a: uint64[3]
	int 8
	int 8
	extract3
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_mixedStaticArrayElements:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 5
	callsub mixedStaticArrayElements
	int 1
	return

mixedStaticArrayElements:
	proto 5 0

	// tests/contracts/abi.ts:55
	// n1 = 3
	int 3
	frame_bury -1 // n1: uint64

	// tests/contracts/abi.ts:56
	// n2 = 4
	int 4
	frame_bury -2 // n2: uint64

	// tests/contracts/abi.ts:57
	// n3 = 5
	int 5
	frame_bury -3 // n3: uint64

	// tests/contracts/abi.ts:58
	// a: StaticArray<uint64, 9> = [0, 1, 2, n1, n2, n3, 6, 7, 8]
	byte 0x000000000000000000000000000000010000000000000002
	frame_dig -1 // n1: uint64
	itob
	concat
	frame_dig -2 // n2: uint64
	itob
	concat
	frame_dig -3 // n3: uint64
	itob
	concat
	byte 0x000000000000000600000000000000070000000000000008
	concat
	frame_bury -4 // a: uint64[9]

	// tests/contracts/abi.ts:60
	// return a[1] + a[4] + a[7];
	frame_dig -4 // a: uint64[9]
	int 8
	int 8
	extract3
	btoi
	frame_dig -4 // a: uint64[9]
	int 32
	int 8
	extract3
	btoi
	+
	frame_dig -4 // a: uint64[9]
	int 56
	int 8
	extract3
	btoi
	+
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_nonLiteralStaticArrayAccess:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 3
	callsub nonLiteralStaticArrayAccess
	int 1
	return

nonLiteralStaticArrayAccess:
	proto 3 0

	// tests/contracts/abi.ts:64
	// a: StaticArray<uint64, 3> = [11, 22, 33, 44]
	byte 0x000000000000000b00000000000000160000000000000021000000000000002c
	frame_bury -1 // a: uint64[3]

	// tests/contracts/abi.ts:65
	// n = 2
	int 2
	frame_bury -2 // n: uint64

	// tests/contracts/abi.ts:67
	// return a[n];
	frame_dig -1 // a: uint64[3]
	frame_dig -2 // n: uint64
	int 8
	*
	int 8
	extract3
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_setStaticArrayElement:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub setStaticArrayElement
	int 1
	return

setStaticArrayElement:
	proto 2 0

	// tests/contracts/abi.ts:71
	// a: StaticArray<uint64, 3> = [11, 22, 33]
	byte 0x000000000000000b00000000000000160000000000000021
	frame_bury -1 // a: uint64[3]

	// tests/contracts/abi.ts:73
	// a[1] = 222
	frame_dig -1 // a: uint64[3]
	int 8
	int 222
	itob
	replace3
	frame_bury -1 // a: uint64

	// tests/contracts/abi.ts:75
	// return a[1];
	frame_dig -1 // a: uint64[3]
	int 8
	int 8
	extract3
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_staticArrayInStorageRef:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 3
	callsub staticArrayInStorageRef
	int 1
	return

staticArrayInStorageRef:
	proto 3 0

	// tests/contracts/abi.ts:79
	// a: StaticArray<uint64, 3> = [11, 22, 33]
	byte 0x000000000000000b00000000000000160000000000000021
	frame_bury -1 // a: uint64[3]

	// tests/contracts/abi.ts:81
	// this.gRef.put(a)
	byte "gRef"
	frame_dig -1 // a: uint64[3]
	app_global_put

	// tests/contracts/abi.ts:82
	// this.lRef.put(this.txn.sender, a)
	txn Sender
	byte "lRef"
	frame_dig -1 // a: uint64[3]
	app_local_put

	// tests/contracts/abi.ts:83
	// this.bRef.put(a)
	byte "bRef"
	frame_dig -1 // a: uint64[3]
	box_put

	// tests/contracts/abi.ts:85
	// ret: StaticArray<uint64, 3> = [
	byte "gRef"
	app_global_get
	int 8
	int 8
	extract3
	btoi
	itob
	txn Sender
	byte "lRef"
	app_local_get
	int 8
	int 8
	extract3
	btoi
	itob
	concat
	byte "bRef"
	box_get
	assert
	int 8
	int 8
	extract3
	btoi
	itob
	concat
	frame_bury -2 // ret: uint64[3]

	// tests/contracts/abi.ts:91
	// return ret;
	frame_dig -2 // ret: uint64[3]
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_updateStaticArrayInStorageRef:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 3
	callsub updateStaticArrayInStorageRef
	int 1
	return

updateStaticArrayInStorageRef:
	proto 3 0

	// tests/contracts/abi.ts:95
	// a: StaticArray<uint64, 3> = [11, 22, 33]
	byte 0x000000000000000b00000000000000160000000000000021
	frame_bury -1 // a: uint64[3]

	// tests/contracts/abi.ts:97
	// this.gRef.put(a)
	byte "gRef"
	frame_dig -1 // a: uint64[3]
	app_global_put

	// tests/contracts/abi.ts:98
	// this.lRef.put(this.txn.sender, a)
	txn Sender
	byte "lRef"
	frame_dig -1 // a: uint64[3]
	app_local_put

	// tests/contracts/abi.ts:99
	// this.bRef.put(a)
	byte "bRef"
	frame_dig -1 // a: uint64[3]
	box_put

	// tests/contracts/abi.ts:101
	// this.gRef.get()[1] = 111
	byte "gRef"
	app_global_get
	int 8
	int 111
	itob
	replace3
	byte "gRef"
	swap
	app_global_put

	// tests/contracts/abi.ts:102
	// this.lRef.get(this.txn.sender)[1] = 222
	txn Sender
	byte "lRef"
	app_local_get
	int 8
	int 222
	itob
	replace3
	txn Sender
	byte "lRef"
	uncover 2
	app_local_put

	// tests/contracts/abi.ts:103
	// this.bRef.get()[1] = 333
	byte "bRef"
	box_get
	assert
	int 8
	int 333
	itob
	replace3
	byte "bRef"
	swap
	box_put

	// tests/contracts/abi.ts:105
	// ret: StaticArray<uint64, 3> = [
	byte "gRef"
	app_global_get
	int 8
	int 8
	extract3
	btoi
	itob
	txn Sender
	byte "lRef"
	app_local_get
	int 8
	int 8
	extract3
	btoi
	itob
	concat
	byte "bRef"
	box_get
	assert
	int 8
	int 8
	extract3
	btoi
	itob
	concat
	frame_bury -2 // ret: uint64[3]

	// tests/contracts/abi.ts:111
	// return ret;
	frame_dig -2 // ret: uint64[3]
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_staticArrayInStorageMap:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 3
	callsub staticArrayInStorageMap
	int 1
	return

staticArrayInStorageMap:
	proto 3 0

	// tests/contracts/abi.ts:115
	// a: StaticArray<uint64, 3> = [11, 22, 33]
	byte 0x000000000000000b00000000000000160000000000000021
	frame_bury -1 // a: uint64[3]

	// tests/contracts/abi.ts:117
	// this.gMap.put('gMap', a)
	byte "gMap"
	frame_dig -1 // a: uint64[3]
	app_global_put

	// tests/contracts/abi.ts:118
	// this.lMap.put(this.txn.sender, 'lMap', a)
	txn Sender
	byte "lMap"
	frame_dig -1 // a: uint64[3]
	app_local_put

	// tests/contracts/abi.ts:119
	// this.bMap.put('bMap', a)
	byte "bMap"
	frame_dig -1 // a: uint64[3]
	box_put

	// tests/contracts/abi.ts:121
	// ret: StaticArray<uint64, 3> = [
	byte "gMap"
	app_global_get
	int 8
	int 8
	extract3
	btoi
	itob
	txn Sender
	byte "lMap"
	app_local_get
	int 8
	int 8
	extract3
	btoi
	itob
	concat
	byte "bMap"
	box_get
	assert
	int 8
	int 8
	extract3
	btoi
	itob
	concat
	frame_bury -2 // ret: uint64[3]

	// tests/contracts/abi.ts:127
	// return ret;
	frame_dig -2 // ret: uint64[3]
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_updateStaticArrayInStorageMap:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 3
	callsub updateStaticArrayInStorageMap
	int 1
	return

updateStaticArrayInStorageMap:
	proto 3 0

	// tests/contracts/abi.ts:131
	// a: StaticArray<uint64, 3> = [11, 22, 33]
	byte 0x000000000000000b00000000000000160000000000000021
	frame_bury -1 // a: uint64[3]

	// tests/contracts/abi.ts:133
	// this.gMap.put('gMap', a)
	byte "gMap"
	frame_dig -1 // a: uint64[3]
	app_global_put

	// tests/contracts/abi.ts:134
	// this.lMap.put(this.txn.sender, 'lMap', a)
	txn Sender
	byte "lMap"
	frame_dig -1 // a: uint64[3]
	app_local_put

	// tests/contracts/abi.ts:135
	// this.bMap.put('bMap', a)
	byte "bMap"
	frame_dig -1 // a: uint64[3]
	box_put

	// tests/contracts/abi.ts:137
	// this.gMap.get('gMap')[1] = 1111
	byte "gMap"
	app_global_get
	int 8
	int 1111
	itob
	replace3
	byte "gMap"
	swap
	app_global_put

	// tests/contracts/abi.ts:138
	// this.lMap.get(this.txn.sender, 'lMap')[1] = 2222
	txn Sender
	byte "lMap"
	app_local_get
	int 8
	int 2222
	itob
	replace3
	txn Sender
	byte "lMap"
	uncover 2
	app_local_put

	// tests/contracts/abi.ts:139
	// this.bMap.get('bMap')[1] = 3333
	byte "bMap"
	box_get
	assert
	int 8
	int 3333
	itob
	replace3
	byte "bMap"
	swap
	box_put

	// tests/contracts/abi.ts:141
	// ret: StaticArray<uint64, 3> = [
	byte "gMap"
	app_global_get
	int 8
	int 8
	extract3
	btoi
	itob
	txn Sender
	byte "lMap"
	app_local_get
	int 8
	int 8
	extract3
	btoi
	itob
	concat
	byte "bMap"
	box_get
	assert
	int 8
	int 8
	extract3
	btoi
	itob
	concat
	frame_bury -2 // ret: uint64[3]

	// tests/contracts/abi.ts:147
	// return ret;
	frame_dig -2 // ret: uint64[3]
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_nestedStaticArray:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub nestedStaticArray
	int 1
	return

nestedStaticArray:
	proto 2 0

	// tests/contracts/abi.ts:151
	// a: StaticArray<StaticArray<uint64, 3>, 3> = [[11, 22, 33], [44, 55, 66]]
	byte 0x000000000000000b00000000000000160000000000000021
	byte 0x000000000000002c00000000000000370000000000000042
	concat
	frame_bury -1 // a: uint64[3][3]

	// tests/contracts/abi.ts:153
	// return a[1][1];
	frame_dig -1 // a: uint64[3][3]
	int 32
	int 8
	extract3
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_updateNestedStaticArrayElement:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub updateNestedStaticArrayElement
	int 1
	return

updateNestedStaticArrayElement:
	proto 2 0

	// tests/contracts/abi.ts:157
	// a: StaticArray<StaticArray<uint64, 3>, 3> = [[11, 22, 33], [44, 55, 66]]
	byte 0x000000000000000b00000000000000160000000000000021
	byte 0x000000000000002c00000000000000370000000000000042
	concat
	frame_bury -1 // a: uint64[3][3]

	// tests/contracts/abi.ts:159
	// a[1][1] = 555
	frame_dig -1 // a: uint64[3][3]
	int 32
	int 555
	itob
	replace3
	frame_bury -1 // a: uint64

	// tests/contracts/abi.ts:161
	// return a[1][1];
	frame_dig -1 // a: uint64[3][3]
	int 32
	int 8
	extract3
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_updateNestedStaticArray:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub updateNestedStaticArray
	int 1
	return

updateNestedStaticArray:
	proto 2 0

	// tests/contracts/abi.ts:165
	// a: StaticArray<StaticArray<uint64, 3>, 3> = [[11, 22, 33], [44, 55, 66]]
	byte 0x000000000000000b00000000000000160000000000000021
	byte 0x000000000000002c00000000000000370000000000000042
	concat
	frame_bury -1 // a: uint64[3][3]

	// tests/contracts/abi.ts:167
	// a[1] = [444, 555, 666]
	frame_dig -1 // a: uint64[3][3]
	int 24
	byte 0x00000000000001bc000000000000022b000000000000029a
	replace3
	frame_bury -1 // a: uint64[3]

	// tests/contracts/abi.ts:169
	// return a[1][1];
	frame_dig -1 // a: uint64[3][3]
	int 32
	int 8
	extract3
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_threeDimensionalUint16Array:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub threeDimensionalUint16Array
	int 1
	return

threeDimensionalUint16Array:
	proto 2 0

	// tests/contracts/abi.ts:173
	// a: StaticArray<StaticArray<StaticArray<uint16, 2>, 2>, 2> = [
	byte 0x000b0016
	byte 0x0021002c
	concat
	byte 0x00370042
	byte 0x004d0058
	concat
	concat
	frame_bury -1 // a: uint16[2][2][2]

	// tests/contracts/abi.ts:177
	// a[1][1] = [777, 888]
	frame_dig -1 // a: uint16[2][2][2]
	int 12
	byte 0x03090378
	replace3
	frame_bury -1 // a: uint16[2]

	// tests/contracts/abi.ts:179
	// return a[1][1][1];
	frame_dig -1 // a: uint16[2][2][2]
	int 14
	int 2
	extract3
	byte 0xFFFF
	b&
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_simpleTuple:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub simpleTuple
	int 1
	return

simpleTuple:
	proto 2 0

	// tests/contracts/abi.ts:183
	// a: [uint64, uint16, uint64, uint16] = [11, 22, 33, 44]
	byte 0x000000000000000b00160000000000000021002c
	frame_bury -1 // a: [uint64, uint16, uint64, uint16]

	// tests/contracts/abi.ts:185
	// return a[3];
	frame_dig -1 // a: [uint64, uint16, uint64, uint16]
	int 18
	int 2
	extract3
	byte 0xFFFF
	b&
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_arrayInTuple:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub arrayInTuple
	int 1
	return

arrayInTuple:
	proto 2 0

	// tests/contracts/abi.ts:189
	// a: [uint64, uint16, StaticArray<uint64, 2>, uint16] = [
	byte 0x000000000000000b0016
	byte 0x0000000000000021000000000000002c
	concat
	byte 0x0037
	concat
	frame_bury -1 // a: [uint64, uint16, staticarray<uint64, 2>, uint16]

	// tests/contracts/abi.ts:193
	// return a[2][1];
	frame_dig -1 // a: [uint64, uint16, staticarray<uint64, 2>, uint16]
	int 18
	int 8
	extract3
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_tupleInArray:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub tupleInArray
	int 1
	return

tupleInArray:
	proto 2 0

	// tests/contracts/abi.ts:197
	// a: StaticArray<[uint64, uint16], 2> = [
	byte 0x000000000000000b0000000000000016
	byte 0x0021002c
	concat
	frame_bury -1 // a: [uint64, uint16][2]

	// tests/contracts/abi.ts:201
	// return a[1][1];
	frame_dig -1 // a: [uint64, uint16][2]
	int 18
	int 2
	extract3
	byte 0xFFFF
	b&
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_tupleInTuple:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub tupleInTuple
	int 1
	return

tupleInTuple:
	proto 2 0

	// tests/contracts/abi.ts:205
	// a: [uint16, uint16, [uint64, uint16], [uint16, uint64]] = [
	byte 0x000b0016
	byte 0x0000000000000021002c
	concat
	byte 0x00370000000000000042
	concat
	frame_bury -1 // a: [uint16, uint16, [uint64, uint16], [uint16, uint64]]

	// tests/contracts/abi.ts:209
	// return a[3][1];
	frame_dig -1 // a: [uint16, uint16, [uint64, uint16], [uint16, uint64]]
	int 16
	int 8
	extract3
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_shortTypeNotation:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub shortTypeNotation
	int 1
	return

shortTypeNotation:
	proto 2 0

	// tests/contracts/abi.ts:213
	// a: [uint16<2>, uint64<2>, uint16<2>] = [
	byte 0x000b0016
	byte 0x0000000000000021000000000000002c
	concat
	byte 0x00370042
	concat
	frame_bury -1 // a: [uint16<2>, uint64<2>, uint16<2>]

	// tests/contracts/abi.ts:217
	// return a[2][1];
	frame_dig -1 // a: [uint16<2>, uint64<2>, uint16<2>]
	int 22
	int 2
	extract3
	byte 0xFFFF
	b&
	byte 0x151f7c75
	swap
	concat
	log
	retsub

main:
	txn NumAppArgs
	bnz route_abi
	txn ApplicationID
	int 0
	==
	int OptIn
	txn OnCompletion
	==
	txn ApplicationID
	int 0
	!=
	&&
	int 1
	match bare_route_create bare_route_optIn

route_abi:
	method "staticArray()uint64"
	method "returnStaticArray()uint64[3]"
	method "staticArrayArg(uint64[3])uint64"
	method "nonLiteralStaticArrayElements()uint64"
	method "mixedStaticArrayElements()uint64"
	method "nonLiteralStaticArrayAccess()uint64"
	method "setStaticArrayElement()uint64"
	method "staticArrayInStorageRef()uint64[3]"
	method "updateStaticArrayInStorageRef()uint64[3]"
	method "staticArrayInStorageMap()uint64[3]"
	method "updateStaticArrayInStorageMap()uint64[3]"
	method "nestedStaticArray()uint64"
	method "updateNestedStaticArrayElement()uint64"
	method "updateNestedStaticArray()uint64"
	method "threeDimensionalUint16Array()uint16"
	method "simpleTuple()uint16"
	method "arrayInTuple()uint64"
	method "tupleInArray()uint16"
	method "tupleInTuple()uint64"
	method "shortTypeNotation()uint16"
	txna ApplicationArgs 0
	match abi_route_staticArray abi_route_returnStaticArray abi_route_staticArrayArg abi_route_nonLiteralStaticArrayElements abi_route_mixedStaticArrayElements abi_route_nonLiteralStaticArrayAccess abi_route_setStaticArrayElement abi_route_staticArrayInStorageRef abi_route_updateStaticArrayInStorageRef abi_route_staticArrayInStorageMap abi_route_updateStaticArrayInStorageMap abi_route_nestedStaticArray abi_route_updateNestedStaticArrayElement abi_route_updateNestedStaticArray abi_route_threeDimensionalUint16Array abi_route_simpleTuple abi_route_arrayInTuple abi_route_tupleInArray abi_route_tupleInTuple abi_route_shortTypeNotation