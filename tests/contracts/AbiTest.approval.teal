#pragma version 8
	b main

bare_route_create:
	byte 0x
	dupn 1
	callsub create
	int 1
	return

create:
	proto 1 0
	retsub

bare_route_optIn:
	byte 0x
	dupn 1
	callsub optIn
	int 1
	return

optIn:
	proto 1 0
	retsub

abi_route_staticArray:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub staticArray
	int 1
	return

staticArray:
	proto 2 0

	// tests/contracts/abi.ts:30
	// a: StaticArray<uint64, 3> = [11, 22, 33]
	byte 0x000000000000000b00000000000000160000000000000021
	frame_bury -1 // a: uint64[3]

	// tests/contracts/abi.ts:32
	// return a[1];
	frame_dig -1 // a: uint64[3]
	int 8
	int 8
	extract3
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_returnStaticArray:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub returnStaticArray
	int 1
	return

returnStaticArray:
	proto 2 0

	// tests/contracts/abi.ts:36
	// a: StaticArray<uint64, 3> = [11, 22, 33]
	byte 0x000000000000000b00000000000000160000000000000021
	frame_bury -1 // a: uint64[3]

	// tests/contracts/abi.ts:38
	// return a;
	frame_dig -1 // a: uint64[3]
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_staticArrayArg:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 1
	txna ApplicationArgs 1
	callsub staticArrayArg
	int 1
	return

staticArrayArg:
	proto 2 0

	// tests/contracts/abi.ts:42
	// return a[1];
	frame_dig -1 // a: uint64[3]
	int 8
	int 8
	extract3
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_nonLiteralStaticArrayElements:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 5
	callsub nonLiteralStaticArrayElements
	int 1
	return

nonLiteralStaticArrayElements:
	proto 5 0

	// tests/contracts/abi.ts:46
	// n1 = 11
	int 11
	frame_bury -1 // n1: uint64

	// tests/contracts/abi.ts:47
	// n2 = 22
	int 22
	frame_bury -2 // n2: uint64

	// tests/contracts/abi.ts:48
	// n3 = 33
	int 33
	frame_bury -3 // n3: uint64

	// tests/contracts/abi.ts:49
	// a: StaticArray<uint64, 3> = [n1, n2, n3]
	frame_dig -1 // n1: uint64
	itob
	frame_dig -2 // n2: uint64
	itob
	concat
	frame_dig -3 // n3: uint64
	itob
	concat
	frame_bury -4 // a: uint64[3]

	// tests/contracts/abi.ts:51
	// return a[1];
	frame_dig -4 // a: uint64[3]
	int 8
	int 8
	extract3
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_mixedStaticArrayElements:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 5
	callsub mixedStaticArrayElements
	int 1
	return

mixedStaticArrayElements:
	proto 5 0

	// tests/contracts/abi.ts:55
	// n1 = 3
	int 3
	frame_bury -1 // n1: uint64

	// tests/contracts/abi.ts:56
	// n2 = 4
	int 4
	frame_bury -2 // n2: uint64

	// tests/contracts/abi.ts:57
	// n3 = 5
	int 5
	frame_bury -3 // n3: uint64

	// tests/contracts/abi.ts:58
	// a: StaticArray<uint64, 9> = [0, 1, 2, n1, n2, n3, 6, 7, 8]
	byte 0x000000000000000000000000000000010000000000000002
	frame_dig -1 // n1: uint64
	itob
	concat
	frame_dig -2 // n2: uint64
	itob
	concat
	frame_dig -3 // n3: uint64
	itob
	concat
	byte 0x000000000000000600000000000000070000000000000008
	concat
	frame_bury -4 // a: uint64[9]

	// tests/contracts/abi.ts:60
	// return a[1] + a[4] + a[7];
	frame_dig -4 // a: uint64[9]
	int 8
	int 8
	extract3
	btoi
	frame_dig -4 // a: uint64[9]
	int 32
	int 8
	extract3
	btoi
	+
	frame_dig -4 // a: uint64[9]
	int 56
	int 8
	extract3
	btoi
	+
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_nonLiteralStaticArrayAccess:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 3
	callsub nonLiteralStaticArrayAccess
	int 1
	return

nonLiteralStaticArrayAccess:
	proto 3 0

	// tests/contracts/abi.ts:64
	// a: StaticArray<uint64, 3> = [11, 22, 33, 44]
	byte 0x000000000000000b00000000000000160000000000000021000000000000002c
	frame_bury -1 // a: uint64[3]

	// tests/contracts/abi.ts:65
	// n = 2
	int 2
	frame_bury -2 // n: uint64

	// tests/contracts/abi.ts:67
	// return a[n];
	frame_dig -1 // a: uint64[3]
	frame_dig -2 // n: uint64
	int 8
	*
	int 8
	extract3
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_staticArrayInStorageRef:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 3
	callsub staticArrayInStorageRef
	int 1
	return

staticArrayInStorageRef:
	proto 3 0

	// tests/contracts/abi.ts:81
	// a: StaticArray<uint64, 3> = [11, 22, 33]
	byte 0x000000000000000b00000000000000160000000000000021
	frame_bury -1 // a: uint64[3]

	// tests/contracts/abi.ts:83
	// this.gRef.put(a)
	byte "gRef"
	frame_dig -1 // a: uint64[3]
	app_global_put

	// tests/contracts/abi.ts:84
	// this.lRef.put(this.txn.sender, a)
	txn Sender
	byte "lRef"
	frame_dig -1 // a: uint64[3]
	app_local_put

	// tests/contracts/abi.ts:85
	// this.bRef.put(a)
	byte "bRef"
	frame_dig -1 // a: uint64[3]
	box_put

	// tests/contracts/abi.ts:87
	// ret: StaticArray<uint64, 3> = [
	byte "gRef"
	app_global_get
	int 8
	int 8
	extract3
	btoi
	itob
	txn Sender
	byte "lRef"
	app_local_get
	int 8
	int 8
	extract3
	btoi
	itob
	concat
	byte "bRef"
	box_get
	assert
	int 8
	int 8
	extract3
	btoi
	itob
	concat
	frame_bury -2 // ret: uint64[3]

	// tests/contracts/abi.ts:93
	// return ret;
	frame_dig -2 // ret: uint64[3]
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_staticArrayInStorageMap:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 3
	callsub staticArrayInStorageMap
	int 1
	return

staticArrayInStorageMap:
	proto 3 0

	// tests/contracts/abi.ts:119
	// a: StaticArray<uint64, 3> = [11, 22, 33]
	byte 0x000000000000000b00000000000000160000000000000021
	frame_bury -1 // a: uint64[3]

	// tests/contracts/abi.ts:121
	// this.gMap.put('gMap', a)
	byte "gMap"
	frame_dig -1 // a: uint64[3]
	app_global_put

	// tests/contracts/abi.ts:122
	// this.lMap.put(this.txn.sender, 'lMap', a)
	txn Sender
	byte "lMap"
	frame_dig -1 // a: uint64[3]
	app_local_put

	// tests/contracts/abi.ts:123
	// this.bMap.put('bMap', a)
	byte "bMap"
	frame_dig -1 // a: uint64[3]
	box_put

	// tests/contracts/abi.ts:125
	// ret: StaticArray<uint64, 3> = [
	byte "gMap"
	app_global_get
	int 8
	int 8
	extract3
	btoi
	itob
	txn Sender
	byte "lMap"
	app_local_get
	int 8
	int 8
	extract3
	btoi
	itob
	concat
	byte "bMap"
	box_get
	assert
	int 8
	int 8
	extract3
	btoi
	itob
	concat
	frame_bury -2 // ret: uint64[3]

	// tests/contracts/abi.ts:131
	// return ret;
	frame_dig -2 // ret: uint64[3]
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_simpleTuple:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub simpleTuple
	int 1
	return

simpleTuple:
	proto 2 0

	// tests/contracts/abi.ts:189
	// a: [uint64, uint16, uint64, uint16] = [11, 22, 33, 44]
	byte 0x000000000000000b00160000000000000021002c
	frame_bury -1 // a: [uint64, uint16, uint64, uint16]

	// tests/contracts/abi.ts:191
	// return a[3];
	frame_dig -1 // a: [uint64, uint16, uint64, uint16]
	int 18
	int 2
	extract3
	byte 0xFFFF
	b&
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_arrayInTuple:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub arrayInTuple
	int 1
	return

arrayInTuple:
	proto 2 0

	// tests/contracts/abi.ts:195
	// a: [uint64, uint16, StaticArray<uint64, 2>, uint16] = [
	byte 0x000000000000000b0016
	byte 0x0000000000000021000000000000002c
	concat
	byte 0x0037
	concat
	frame_bury -1 // a: [uint64, uint16, staticarray<uint64, 2>, uint16]

	// tests/contracts/abi.ts:199
	// return a[2][1];
	frame_dig -1 // a: [uint64, uint16, staticarray<uint64, 2>, uint16]
	int 18
	int 8
	extract3
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_tupleInArray:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub tupleInArray
	int 1
	return

tupleInArray:
	proto 2 0

	// tests/contracts/abi.ts:203
	// a: StaticArray<[uint64, uint16], 2> = [
	byte 0x000000000000000b0000000000000016
	byte 0x0021002c
	concat
	frame_bury -1 // a: [uint64, uint16][2]

	// tests/contracts/abi.ts:207
	// return a[1][1];
	frame_dig -1 // a: [uint64, uint16][2]
	int 18
	int 2
	extract3
	byte 0xFFFF
	b&
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_tupleInTuple:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub tupleInTuple
	int 1
	return

tupleInTuple:
	proto 2 0

	// tests/contracts/abi.ts:211
	// a: [uint16, uint16, [uint64, uint16], [uint16, uint64]] = [
	byte 0x000b0016
	byte 0x0000000000000021002c
	concat
	byte 0x00370000000000000042
	concat
	frame_bury -1 // a: [uint16, uint16, [uint64, uint16], [uint16, uint64]]

	// tests/contracts/abi.ts:215
	// return a[3][1];
	frame_dig -1 // a: [uint16, uint16, [uint64, uint16], [uint16, uint64]]
	int 16
	int 8
	extract3
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_shortTypeNotation:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	callsub shortTypeNotation
	int 1
	return

shortTypeNotation:
	proto 2 0

	// tests/contracts/abi.ts:219
	// a: [uint16<2>, uint64<2>, uint16<2>] = [
	byte 0x000b0016
	byte 0x0000000000000021000000000000002c
	concat
	byte 0x00370042
	concat
	frame_bury -1 // a: [uint16<2>, uint64<2>, uint16<2>]

	// tests/contracts/abi.ts:223
	// return a[2][1];
	frame_dig -1 // a: [uint16<2>, uint64<2>, uint16<2>]
	int 22
	int 2
	extract3
	byte 0xFFFF
	b&
	byte 0x151f7c75
	swap
	concat
	log
	retsub

main:
	txn NumAppArgs
	bnz route_abi
	txn ApplicationID
	int 0
	==
	int OptIn
	txn OnCompletion
	==
	txn ApplicationID
	int 0
	!=
	&&
	int 1
	match bare_route_create bare_route_optIn

route_abi:
	method "staticArray()uint64"
	method "returnStaticArray()uint64[3]"
	method "staticArrayArg(uint64[3])uint64"
	method "nonLiteralStaticArrayElements()uint64"
	method "mixedStaticArrayElements()uint64"
	method "nonLiteralStaticArrayAccess()uint64"
	method "staticArrayInStorageRef()uint64[3]"
	method "staticArrayInStorageMap()uint64[3]"
	method "simpleTuple()uint16"
	method "arrayInTuple()uint64"
	method "tupleInArray()uint16"
	method "tupleInTuple()uint64"
	method "shortTypeNotation()uint16"
	txna ApplicationArgs 0
	match abi_route_staticArray abi_route_returnStaticArray abi_route_staticArrayArg abi_route_nonLiteralStaticArrayElements abi_route_mixedStaticArrayElements abi_route_nonLiteralStaticArrayAccess abi_route_staticArrayInStorageRef abi_route_staticArrayInStorageMap abi_route_simpleTuple abi_route_arrayInTuple abi_route_tupleInArray abi_route_tupleInTuple abi_route_shortTypeNotation