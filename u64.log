bun test v1.1.38 (bf2f153f)

tests/abi.test.ts:
(skip) ABI > E2E > staticArray
(skip) ABI > E2E > returnStaticArray
(skip) ABI > E2E > staticArrayArg
(skip) ABI > E2E > nonLiteralStaticArrayElements
(skip) ABI > E2E > mixedStaticArrayElements
(skip) ABI > E2E > nonLiteralStaticArrayAccess
(skip) ABI > E2E > setStaticArrayElement
(skip) ABI > E2E > staticArrayInStorageRef
(skip) ABI > E2E > updateStaticArrayInStorageRef
(skip) ABI > E2E > staticArrayInStorageMap
(skip) ABI > E2E > updateStaticArrayInStorageMap
(skip) ABI > E2E > nestedStaticArray
(skip) ABI > E2E > updateNestedStaticArrayElement
(skip) ABI > E2E > updateNestedStaticArray
(skip) ABI > E2E > threeDimensionalUint16Array
(skip) ABI > E2E > simpleTuple
(skip) ABI > E2E > arrayInTuple
(skip) ABI > E2E > tupleInArray
(skip) ABI > E2E > tupleInTuple
(skip) ABI > E2E > shortTypeNotation
(skip) ABI > E2E > disgusting
(skip) ABI > E2E > returnTuple
(skip) ABI > E2E > tupleArg
(skip) ABI > E2E > dynamicArray
(skip) ABI > E2E > returnDynamicArray
(skip) ABI > E2E > dynamicArrayArg
(skip) ABI > E2E > updateDynamicArrayElement
(skip) ABI > E2E > dynamicTupleArray
(skip) ABI > E2E > returnTupleWithDyamicArray
(skip) ABI > E2E > returnDynamicArrayFromTuple
(skip) ABI > E2E > updateDynamicArrayInTuple
(skip) ABI > E2E > nonLiteralDynamicElementInTuple
(skip) ABI > E2E > arrayPush
(skip) ABI > E2E > arrayPop
(skip) ABI > E2E > arrayPopValue
(skip) ABI > E2E > arraySplice
(skip) ABI > E2E > arraySpliceValue
(skip) ABI > E2E > dynamicArrayElements
(skip) ABI > E2E > spliceLastElement
(skip) ABI > E2E > spliceLastElementValue
(skip) ABI > E2E > spliceFirstElement
(skip) ABI > E2E > spliceFirstElementValue
(skip) ABI > E2E > stringReturn
(skip) ABI > E2E > stringArg
(skip) ABI > E2E > stringInTuple
(skip) ABI > E2E > accesStringInTuple
(skip) ABI > E2E > updateStringInTuple
(skip) ABI > E2E > updateTupleWithOnlyDynamicTypes
(skip) ABI > E2E > shortenDynamicElementInTuple
(skip) ABI > E2E > namedTuple
(skip) ABI > E2E > updateNamedTuple
(skip) ABI > E2E > customTypes
(skip) ABI > E2E > staticStringArrayArg
(skip) ABI > E2E > dynamicAccessOfDynamicElementInStaticArray
(skip) ABI > E2E > dynamicArrayInMiddleOfTuple
(skip) ABI > E2E > accessDynamicArrayInMiddleOfTuple
(skip) ABI > E2E > accessDynamicArrayElementInTuple
(skip) ABI > E2E > updateDynamicArrayInMiddleOfTuple
(skip) ABI > E2E > nestedTuple
(skip) ABI > E2E > updateDynamicElementInTupleWithSameLength
(skip) ABI > E2E > accessDynamicStringArray
(skip) ABI > E2E > txnTypes
(skip) ABI > E2E > arrayLength
(skip) ABI > E2E > stringLength
(skip) ABI > E2E > arrayRef
(skip) ABI > E2E > nestedArrayRef
(skip) ABI > E2E > nonLiteralNestedArrayRef
(skip) ABI > E2E > multiNestedArrayRef
(skip) ABI > E2E > objectArrayRef
(skip) ABI > E2E > stringAccessor
(skip) ABI > E2E > emptyStaticArray
(skip) ABI > E2E > partialStaticArray
(skip) ABI > E2E > emptyDynamicArray
(skip) ABI > E2E > booleanArgAndReturn
(skip) ABI > E2E > boolTuple
(skip) ABI > E2E > staticBoolArray
(skip) ABI > E2E > boolTupleAccess
(skip) ABI > E2E > staticBoolArrayAccess
(skip) ABI > E2E > dynamicBoolArray
(skip) ABI > E2E > dynamicBoolArrayAccess
(skip) ABI > E2E > staticBoolArrayUpdate
(skip) ABI > E2E > dynamicBoolArrayUpdate
(skip) ABI > E2E > boolTupleUpdate
(skip) ABI > E2E > objectRef
(skip) ABI > E2E > storageRefKey
(skip) ABI > E2E > storageRefAccount
(skip) ABI > E2E > angularCasting
(skip) ABI > E2E > castBytesFunction
(skip) ABI > E2E > rawBytesFunction
(skip) ABI > E2E > globalMethodInChain
(skip) ABI > E2E > opcodeParamFromObject
(skip) ABI > E2E > arrayInObjectInState
(skip) ABI > E2E > nestedObject
(skip) ABI > E2E > updateArrayRefInBoxStorage
(skip) ABI > E2E > extractUint
(skip) ABI > E2E > bytesReturn
(skip) ABI > E2E > nestedTypesInSignature
(skip) ABI > E2E > maxUfixed
(skip) ABI > E2E > chainedPropertyAfterTuple
(skip) ABI > E2E > uintCasting
(skip) ABI > E2E > uint64Casting
(skip) ABI > E2E > bytesCasting
(skip) ABI > E2E > biggerByteCasting
(skip) ABI > E2E > smallerByteCasting
(skip) ABI > E2E > multiBytesTuple
(skip) ABI > E2E > boolInObj
(skip) ABI > E2E > plusEqualsArrayValue
(skip) ABI > E2E > plusEqualsObjValue
(skip) ABI > E2E > plusEqualsObjValueInBox
(skip) ABI > E2E > uintNComparison
(skip) ABI > E2E > booleanLastInObj
(skip) ABI > E2E > nestedStructInBoxMap
(skip) ABI > E2E > staticForEach
(skip) ABI > E2E > nestedStaticForEach
(skip) ABI > E2E > nestedStaticForEachInBox
(skip) ABI > E2E > largeNestedStaticForEachInBox
(skip) ABI > E2E > forEachReturn
(skip) ABI > E2E > staticArrayLength
(skip) ABI > E2E > objectInArgs
(skip) ABI > E2E > nestedStaticArrayLength
(skip) ABI > E2E > nestedArrayLengthInObjectVariable
(skip) ABI > staticForOf
(skip) ABI > largeNestedStaticForOfInBox
(skip) ABI > forOfContinue
(skip) ABI > forOfBreak
(skip) ABI > accessStaticArrayInBoxInVariable
(skip) ABI > staticTypeInBox
(skip) ABI > storagePropertyReferenceInBox
(skip) ABI > pushToArrayInBox
(skip) ABI > updateStaticFieldInDynamicObjectInBox
(skip) ABI > dynamicArrayLength
(skip) ABI > dynamicArrayIteration
(skip) ABI > postBoolTupleOffset
(skip) ABI > nestedArrayInBox
(skip) ABI > nestedArrayInBoxLast
(skip) ABI > nestedArrayInBoxWithoutBool
Received error executing Atomic Transaction Composer, for more information enable the debug flag
TEAL                           | PC   | STACK
-------------------------------|------|-------
intcblock 1                    | 1    | []
bytecblock 0x                  | 4    | []
txn ApplicationID              | 7    | [2607]
!                              | 9    | [0]
pushint 6                      | 10   | [0,6]
*                              | 12   | [0]
txn OnCompletion               | 13   | [0,0]
+                              | 15   | [0]
switch *call_NoOp *NOT_IMPL... | 16   | []
pushbytes 0x915e4eb7 // met... | 161  | [0x915e4eb7]
txna ApplicationArgs 0         | 167  | [0x915e4eb7,0x915e4eb7]
match *abi_route_nestedArra... | 170  | []
pushbytes 0x151f7c75           | 43   | [0x151f7c75]
callsub nestedArrayAlongsid... | 49   | [0x151f7c75]
proto 0 1                      | 56   | [0x151f7c75]
bytec 0 // 0x                  | 59   | [0x151f7c75,0]
bytec 0 //  initial head       | 60   | [0x151f7c75,0,0]
bytec 0 //  initial tail       | 61   | [0x151f7c75,0,0,0]
pushbytes 0x0022 // initial... | 62   | [0x151f7c75,0,0,0,0x0022]
pushbytes 0x000261626364656... | 66   | [0x151f7c75,0,0,0,0x0022,0x00026162636465666768]
callsub *process_dynamic_tu... | 78   | [0x151f7c75,0,0,0,0x0022,0x00026162636465666768]
proto 4 3                      | 188  | [0x151f7c75,0,0,0,0x0022,0x00026162636465666768]
frame_dig -4 // tuple head     | 191  | [0x151f7c75,0,0,0,0x0022,0x00026162636465666768,0]
frame_dig -2 // head offset    | 193  | [0x151f7c75,0,0,0,0x0022,0x00026162636465666768,0,0x0022]
concat                         | 195  | [0x151f7c75,0,0,0,0x0022,0x00026162636465666768,0x0022]
frame_bury -4 // tuple head    | 196  | [0x151f7c75,0,0x0022,0,0x0022,0x00026162636465666768]
frame_dig -1 // element        | 198  | [0x151f7c75,0,0x0022,0,0x0022,0x00026162636465666768,0x00026162636465666768]
dup                            | 200  | [0x151f7c75,0,0x0022,0,0x0022,0x00026162636465666768,0x00026162636465666768,0x00026162636465666768]
len                            | 201  | [0x151f7c75,0,0x0022,0,0x0022,0x00026162636465666768,0x00026162636465666768,10]
frame_dig -2 // head offset    | 202  | [0x151f7c75,0,0x0022,0,0x0022,0x00026162636465666768,0x00026162636465666768,10,0x0022]
btoi                           | 204  | [0x151f7c75,0,0x0022,0,0x0022,0x00026162636465666768,0x00026162636465666768,10,34]
+                              | 205  | [0x151f7c75,0,0x0022,0,0x0022,0x00026162636465666768,0x00026162636465666768,44]
itob                           | 206  | [0x151f7c75,0,0x0022,0,0x0022,0x00026162636465666768,0x00026162636465666768,0x000000000000002c]
extract 6 2                    | 207  | [0x151f7c75,0,0x0022,0,0x0022,0x00026162636465666768,0x00026162636465666768,0x002c]
frame_bury -2 // head offset   | 210  | [0x151f7c75,0,0x0022,0,0x002c,0x00026162636465666768,0x00026162636465666768]
frame_dig -3 // tuple tail     | 212  | [0x151f7c75,0,0x0022,0,0x002c,0x00026162636465666768,0x00026162636465666768,0]
swap                           | 214  | [0x151f7c75,0,0x0022,0,0x002c,0x00026162636465666768,0,0x00026162636465666768]
concat                         | 215  | [0x151f7c75,0,0x0022,0,0x002c,0x00026162636465666768,0x00026162636465666768]
frame_bury -3 // tuple tail    | 216  | [0x151f7c75,0,0x0022,0x00026162636465666768,0x002c,0x00026162636465666768]
frame_dig -4 // tuple head     | 218  | [0x151f7c75,0,0x0022,0x00026162636465666768,0x002c,0x00026162636465666768,0x0022]
frame_dig -3 // tuple tail     | 220  | [0x151f7c75,0,0x0022,0x00026162636465666768,0x002c,0x00026162636465666768,0x0022,0x00026162636465666768]
frame_dig -2 // head offset    | 222  | [0x151f7c75,0,0x0022,0x00026162636465666768,0x002c,0x00026162636465666768,0x0022,0x00026162636465666768,0x002c]
retsub                         | 224  | [0x151f7c75,0,0x0022,0x00026162636465666768,0x002c]
pushbytes 0x0000000000000001   | 81   | [0x151f7c75,0,0x0022,0x00026162636465666768,0x002c,0x0000000000000001]
callsub *process_static_tup... | 91   | [0x151f7c75,0,0x0022,0x00026162636465666768,0x002c,0x0000000000000001]
proto 4 3                      | 175  | [0x151f7c75,0,0x0022,0x00026162636465666768,0x002c,0x0000000000000001]
frame_dig -4 // tuple head     | 178  | [0x151f7c75,0,0x0022,0x00026162636465666768,0x002c,0x0000000000000001,0x0022]
frame_dig -1 // element        | 180  | [0x151f7c75,0,0x0022,0x00026162636465666768,0x002c,0x0000000000000001,0x0022,0x0000000000000001]
concat                         | 182  | [0x151f7c75,0,0x0022,0x00026162636465666768,0x002c,0x0000000000000001,0x00220000000000000001]
frame_dig -3 // tuple tail     | 183  | [0x151f7c75,0,0x0022,0x00026162636465666768,0x002c,0x0000000000000001,0x00220000000000000001,0x00026162636465666768]
frame_dig -2 // head offset    | 185  | [0x151f7c75,0,0x0022,0x00026162636465666768,0x002c,0x0000000000000001,0x00220000000000000001,0x00026162636465666768,0x002c]
retsub                         | 187  | [0x151f7c75,0,0x00220000000000000001,0x00026162636465666768,0x002c]
pushbytes 0x0000000000000002   | 94   | [0x151f7c75,0,0x00220000000000000001,0x00026162636465666768,0x002c,0x0000000000000002]
callsub *process_static_tup... | 104  | [0x151f7c75,0,0x00220000000000000001,0x00026162636465666768,0x002c,0x0000000000000002]
proto 4 3                      | 175  | [0x151f7c75,0,0x00220000000000000001,0x00026162636465666768,0x002c,0x0000000000000002]
frame_dig -4 // tuple head     | 178  | [0x151f7c75,0,0x00220000000000000001,0x00026162636465666768,0x002c,0x0000000000000002,0x00220000000000000001]
frame_dig -1 // element        | 180  | [0x151f7c75,0,0x00220000000000000001,0x00026162636465666768,0x002c,0x0000000000000002,0x00220000000000000001,0x0000000000000002]
concat                         | 182  | [0x151f7c75,0,0x00220000000000000001,0x00026162636465666768,0x002c,0x0000000000000002,0x002200000000000000010000000000000002]
frame_dig -3 // tuple tail     | 183  | [0x151f7c75,0,0x00220000000000000001,0x00026162636465666768,0x002c,0x0000000000000002,0x002200000000000000010000000000000002,0x00026162636465666768]
frame_dig -2 // head offset    | 185  | [0x151f7c75,0,0x00220000000000000001,0x00026162636465666768,0x002c,0x0000000000000002,0x002200000000000000010000000000000002,0x00026162636465666768,0x002c]
retsub                         | 187  | [0x151f7c75,0,0x002200000000000000010000000000000002,0x00026162636465666768,0x002c]
pushbytes 0x0000000000000003   | 107  | [0x151f7c75,0,0x002200000000000000010000000000000002,0x00026162636465666768,0x002c,0x0000000000000003]
callsub *process_static_tup... | 117  | [0x151f7c75,0,0x002200000000000000010000000000000002,0x00026162636465666768,0x002c,0x0000000000000003]
proto 4 3                      | 175  | [0x151f7c75,0,0x002200000000000000010000000000000002,0x00026162636465666768,0x002c,0x0000000000000003]
frame_dig -4 // tuple head     | 178  | [0x151f7c75,0,0x002200000000000000010000000000000002,0x00026162636465666768,0x002c,0x0000000000000003,0x002200000000000000010000000000000002]
frame_dig -1 // element        | 180  | [0x151f7c75,0,0x002200000000000000010000000000000002,0x00026162636465666768,0x002c,0x0000000000000003,0x002200000000000000010000000000000002,0x0000000000000003]
concat                         | 182  | [0x151f7c75,0,0x002200000000000000010000000000000002,0x00026162636465666768,0x002c,0x0000000000000003,0x0022000000000000000100000000000000020000000000000003]
frame_dig -3 // tuple tail     | 183  | [0x151f7c75,0,0x002200000000000000010000000000000002,0x00026162636465666768,0x002c,0x0000000000000003,0x0022000000000000000100000000000000020000000000000003,0x00026162636465666768]
frame_dig -2 // head offset    | 185  | [0x151f7c75,0,0x002200000000000000010000000000000002,0x00026162636465666768,0x002c,0x0000000000000003,0x0022000000000000000100000000000000020000000000000003,0x00026162636465666768,0x002c]
retsub                         | 187  | [0x151f7c75,0,0x0022000000000000000100000000000000020000000000000003,0x00026162636465666768,0x002c]
pushbytes 0x0000000000000004   | 120  | [0x151f7c75,0,0x0022000000000000000100000000000000020000000000000003,0x00026162636465666768,0x002c,0x0000000000000004]
callsub *process_static_tup... | 130  | [0x151f7c75,0,0x0022000000000000000100000000000000020000000000000003,0x00026162636465666768,0x002c,0x0000000000000004]
proto 4 3                      | 175  | [0x151f7c75,0,0x0022000000000000000100000000000000020000000000000003,0x00026162636465666768,0x002c,0x0000000000000004]
frame_dig -4 // tuple head     | 178  | [0x151f7c75,0,0x0022000000000000000100000000000000020000000000000003,0x00026162636465666768,0x002c,0x0000000000000004,0x0022000000000000000100000000000000020000000000000003]
frame_dig -1 // element        | 180  | [0x151f7c75,0,0x0022000000000000000100000000000000020000000000000003,0x00026162636465666768,0x002c,0x0000000000000004,0x0022000000000000000100000000000000020000000000000003,0x0000000000000004]
concat                         | 182  | [0x151f7c75,0,0x0022000000000000000100000000000000020000000000000003,0x00026162636465666768,0x002c,0x0000000000000004,0x00220000000000000001000000000000000200000000000000030000000000000004]
frame_dig -3 // tuple tail     | 183  | [0x151f7c75,0,0x0022000000000000000100000000000000020000000000000003,0x00026162636465666768,0x002c,0x0000000000000004,0x00220000000000000001000000000000000200000000000000030000000000000004,0x00026162636465666768]
frame_dig -2 // head offset    | 185  | [0x151f7c75,0,0x0022000000000000000100000000000000020000000000000003,0x00026162636465666768,0x002c,0x0000000000000004,0x00220000000000000001000000000000000200000000000000030000000000000004,0x00026162636465666768,0x002c]
retsub                         | 187  | [0x151f7c75,0,0x00220000000000000001000000000000000200000000000000030000000000000004,0x00026162636465666768,0x002c]
pop // pop head offset         | 133  | [0x151f7c75,0,0x00220000000000000001000000000000000200000000000000030000000000000004,0x00026162636465666768]
concat // concat head and tail | 134  | [0x151f7c75,0,0x0022000000000000000100000000000000020000000000000003000000000000000400026162636465666768]
frame_bury 0 // o: T10         | 135  | [0x151f7c75,0x0022000000000000000100000000000000020000000000000003000000000000000400026162636465666768]
pushint 0                      | 137  | [0x151f7c75,0x0022000000000000000100000000000000020000000000000003000000000000000400026162636465666768,0]
assert                         | 139  | [0x151f7c75,0x0022000000000000000100000000000000020000000000000003000000000000000400026162636465666768]
24 |      * @param errorDetails The details of the logic error
25 |      * @param program The TEAL source code, split by line
26 |      * @param map The source map of the TEAL source code
27 |      */
28 |     constructor(errorDetails, program, map) {
29 |         super();
             ^
error: assert failed pc=139. at:73. Error during resource population simulation in transaction 0: transaction OCF5N2YKM2STTXNZPGFBZ4GNUT6MHMC5NV24P7NYT7MTBVTKKGIQ: logic eval error: assert failed pc=139. Details: app=2607, pc=139, opcodes=frame_bury 0; pushint 0; assert
      at /Users/joe/git/algorandfoundation/tealscript/node_modules/@algorandfoundation/algokit-utils/types/logic-error.mjs:29:9

24 |      * @param errorDetails The details of the logic error
25 |      * @param program The TEAL source code, split by line
26 |      * @param map The source map of the TEAL source code
27 |      */
28 |     constructor(errorDetails, program, map) {
29 |         super();
             ^
error: assert failed pc=139. at:73. Error during resource population simulation in transaction 0: transaction OCF5N2YKM2STTXNZPGFBZ4GNUT6MHMC5NV24P7NYT7MTBVTKKGIQ: logic eval error: assert failed pc=139. Details: app=2607, pc=139, opcodes=frame_bury 0; pushint 0; assert
      at /Users/joe/git/algorandfoundation/tealscript/node_modules/@algorandfoundation/algokit-utils/types/logic-error.mjs:29:9
(fail) ABI > nestedArrayAlongsideBoolean [855.04ms]

 0 pass
 136 skip
 1 fail
 3 expect() calls
Ran 137 tests across 1 files. [2.19s]
